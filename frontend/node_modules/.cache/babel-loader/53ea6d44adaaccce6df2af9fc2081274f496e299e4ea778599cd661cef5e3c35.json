{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,TextField,Button,Grid,IconButton,List,ListItem,ListItemText,ListItemSecondaryAction,Chip,FormControl,InputLabel,Select,MenuItem,Divider,Alert,Autocomplete}from'@mui/material';import{Add as AddIcon,Delete as DeleteIcon,Save as SaveIcon,Restaurant as FoodIcon}from'@mui/icons-material';import{dietService}from'../../services/dietService';import{useAuth}from'../../context/AuthContext';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MealLogger=_ref=>{let{onMealSaved,dailyCalorieTarget,recommendedMeal=null}=_ref;const{isAuthenticated}=useAuth();const navigate=useNavigate();const[mealData,setMealData]=useState({name:'',date:new Date().toISOString().split('T')[0],mealType:'',notes:''});const[foodItems,setFoodItems]=useState([]);const[currentFood,setCurrentFood]=useState({name:'',quantity:'',unit:'',calories:'',protein:'',carbs:'',fat:''});const[showFoodForm,setShowFoodForm]=useState(false);// Handle recommended meal when component receives one\nuseEffect(()=>{if(recommendedMeal){setMealData(prev=>({...prev,name:recommendedMeal.name,mealType:recommendedMeal.mealType.toLowerCase()}));// Convert recommended meal food items to the format expected by the form\nconst recommendedFoodItems=recommendedMeal.foodItems.map((food,index)=>({id:Date.now()+index,name:food.name,quantity:food.quantity,unit:food.unit,calories:food.calories,protein:food.protein,carbs:food.carbs,fat:food.fat}));setFoodItems(recommendedFoodItems);}},[recommendedMeal]);const mealTypes=[{value:'breakfast',label:'Breakfast'},{value:'lunch',label:'Lunch'},{value:'dinner',label:'Dinner'},{value:'snack',label:'Snack'}];const commonFoods=[{name:'Chicken Breast',calories:165,protein:31,carbs:0,fat:3.6,per:100},{name:'Brown Rice',calories:111,protein:2.6,carbs:23,fat:0.9,per:100},{name:'Broccoli',calories:34,protein:2.8,carbs:7,fat:0.4,per:100},{name:'Salmon',calories:208,protein:25,carbs:0,fat:12,per:100},{name:'Sweet Potato',calories:86,protein:1.6,carbs:20,fat:0.1,per:100},{name:'Eggs',calories:155,protein:13,carbs:1.1,fat:11,per:100},{name:'Oatmeal',calories:68,protein:2.4,carbs:12,fat:1.4,per:100},{name:'Banana',calories:89,protein:1.1,carbs:23,fat:0.3,per:100},{name:'Greek Yogurt',calories:59,protein:10,carbs:3.6,fat:0.4,per:100},{name:'Almonds',calories:579,protein:21,carbs:22,fat:50,per:100},{name:'Spinach',calories:23,protein:2.9,carbs:3.6,fat:0.4,per:100},{name:'Quinoa',calories:120,protein:4.4,carbs:22,fat:1.9,per:100}];const units=['g','ml','cup','tbsp','tsp','piece','slice'];const handleMealChange=e=>{const{name,value}=e.target;setMealData(prev=>({...prev,[name]:value}));};const handleFoodChange=e=>{const{name,value}=e.target;setCurrentFood(prev=>({...prev,[name]:value}));};const handleFoodSelect=food=>{if(food){setCurrentFood(prev=>({...prev,name:food.name,calories:food.calories.toString(),protein:food.protein.toString(),carbs:food.carbs.toString(),fat:food.fat.toString()}));}};const addFoodItem=()=>{if(!currentFood.name||!currentFood.quantity||!currentFood.calories){return;}const quantity=parseFloat(currentFood.quantity);const multiplier=quantity/100;// Assuming nutrition values are per 100g\nconst newFoodItem={...currentFood,id:Date.now(),quantity:quantity,calories:Math.round(parseFloat(currentFood.calories)*multiplier),protein:Math.round(parseFloat(currentFood.protein)*multiplier*10)/10,carbs:Math.round(parseFloat(currentFood.carbs)*multiplier*10)/10,fat:Math.round(parseFloat(currentFood.fat)*multiplier*10)/10};setFoodItems(prev=>[...prev,newFoodItem]);setCurrentFood({name:'',quantity:'',unit:'',calories:'',protein:'',carbs:'',fat:''});setShowFoodForm(false);};const removeFoodItem=foodId=>{setFoodItems(prev=>prev.filter(food=>food.id!==foodId));};const[isSaving,setIsSaving]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const saveMeal=async()=>{if(!isAuthenticated){navigate('/login');return;}if(!mealData.name||foodItems.length===0){return;}setIsSaving(true);setError('');setSuccess('');try{const meal={name:mealData.name,mealType:mealData.mealType.charAt(0).toUpperCase()+mealData.mealType.slice(1),// Capitalize first letter\ndate:mealData.date,foodItems:foodItems.map(food=>({name:food.name,quantity:parseFloat(food.quantity),unit:food.unit,calories:parseFloat(food.calories),protein:parseFloat(food.protein),carbs:parseFloat(food.carbs),fat:parseFloat(food.fat)})),notes:mealData.notes};const savedMeal=await dietService.create(meal);// Show success message\nsetSuccess('Meal saved successfully to MongoDB!');// Reset form\nsetMealData({name:'',date:new Date().toISOString().split('T')[0],mealType:'breakfast',notes:''});setFoodItems([]);// Notify parent component\nif(onMealSaved){onMealSaved(savedMeal);}}catch(error){var _error$response;console.error('Error saving meal:',error);if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){setError('Please log in to save meals.');navigate('/login');}else{setError('Failed to save meal. Please try again.');}}finally{setIsSaving(false);}};const getTotalNutrition=()=>{const totalCalories=foodItems.reduce((sum,food)=>sum+food.calories,0);const totalProtein=foodItems.reduce((sum,food)=>sum+food.protein,0);const totalCarbs=foodItems.reduce((sum,food)=>sum+food.carbs,0);const totalFat=foodItems.reduce((sum,food)=>sum+food.fat,0);return{totalCalories,totalProtein,totalCarbs,totalFat};};const nutrition=getTotalNutrition();return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[!isAuthenticated&&/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Please \",/*#__PURE__*/_jsx(\"strong\",{children:\"log in\"}),\" to save your meals to the database.\"]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",sx:{mt:1},onClick:()=>navigate('/login'),children:\"Go to Login\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Log New Meal\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Meal Name\",name:\"name\",value:mealData.name,onChange:handleMealChange,placeholder:\"e.g., Protein Bowl, Healthy Salad, Quick Snack\"})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Date\",name:\"date\",type:\"date\",value:mealData.date,onChange:handleMealChange,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Meal Type\"}),/*#__PURE__*/_jsx(Select,{name:\"mealType\",value:mealData.mealType,onChange:handleMealChange,label:\"Meal Type\",children:mealTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))})]})}),/*#__PURE__*/_jsx(Grid,{size:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Notes\",name:\"notes\",value:mealData.notes,onChange:handleMealChange,multiline:true,rows:2,placeholder:\"How did it taste? Any special notes?\"})})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:3}}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Food Items (\",foodItems.length,\")\"]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setShowFoodForm(true),children:\"Add Food\"})]}),showFoodForm&&/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{mb:2,p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Add Food Item\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsx(Autocomplete,{options:commonFoods,getOptionLabel:option=>option.name,onChange:(event,value)=>handleFoodSelect(value),renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,label:\"Food Name\",name:\"name\",value:currentFood.name,onChange:handleFoodChange})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Quantity\",name:\"quantity\",type:\"number\",value:currentFood.quantity,onChange:handleFoodChange,inputProps:{min:0,step:0.1}})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Unit\"}),/*#__PURE__*/_jsx(Select,{name:\"unit\",value:currentFood.unit,onChange:handleFoodChange,label:\"Unit\",children:units.map(unit=>/*#__PURE__*/_jsx(MenuItem,{value:unit,children:unit},unit))})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Calories (per 100g)\",name:\"calories\",type:\"number\",value:currentFood.calories,onChange:handleFoodChange,inputProps:{min:0,step:0.1}})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Protein (g per 100g)\",name:\"protein\",type:\"number\",value:currentFood.protein,onChange:handleFoodChange,inputProps:{min:0,step:0.1}})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Carbs (g per 100g)\",name:\"carbs\",type:\"number\",value:currentFood.carbs,onChange:handleFoodChange,inputProps:{min:0,step:0.1}})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:3},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Fat (g per 100g)\",name:\"fat\",type:\"number\",value:currentFood.fat,onChange:handleFoodChange,inputProps:{min:0,step:0.1}})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:addFoodItem,disabled:!currentFood.name||!currentFood.quantity||!currentFood.calories,children:\"Add Food\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>setShowFoodForm(false),children:\"Cancel\"})]})]}),foodItems.length>0&&/*#__PURE__*/_jsx(List,{children:foodItems.map(food=>/*#__PURE__*/_jsxs(ListItem,{divider:true,children:[/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:1,children:[/*#__PURE__*/_jsx(FoodIcon,{color:\"primary\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:food.name})]}),secondary:/*#__PURE__*/_jsx(Typography,{component:\"div\",variant:\"body2\",color:\"text.secondary\",children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Chip,{label:`${food.quantity}${food.unit}`,size:\"small\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{label:`${food.calories} cal`,size:\"small\",color:\"warning\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{label:`P: ${food.protein}g`,size:\"small\",variant:\"outlined\",color:\"success\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{label:`C: ${food.carbs}g`,size:\"small\",variant:\"outlined\",color:\"info\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{label:`F: ${food.fat}g`,size:\"small\",variant:\"outlined\",color:\"error\"})]})})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>removeFoodItem(food.id),color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]},food.id))}),foodItems.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:success}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Meal Summary:\"}),\" \",foodItems.length,\" food items,\",nutrition.totalCalories,\" calories,\",nutrition.totalProtein,\"g protein,\",nutrition.totalCarbs,\"g carbs,\",nutrition.totalFat,\"g fat\"]})}),/*#__PURE__*/_jsx(Box,{sx:{mt:2,display:'flex',gap:1},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:saveMeal,disabled:!mealData.name||isSaving,size:\"large\",children:isSaving?'Saving...':'Save Meal'})})]})]})});};export default MealLogger;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","TextField","Button","Grid","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Chip","FormControl","InputLabel","Select","MenuItem","Divider","Alert","Autocomplete","Add","AddIcon","Delete","DeleteIcon","Save","SaveIcon","Restaurant","FoodIcon","dietService","useAuth","useNavigate","jsx","_jsx","jsxs","_jsxs","MealLogger","_ref","onMealSaved","dailyCalorieTarget","recommendedMeal","isAuthenticated","navigate","mealData","setMealData","name","date","Date","toISOString","split","mealType","notes","foodItems","setFoodItems","currentFood","setCurrentFood","quantity","unit","calories","protein","carbs","fat","showFoodForm","setShowFoodForm","prev","toLowerCase","recommendedFoodItems","map","food","index","id","now","mealTypes","value","label","commonFoods","per","units","handleMealChange","e","target","handleFoodChange","handleFoodSelect","toString","addFoodItem","parseFloat","multiplier","newFoodItem","Math","round","removeFoodItem","foodId","filter","isSaving","setIsSaving","error","setError","success","setSuccess","saveMeal","length","meal","charAt","toUpperCase","slice","savedMeal","create","_error$response","console","response","status","getTotalNutrition","totalCalories","reduce","sum","totalProtein","totalCarbs","totalFat","nutrition","children","severity","sx","mb","variant","size","mt","onClick","gutterBottom","container","spacing","xs","sm","fullWidth","onChange","placeholder","type","InputLabelProps","shrink","multiline","rows","my","display","justifyContent","alignItems","startIcon","p","options","getOptionLabel","option","event","renderInput","params","inputProps","min","step","gap","disabled","divider","primary","color","secondary","component","mr","edge"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/diet/MealLogger.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Alert,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Save as SaveIcon,\n  Restaurant as FoodIcon,\n} from '@mui/icons-material';\nimport { dietService } from '../../services/dietService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst MealLogger = ({ onMealSaved, dailyCalorieTarget, recommendedMeal = null }) => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: '',\n    notes: ''\n  });\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: '',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n\n  const [showFoodForm, setShowFoodForm] = useState(false);\n\n  // Handle recommended meal when component receives one\n  useEffect(() => {\n    if (recommendedMeal) {\n      setMealData(prev => ({\n        ...prev,\n        name: recommendedMeal.name,\n        mealType: recommendedMeal.mealType.toLowerCase()\n      }));\n      \n      // Convert recommended meal food items to the format expected by the form\n      const recommendedFoodItems = recommendedMeal.foodItems.map((food, index) => ({\n        id: Date.now() + index,\n        name: food.name,\n        quantity: food.quantity,\n        unit: food.unit,\n        calories: food.calories,\n        protein: food.protein,\n        carbs: food.carbs,\n        fat: food.fat\n      }));\n      \n      setFoodItems(recommendedFoodItems);\n    }\n  }, [recommendedMeal]);\n\n  const mealTypes = [\n    { value: 'breakfast', label: 'Breakfast' },\n    { value: 'lunch', label: 'Lunch' },\n    { value: 'dinner', label: 'Dinner' },\n    { value: 'snack', label: 'Snack' }\n  ];\n\n  const commonFoods = [\n    { name: 'Chicken Breast', calories: 165, protein: 31, carbs: 0, fat: 3.6, per: 100 },\n    { name: 'Brown Rice', calories: 111, protein: 2.6, carbs: 23, fat: 0.9, per: 100 },\n    { name: 'Broccoli', calories: 34, protein: 2.8, carbs: 7, fat: 0.4, per: 100 },\n    { name: 'Salmon', calories: 208, protein: 25, carbs: 0, fat: 12, per: 100 },\n    { name: 'Sweet Potato', calories: 86, protein: 1.6, carbs: 20, fat: 0.1, per: 100 },\n    { name: 'Eggs', calories: 155, protein: 13, carbs: 1.1, fat: 11, per: 100 },\n    { name: 'Oatmeal', calories: 68, protein: 2.4, carbs: 12, fat: 1.4, per: 100 },\n    { name: 'Banana', calories: 89, protein: 1.1, carbs: 23, fat: 0.3, per: 100 },\n    { name: 'Greek Yogurt', calories: 59, protein: 10, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Almonds', calories: 579, protein: 21, carbs: 22, fat: 50, per: 100 },\n    { name: 'Spinach', calories: 23, protein: 2.9, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Quinoa', calories: 120, protein: 4.4, carbs: 22, fat: 1.9, per: 100 }\n  ];\n\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n\n  const handleMealChange = (e) => {\n    const { name, value } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodSelect = (food) => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: '',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n\n  const removeFoodItem = (foodId) => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const saveMeal = async () => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n\n    setIsSaving(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const meal = {\n        name: mealData.name,\n        mealType: mealData.mealType.charAt(0).toUpperCase() + mealData.mealType.slice(1), // Capitalize first letter\n        date: mealData.date,\n        foodItems: foodItems.map(food => ({\n          name: food.name,\n          quantity: parseFloat(food.quantity),\n          unit: food.unit,\n          calories: parseFloat(food.calories),\n          protein: parseFloat(food.protein),\n          carbs: parseFloat(food.carbs),\n          fat: parseFloat(food.fat)\n        })),\n        notes: mealData.notes\n      };\n\n      const savedMeal = await dietService.create(meal);\n\n      // Show success message\n      setSuccess('Meal saved successfully to MongoDB!');\n\n      // Reset form\n      setMealData({\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        mealType: 'breakfast',\n        notes: ''\n      });\n      setFoodItems([]);\n\n      // Notify parent component\n      if (onMealSaved) {\n        onMealSaved(savedMeal);\n      }\n    } catch (error) {\n      console.error('Error saving meal:', error);\n      if (error.response?.status === 401) {\n        setError('Please log in to save meals.');\n        navigate('/login');\n      } else {\n        setError('Failed to save meal. Please try again.');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n\n    return { totalCalories, totalProtein, totalCarbs, totalFat };\n  };\n\n\n  const nutrition = getTotalNutrition();\n\n  return (\n    <Card>\n      <CardContent>\n        {!isAuthenticated && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            <Typography variant=\"body2\">\n              Please <strong>log in</strong> to save your meals to the database.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              size=\"small\" \n              sx={{ mt: 1 }}\n              onClick={() => navigate('/login')}\n            >\n              Go to Login\n            </Button>\n          </Alert>\n        )}\n        \n        <Typography variant=\"h6\" gutterBottom>\n          Log New Meal\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid size={{ xs: 12, sm: 6 }}>\n            <TextField\n              fullWidth\n              label=\"Meal Name\"\n              name=\"name\"\n              value={mealData.name}\n              onChange={handleMealChange}\n              placeholder=\"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 6 }}>\n            <TextField\n              fullWidth\n              label=\"Date\"\n              name=\"date\"\n              type=\"date\"\n              value={mealData.date}\n              onChange={handleMealChange}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 6 }}>\n            <FormControl fullWidth>\n              <InputLabel>Meal Type</InputLabel>\n              <Select\n                name=\"mealType\"\n                value={mealData.mealType}\n                onChange={handleMealChange}\n                label=\"Meal Type\"\n              >\n                {mealTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid size={12}>\n            <TextField\n              fullWidth\n              label=\"Notes\"\n              name=\"notes\"\n              value={mealData.notes}\n              onChange={handleMealChange}\n              multiline\n              rows={2}\n              placeholder=\"How did it taste? Any special notes?\"\n            />\n          </Grid>\n        </Grid>\n\n        <Divider sx={{ my: 3 }} />\n\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\">\n            Food Items ({foodItems.length})\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={() => setShowFoodForm(true)}\n          >\n            Add Food\n          </Button>\n        </Box>\n\n        {showFoodForm && (\n          <Card variant=\"outlined\" sx={{ mb: 2, p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Add Food Item\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid size={{ xs: 12, sm: 6 }}>\n                <Autocomplete\n                  options={commonFoods}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, value) => handleFoodSelect(value)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Food Name\"\n                      name=\"name\"\n                      value={currentFood.name}\n                      onChange={handleFoodChange}\n                    />\n                  )}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Quantity\"\n                  name=\"quantity\"\n                  type=\"number\"\n                  value={currentFood.quantity}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <FormControl fullWidth>\n                  <InputLabel>Unit</InputLabel>\n                  <Select\n                    name=\"unit\"\n                    value={currentFood.unit}\n                    onChange={handleFoodChange}\n                    label=\"Unit\"\n                  >\n                    {units.map((unit) => (\n                      <MenuItem key={unit} value={unit}>\n                        {unit}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Calories (per 100g)\"\n                  name=\"calories\"\n                  type=\"number\"\n                  value={currentFood.calories}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Protein (g per 100g)\"\n                  name=\"protein\"\n                  type=\"number\"\n                  value={currentFood.protein}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Carbs (g per 100g)\"\n                  name=\"carbs\"\n                  type=\"number\"\n                  value={currentFood.carbs}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Fat (g per 100g)\"\n                  name=\"fat\"\n                  type=\"number\"\n                  value={currentFood.fat}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                onClick={addFoodItem}\n                disabled={!currentFood.name || !currentFood.quantity || !currentFood.calories}\n              >\n                Add Food\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => setShowFoodForm(false)}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Card>\n        )}\n\n        {foodItems.length > 0 && (\n          <List>\n            {foodItems.map((food) => (\n              <ListItem key={food.id} divider>\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      <FoodIcon color=\"primary\" />\n                      <Typography variant=\"subtitle1\">\n                        {food.name}\n                      </Typography>\n                    </Box>\n                  }\n                  secondary={\n                    <Typography component=\"div\" variant=\"body2\" color=\"text.secondary\">\n                      <Box>\n                        <Chip \n                          label={`${food.quantity}${food.unit}`} \n                          size=\"small\" \n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`${food.calories} cal`} \n                          size=\"small\" \n                          color=\"warning\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`P: ${food.protein}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"success\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`C: ${food.carbs}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"info\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`F: ${food.fat}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"error\"\n                        />\n                      </Box>\n                    </Typography>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => removeFoodItem(food.id)}\n                    color=\"error\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n\n        {foodItems.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            {success && (\n              <Alert severity=\"success\" sx={{ mb: 2 }}>\n                {success}\n              </Alert>\n            )}\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\n                {error}\n              </Alert>\n            )}\n            \n            <Alert severity=\"info\">\n              <Typography variant=\"body2\">\n                <strong>Meal Summary:</strong> {foodItems.length} food items, \n                {nutrition.totalCalories} calories, \n                {nutrition.totalProtein}g protein, \n                {nutrition.totalCarbs}g carbs, \n                {nutrition.totalFat}g fat\n              </Typography>\n            </Alert>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                startIcon={<SaveIcon />}\n                onClick={saveMeal}\n                disabled={!mealData.name || isSaving}\n                size=\"large\"\n              >\n                {isSaving ? 'Saving...' : 'Save Meal'}\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MealLogger;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,GAAG,CACHC,IAAI,CACJC,WAAW,CACXC,UAAU,CACVC,SAAS,CACTC,MAAM,CACNC,IAAI,CACJC,UAAU,CACVC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,uBAAuB,CACvBC,IAAI,CACJC,WAAW,CACXC,UAAU,CACVC,MAAM,CACNC,QAAQ,CACRC,OAAO,CACPC,KAAK,CACLC,YAAY,KACP,eAAe,CACtB,OACEC,GAAG,GAAI,CAAAC,OAAO,CACdC,MAAM,GAAI,CAAAC,UAAU,CACpBC,IAAI,GAAI,CAAAC,QAAQ,CAChBC,UAAU,GAAI,CAAAC,QAAQ,KACjB,qBAAqB,CAC5B,OAASC,WAAW,KAAQ,4BAA4B,CACxD,OAASC,OAAO,KAAQ,2BAA2B,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAiE,IAAhE,CAAEC,WAAW,CAAEC,kBAAkB,CAAEC,eAAe,CAAG,IAAK,CAAC,CAAAH,IAAA,CAC7E,KAAM,CAAEI,eAAgB,CAAC,CAAGX,OAAO,CAAC,CAAC,CACrC,KAAM,CAAAY,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAG7C,QAAQ,CAAC,CACvC8C,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC5CC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EACT,CAAC,CAAC,CAEF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGtD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACuD,WAAW,CAAEC,cAAc,CAAC,CAAGxD,QAAQ,CAAC,CAC7C8C,IAAI,CAAE,EAAE,CACRW,QAAQ,CAAE,EAAE,CACZC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CAAC,CAAC,CAEF,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGhE,QAAQ,CAAC,KAAK,CAAC,CAEvD;AACAC,SAAS,CAAC,IAAM,CACd,GAAIwC,eAAe,CAAE,CACnBI,WAAW,CAACoB,IAAI,GAAK,CACnB,GAAGA,IAAI,CACPnB,IAAI,CAAEL,eAAe,CAACK,IAAI,CAC1BK,QAAQ,CAAEV,eAAe,CAACU,QAAQ,CAACe,WAAW,CAAC,CACjD,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAAC,oBAAoB,CAAG1B,eAAe,CAACY,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,IAAM,CAC3EC,EAAE,CAAEvB,IAAI,CAACwB,GAAG,CAAC,CAAC,CAAGF,KAAK,CACtBxB,IAAI,CAAEuB,IAAI,CAACvB,IAAI,CACfW,QAAQ,CAAEY,IAAI,CAACZ,QAAQ,CACvBC,IAAI,CAAEW,IAAI,CAACX,IAAI,CACfC,QAAQ,CAAEU,IAAI,CAACV,QAAQ,CACvBC,OAAO,CAAES,IAAI,CAACT,OAAO,CACrBC,KAAK,CAAEQ,IAAI,CAACR,KAAK,CACjBC,GAAG,CAAEO,IAAI,CAACP,GACZ,CAAC,CAAC,CAAC,CAEHR,YAAY,CAACa,oBAAoB,CAAC,CACpC,CACF,CAAC,CAAE,CAAC1B,eAAe,CAAC,CAAC,CAErB,KAAM,CAAAgC,SAAS,CAAG,CAChB,CAAEC,KAAK,CAAE,WAAW,CAAEC,KAAK,CAAE,WAAY,CAAC,CAC1C,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAClC,CAAED,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAS,CAAC,CACpC,CAAED,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAC,CACnC,CAED,KAAM,CAAAC,WAAW,CAAG,CAClB,CAAE9B,IAAI,CAAE,gBAAgB,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,CAAC,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CACpF,CAAE/B,IAAI,CAAE,YAAY,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAClF,CAAE/B,IAAI,CAAE,UAAU,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,CAAC,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC9E,CAAE/B,IAAI,CAAE,QAAQ,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,CAAC,CAAEC,GAAG,CAAE,EAAE,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC3E,CAAE/B,IAAI,CAAE,cAAc,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CACnF,CAAE/B,IAAI,CAAE,MAAM,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,GAAG,CAAEC,GAAG,CAAE,EAAE,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC3E,CAAE/B,IAAI,CAAE,SAAS,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC9E,CAAE/B,IAAI,CAAE,QAAQ,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC7E,CAAE/B,IAAI,CAAE,cAAc,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,GAAG,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CACnF,CAAE/B,IAAI,CAAE,SAAS,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,EAAE,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC7E,CAAE/B,IAAI,CAAE,SAAS,CAAEa,QAAQ,CAAE,EAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,GAAG,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC/E,CAAE/B,IAAI,CAAE,QAAQ,CAAEa,QAAQ,CAAE,GAAG,CAAEC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,EAAE,CAAEC,GAAG,CAAE,GAAG,CAAEe,GAAG,CAAE,GAAI,CAAC,CAC/E,CAED,KAAM,CAAAC,KAAK,CAAG,CAAC,GAAG,CAAE,IAAI,CAAE,KAAK,CAAE,MAAM,CAAE,KAAK,CAAE,OAAO,CAAE,OAAO,CAAC,CAEjE,KAAM,CAAAC,gBAAgB,CAAIC,CAAC,EAAK,CAC9B,KAAM,CAAElC,IAAI,CAAE4B,KAAM,CAAC,CAAGM,CAAC,CAACC,MAAM,CAChCpC,WAAW,CAACoB,IAAI,GAAK,CACnB,GAAGA,IAAI,CACP,CAACnB,IAAI,EAAG4B,KACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAQ,gBAAgB,CAAIF,CAAC,EAAK,CAC9B,KAAM,CAAElC,IAAI,CAAE4B,KAAM,CAAC,CAAGM,CAAC,CAACC,MAAM,CAChCzB,cAAc,CAACS,IAAI,GAAK,CACtB,GAAGA,IAAI,CACP,CAACnB,IAAI,EAAG4B,KACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAS,gBAAgB,CAAId,IAAI,EAAK,CACjC,GAAIA,IAAI,CAAE,CACRb,cAAc,CAACS,IAAI,GAAK,CACtB,GAAGA,IAAI,CACPnB,IAAI,CAAEuB,IAAI,CAACvB,IAAI,CACfa,QAAQ,CAAEU,IAAI,CAACV,QAAQ,CAACyB,QAAQ,CAAC,CAAC,CAClCxB,OAAO,CAAES,IAAI,CAACT,OAAO,CAACwB,QAAQ,CAAC,CAAC,CAChCvB,KAAK,CAAEQ,IAAI,CAACR,KAAK,CAACuB,QAAQ,CAAC,CAAC,CAC5BtB,GAAG,CAAEO,IAAI,CAACP,GAAG,CAACsB,QAAQ,CAAC,CACzB,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAI,CAAC9B,WAAW,CAACT,IAAI,EAAI,CAACS,WAAW,CAACE,QAAQ,EAAI,CAACF,WAAW,CAACI,QAAQ,CAAE,CACvE,OACF,CAEA,KAAM,CAAAF,QAAQ,CAAG6B,UAAU,CAAC/B,WAAW,CAACE,QAAQ,CAAC,CACjD,KAAM,CAAA8B,UAAU,CAAG9B,QAAQ,CAAG,GAAG,CAAE;AAEnC,KAAM,CAAA+B,WAAW,CAAG,CAClB,GAAGjC,WAAW,CACdgB,EAAE,CAAEvB,IAAI,CAACwB,GAAG,CAAC,CAAC,CACdf,QAAQ,CAAEA,QAAQ,CAClBE,QAAQ,CAAE8B,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC/B,WAAW,CAACI,QAAQ,CAAC,CAAG4B,UAAU,CAAC,CACnE3B,OAAO,CAAE6B,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC/B,WAAW,CAACK,OAAO,CAAC,CAAG2B,UAAU,CAAG,EAAE,CAAC,CAAG,EAAE,CAC3E1B,KAAK,CAAE4B,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC/B,WAAW,CAACM,KAAK,CAAC,CAAG0B,UAAU,CAAG,EAAE,CAAC,CAAG,EAAE,CACvEzB,GAAG,CAAE2B,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC/B,WAAW,CAACO,GAAG,CAAC,CAAGyB,UAAU,CAAG,EAAE,CAAC,CAAG,EACnE,CAAC,CAEDjC,YAAY,CAACW,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEuB,WAAW,CAAC,CAAC,CAC5ChC,cAAc,CAAC,CACbV,IAAI,CAAE,EAAE,CACRW,QAAQ,CAAE,EAAE,CACZC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CAAC,CAAC,CACFE,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAA2B,cAAc,CAAIC,MAAM,EAAK,CACjCtC,YAAY,CAACW,IAAI,EAAIA,IAAI,CAAC4B,MAAM,CAACxB,IAAI,EAAIA,IAAI,CAACE,EAAE,GAAKqB,MAAM,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAG/F,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACgG,KAAK,CAAEC,QAAQ,CAAC,CAAGjG,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACkG,OAAO,CAAEC,UAAU,CAAC,CAAGnG,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAoG,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CAAC1D,eAAe,CAAE,CACpBC,QAAQ,CAAC,QAAQ,CAAC,CAClB,OACF,CAEA,GAAI,CAACC,QAAQ,CAACE,IAAI,EAAIO,SAAS,CAACgD,MAAM,GAAK,CAAC,CAAE,CAC5C,OACF,CAEAN,WAAW,CAAC,IAAI,CAAC,CACjBE,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,EAAE,CAAC,CAEd,GAAI,CACF,KAAM,CAAAG,IAAI,CAAG,CACXxD,IAAI,CAAEF,QAAQ,CAACE,IAAI,CACnBK,QAAQ,CAAEP,QAAQ,CAACO,QAAQ,CAACoD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAG5D,QAAQ,CAACO,QAAQ,CAACsD,KAAK,CAAC,CAAC,CAAC,CAAE;AAClF1D,IAAI,CAAEH,QAAQ,CAACG,IAAI,CACnBM,SAAS,CAAEA,SAAS,CAACe,GAAG,CAACC,IAAI,GAAK,CAChCvB,IAAI,CAAEuB,IAAI,CAACvB,IAAI,CACfW,QAAQ,CAAE6B,UAAU,CAACjB,IAAI,CAACZ,QAAQ,CAAC,CACnCC,IAAI,CAAEW,IAAI,CAACX,IAAI,CACfC,QAAQ,CAAE2B,UAAU,CAACjB,IAAI,CAACV,QAAQ,CAAC,CACnCC,OAAO,CAAE0B,UAAU,CAACjB,IAAI,CAACT,OAAO,CAAC,CACjCC,KAAK,CAAEyB,UAAU,CAACjB,IAAI,CAACR,KAAK,CAAC,CAC7BC,GAAG,CAAEwB,UAAU,CAACjB,IAAI,CAACP,GAAG,CAC1B,CAAC,CAAC,CAAC,CACHV,KAAK,CAAER,QAAQ,CAACQ,KAClB,CAAC,CAED,KAAM,CAAAsD,SAAS,CAAG,KAAM,CAAA5E,WAAW,CAAC6E,MAAM,CAACL,IAAI,CAAC,CAEhD;AACAH,UAAU,CAAC,qCAAqC,CAAC,CAEjD;AACAtD,WAAW,CAAC,CACVC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC5CC,QAAQ,CAAE,WAAW,CACrBC,KAAK,CAAE,EACT,CAAC,CAAC,CACFE,YAAY,CAAC,EAAE,CAAC,CAEhB;AACA,GAAIf,WAAW,CAAE,CACfA,WAAW,CAACmE,SAAS,CAAC,CACxB,CACF,CAAE,MAAOV,KAAK,CAAE,KAAAY,eAAA,CACdC,OAAO,CAACb,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,GAAI,EAAAY,eAAA,CAAAZ,KAAK,CAACc,QAAQ,UAAAF,eAAA,iBAAdA,eAAA,CAAgBG,MAAM,IAAK,GAAG,CAAE,CAClCd,QAAQ,CAAC,8BAA8B,CAAC,CACxCtD,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLsD,QAAQ,CAAC,wCAAwC,CAAC,CACpD,CACF,CAAC,OAAS,CACRF,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAiB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,aAAa,CAAG5D,SAAS,CAAC6D,MAAM,CAAC,CAACC,GAAG,CAAE9C,IAAI,GAAK8C,GAAG,CAAG9C,IAAI,CAACV,QAAQ,CAAE,CAAC,CAAC,CAC7E,KAAM,CAAAyD,YAAY,CAAG/D,SAAS,CAAC6D,MAAM,CAAC,CAACC,GAAG,CAAE9C,IAAI,GAAK8C,GAAG,CAAG9C,IAAI,CAACT,OAAO,CAAE,CAAC,CAAC,CAC3E,KAAM,CAAAyD,UAAU,CAAGhE,SAAS,CAAC6D,MAAM,CAAC,CAACC,GAAG,CAAE9C,IAAI,GAAK8C,GAAG,CAAG9C,IAAI,CAACR,KAAK,CAAE,CAAC,CAAC,CACvE,KAAM,CAAAyD,QAAQ,CAAGjE,SAAS,CAAC6D,MAAM,CAAC,CAACC,GAAG,CAAE9C,IAAI,GAAK8C,GAAG,CAAG9C,IAAI,CAACP,GAAG,CAAE,CAAC,CAAC,CAEnE,MAAO,CAAEmD,aAAa,CAAEG,YAAY,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAC9D,CAAC,CAGD,KAAM,CAAAC,SAAS,CAAGP,iBAAiB,CAAC,CAAC,CAErC,mBACE9E,IAAA,CAAC/B,IAAI,EAAAqH,QAAA,cACHpF,KAAA,CAAChC,WAAW,EAAAoH,QAAA,EACT,CAAC9E,eAAe,eACfN,KAAA,CAAChB,KAAK,EAACqG,QAAQ,CAAC,MAAM,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,eACnCpF,KAAA,CAAC/B,UAAU,EAACuH,OAAO,CAAC,OAAO,CAAAJ,QAAA,EAAC,SACnB,cAAAtF,IAAA,WAAAsF,QAAA,CAAQ,QAAM,CAAQ,CAAC,uCAChC,EAAY,CAAC,cACbtF,IAAA,CAAC3B,MAAM,EACLqH,OAAO,CAAC,WAAW,CACnBC,IAAI,CAAC,OAAO,CACZH,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CACdC,OAAO,CAAEA,CAAA,GAAMpF,QAAQ,CAAC,QAAQ,CAAE,CAAA6E,QAAA,CACnC,aAED,CAAQ,CAAC,EACJ,CACR,cAEDtF,IAAA,CAAC7B,UAAU,EAACuH,OAAO,CAAC,IAAI,CAACI,YAAY,MAAAR,QAAA,CAAC,cAEtC,CAAY,CAAC,cAEbpF,KAAA,CAAC5B,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAV,QAAA,eACzBtF,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,WAAW,CACjB7B,IAAI,CAAC,MAAM,CACX4B,KAAK,CAAE9B,QAAQ,CAACE,IAAK,CACrBwF,QAAQ,CAAEvD,gBAAiB,CAC3BwD,WAAW,CAAC,gDAAgD,CAC7D,CAAC,CACE,CAAC,cAEPrG,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,MAAM,CACZ7B,IAAI,CAAC,MAAM,CACX0F,IAAI,CAAC,MAAM,CACX9D,KAAK,CAAE9B,QAAQ,CAACG,IAAK,CACrBuF,QAAQ,CAAEvD,gBAAiB,CAC3B0D,eAAe,CAAE,CAAEC,MAAM,CAAE,IAAK,CAAE,CACnC,CAAC,CACE,CAAC,cAEPxG,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BpF,KAAA,CAACrB,WAAW,EAACsH,SAAS,MAAAb,QAAA,eACpBtF,IAAA,CAAClB,UAAU,EAAAwG,QAAA,CAAC,WAAS,CAAY,CAAC,cAClCtF,IAAA,CAACjB,MAAM,EACL6B,IAAI,CAAC,UAAU,CACf4B,KAAK,CAAE9B,QAAQ,CAACO,QAAS,CACzBmF,QAAQ,CAAEvD,gBAAiB,CAC3BJ,KAAK,CAAC,WAAW,CAAA6C,QAAA,CAEhB/C,SAAS,CAACL,GAAG,CAAEoE,IAAI,eAClBtG,IAAA,CAAChB,QAAQ,EAAkBwD,KAAK,CAAE8D,IAAI,CAAC9D,KAAM,CAAA8C,QAAA,CAC1CgB,IAAI,CAAC7D,KAAK,EADE6D,IAAI,CAAC9D,KAEV,CACX,CAAC,CACI,CAAC,EACE,CAAC,CACV,CAAC,cAEPxC,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,EAAG,CAAAL,QAAA,cACbtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,OAAO,CACb7B,IAAI,CAAC,OAAO,CACZ4B,KAAK,CAAE9B,QAAQ,CAACQ,KAAM,CACtBkF,QAAQ,CAAEvD,gBAAiB,CAC3B4D,SAAS,MACTC,IAAI,CAAE,CAAE,CACRL,WAAW,CAAC,sCAAsC,CACnD,CAAC,CACE,CAAC,EACH,CAAC,cAEPrG,IAAA,CAACf,OAAO,EAACuG,EAAE,CAAE,CAAEmB,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAE1BzG,KAAA,CAAClC,GAAG,EAAC4I,OAAO,CAAC,MAAM,CAACC,cAAc,CAAC,eAAe,CAACC,UAAU,CAAC,QAAQ,CAACrB,EAAE,CAAE,CAAE,CAAAH,QAAA,eAC3EpF,KAAA,CAAC/B,UAAU,EAACuH,OAAO,CAAC,IAAI,CAAAJ,QAAA,EAAC,cACX,CAACnE,SAAS,CAACgD,MAAM,CAAC,GAChC,EAAY,CAAC,cACbnE,IAAA,CAAC3B,MAAM,EACLqH,OAAO,CAAC,UAAU,CAClBqB,SAAS,cAAE/G,IAAA,CAACX,OAAO,GAAE,CAAE,CACvBwG,OAAO,CAAEA,CAAA,GAAM/D,eAAe,CAAC,IAAI,CAAE,CAAAwD,QAAA,CACtC,UAED,CAAQ,CAAC,EACN,CAAC,CAELzD,YAAY,eACX3B,KAAA,CAACjC,IAAI,EAACyH,OAAO,CAAC,UAAU,CAACF,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEuB,CAAC,CAAE,CAAE,CAAE,CAAA1B,QAAA,eAC3CtF,IAAA,CAAC7B,UAAU,EAACuH,OAAO,CAAC,WAAW,CAACI,YAAY,MAAAR,QAAA,CAAC,eAE7C,CAAY,CAAC,cAEbpF,KAAA,CAAC5B,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAV,QAAA,eACzBtF,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAACb,YAAY,EACX8H,OAAO,CAAEvE,WAAY,CACrBwE,cAAc,CAAGC,MAAM,EAAKA,MAAM,CAACvG,IAAK,CACxCwF,QAAQ,CAAEA,CAACgB,KAAK,CAAE5E,KAAK,GAAKS,gBAAgB,CAACT,KAAK,CAAE,CACpD6E,WAAW,CAAGC,MAAM,eAClBtH,IAAA,CAAC5B,SAAS,KACJkJ,MAAM,CACV7E,KAAK,CAAC,WAAW,CACjB7B,IAAI,CAAC,MAAM,CACX4B,KAAK,CAAEnB,WAAW,CAACT,IAAK,CACxBwF,QAAQ,CAAEpD,gBAAiB,CAC5B,CACD,CACH,CAAC,CACE,CAAC,cAEPhD,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,UAAU,CAChB7B,IAAI,CAAC,UAAU,CACf0F,IAAI,CAAC,QAAQ,CACb9D,KAAK,CAAEnB,WAAW,CAACE,QAAS,CAC5B6E,QAAQ,CAAEpD,gBAAiB,CAC3BuE,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,GAAI,CAAE,CACnC,CAAC,CACE,CAAC,cAEPzH,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BpF,KAAA,CAACrB,WAAW,EAACsH,SAAS,MAAAb,QAAA,eACpBtF,IAAA,CAAClB,UAAU,EAAAwG,QAAA,CAAC,MAAI,CAAY,CAAC,cAC7BtF,IAAA,CAACjB,MAAM,EACL6B,IAAI,CAAC,MAAM,CACX4B,KAAK,CAAEnB,WAAW,CAACG,IAAK,CACxB4E,QAAQ,CAAEpD,gBAAiB,CAC3BP,KAAK,CAAC,MAAM,CAAA6C,QAAA,CAEX1C,KAAK,CAACV,GAAG,CAAEV,IAAI,eACdxB,IAAA,CAAChB,QAAQ,EAAYwD,KAAK,CAAEhB,IAAK,CAAA8D,QAAA,CAC9B9D,IAAI,EADQA,IAEL,CACX,CAAC,CACI,CAAC,EACE,CAAC,CACV,CAAC,cAEPxB,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,qBAAqB,CAC3B7B,IAAI,CAAC,UAAU,CACf0F,IAAI,CAAC,QAAQ,CACb9D,KAAK,CAAEnB,WAAW,CAACI,QAAS,CAC5B2E,QAAQ,CAAEpD,gBAAiB,CAC3BuE,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,GAAI,CAAE,CACnC,CAAC,CACE,CAAC,cAEPzH,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,sBAAsB,CAC5B7B,IAAI,CAAC,SAAS,CACd0F,IAAI,CAAC,QAAQ,CACb9D,KAAK,CAAEnB,WAAW,CAACK,OAAQ,CAC3B0E,QAAQ,CAAEpD,gBAAiB,CAC3BuE,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,GAAI,CAAE,CACnC,CAAC,CACE,CAAC,cAEPzH,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,oBAAoB,CAC1B7B,IAAI,CAAC,OAAO,CACZ0F,IAAI,CAAC,QAAQ,CACb9D,KAAK,CAAEnB,WAAW,CAACM,KAAM,CACzByE,QAAQ,CAAEpD,gBAAiB,CAC3BuE,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,GAAI,CAAE,CACnC,CAAC,CACE,CAAC,cAEPzH,IAAA,CAAC1B,IAAI,EAACqH,IAAI,CAAE,CAAEM,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,cAC5BtF,IAAA,CAAC5B,SAAS,EACR+H,SAAS,MACT1D,KAAK,CAAC,kBAAkB,CACxB7B,IAAI,CAAC,KAAK,CACV0F,IAAI,CAAC,QAAQ,CACb9D,KAAK,CAAEnB,WAAW,CAACO,GAAI,CACvBwE,QAAQ,CAAEpD,gBAAiB,CAC3BuE,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,GAAI,CAAE,CACnC,CAAC,CACE,CAAC,EACH,CAAC,cAEPvH,KAAA,CAAClC,GAAG,EAACwH,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAC,CAAEgB,OAAO,CAAE,MAAM,CAAEc,GAAG,CAAE,CAAE,CAAE,CAAApC,QAAA,eAC1CtF,IAAA,CAAC3B,MAAM,EACLqH,OAAO,CAAC,WAAW,CACnBG,OAAO,CAAE1C,WAAY,CACrBwE,QAAQ,CAAE,CAACtG,WAAW,CAACT,IAAI,EAAI,CAACS,WAAW,CAACE,QAAQ,EAAI,CAACF,WAAW,CAACI,QAAS,CAAA6D,QAAA,CAC/E,UAED,CAAQ,CAAC,cACTtF,IAAA,CAAC3B,MAAM,EACLqH,OAAO,CAAC,UAAU,CAClBG,OAAO,CAAEA,CAAA,GAAM/D,eAAe,CAAC,KAAK,CAAE,CAAAwD,QAAA,CACvC,QAED,CAAQ,CAAC,EACN,CAAC,EACF,CACP,CAEAnE,SAAS,CAACgD,MAAM,CAAG,CAAC,eACnBnE,IAAA,CAACxB,IAAI,EAAA8G,QAAA,CACFnE,SAAS,CAACe,GAAG,CAAEC,IAAI,eAClBjC,KAAA,CAACzB,QAAQ,EAAemJ,OAAO,MAAAtC,QAAA,eAC7BtF,IAAA,CAACtB,YAAY,EACXmJ,OAAO,cACL3H,KAAA,CAAClC,GAAG,EAAC4I,OAAO,CAAC,MAAM,CAACE,UAAU,CAAC,QAAQ,CAACY,GAAG,CAAE,CAAE,CAAApC,QAAA,eAC7CtF,IAAA,CAACL,QAAQ,EAACmI,KAAK,CAAC,SAAS,CAAE,CAAC,cAC5B9H,IAAA,CAAC7B,UAAU,EAACuH,OAAO,CAAC,WAAW,CAAAJ,QAAA,CAC5BnD,IAAI,CAACvB,IAAI,CACA,CAAC,EACV,CACN,CACDmH,SAAS,cACP/H,IAAA,CAAC7B,UAAU,EAAC6J,SAAS,CAAC,KAAK,CAACtC,OAAO,CAAC,OAAO,CAACoC,KAAK,CAAC,gBAAgB,CAAAxC,QAAA,cAChEpF,KAAA,CAAClC,GAAG,EAAAsH,QAAA,eACFtF,IAAA,CAACpB,IAAI,EACH6D,KAAK,CAAE,GAAGN,IAAI,CAACZ,QAAQ,GAAGY,IAAI,CAACX,IAAI,EAAG,CACtCmE,IAAI,CAAC,OAAO,CACZH,EAAE,CAAE,CAAEyC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFjI,IAAA,CAACpB,IAAI,EACH6D,KAAK,CAAE,GAAGN,IAAI,CAACV,QAAQ,MAAO,CAC9BkE,IAAI,CAAC,OAAO,CACZmC,KAAK,CAAC,SAAS,CACftC,EAAE,CAAE,CAAEyC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFjI,IAAA,CAACpB,IAAI,EACH6D,KAAK,CAAE,MAAMN,IAAI,CAACT,OAAO,GAAI,CAC7BiE,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,UAAU,CAClBoC,KAAK,CAAC,SAAS,CACftC,EAAE,CAAE,CAAEyC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFjI,IAAA,CAACpB,IAAI,EACH6D,KAAK,CAAE,MAAMN,IAAI,CAACR,KAAK,GAAI,CAC3BgE,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,UAAU,CAClBoC,KAAK,CAAC,MAAM,CACZtC,EAAE,CAAE,CAAEyC,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFjI,IAAA,CAACpB,IAAI,EACH6D,KAAK,CAAE,MAAMN,IAAI,CAACP,GAAG,GAAI,CACzB+D,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,UAAU,CAClBoC,KAAK,CAAC,OAAO,CACd,CAAC,EACC,CAAC,CACI,CACb,CACF,CAAC,cACF9H,IAAA,CAACrB,uBAAuB,EAAA2G,QAAA,cACtBtF,IAAA,CAACzB,UAAU,EACT2J,IAAI,CAAC,KAAK,CACVrC,OAAO,CAAEA,CAAA,GAAMpC,cAAc,CAACtB,IAAI,CAACE,EAAE,CAAE,CACvCyF,KAAK,CAAC,OAAO,CAAAxC,QAAA,cAEbtF,IAAA,CAACT,UAAU,GAAE,CAAC,CACJ,CAAC,CACU,CAAC,GAxDb4C,IAAI,CAACE,EAyDV,CACX,CAAC,CACE,CACP,CAEAlB,SAAS,CAACgD,MAAM,CAAG,CAAC,eACnBjE,KAAA,CAAClC,GAAG,EAACwH,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAN,QAAA,EAChBtB,OAAO,eACNhE,IAAA,CAACd,KAAK,EAACqG,QAAQ,CAAC,SAAS,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,CACrCtB,OAAO,CACH,CACR,CACAF,KAAK,eACJ9D,IAAA,CAACd,KAAK,EAACqG,QAAQ,CAAC,OAAO,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,CACnCxB,KAAK,CACD,CACR,cAED9D,IAAA,CAACd,KAAK,EAACqG,QAAQ,CAAC,MAAM,CAAAD,QAAA,cACpBpF,KAAA,CAAC/B,UAAU,EAACuH,OAAO,CAAC,OAAO,CAAAJ,QAAA,eACzBtF,IAAA,WAAAsF,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACnE,SAAS,CAACgD,MAAM,CAAC,cACjD,CAACkB,SAAS,CAACN,aAAa,CAAC,YACzB,CAACM,SAAS,CAACH,YAAY,CAAC,YACxB,CAACG,SAAS,CAACF,UAAU,CAAC,UACtB,CAACE,SAAS,CAACD,QAAQ,CAAC,OACtB,EAAY,CAAC,CACR,CAAC,cAERpF,IAAA,CAAChC,GAAG,EAACwH,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAC,CAAEgB,OAAO,CAAE,MAAM,CAAEc,GAAG,CAAE,CAAE,CAAE,CAAApC,QAAA,cAC1CtF,IAAA,CAAC3B,MAAM,EACLqH,OAAO,CAAC,WAAW,CACnBqB,SAAS,cAAE/G,IAAA,CAACP,QAAQ,GAAE,CAAE,CACxBoG,OAAO,CAAE3B,QAAS,CAClByD,QAAQ,CAAE,CAACjH,QAAQ,CAACE,IAAI,EAAIgD,QAAS,CACrC+B,IAAI,CAAC,OAAO,CAAAL,QAAA,CAEX1B,QAAQ,CAAG,WAAW,CAAG,WAAW,CAC/B,CAAC,CACN,CAAC,EACH,CACN,EACU,CAAC,CACV,CAAC,CAEX,CAAC,CAED,cAAe,CAAAzD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}