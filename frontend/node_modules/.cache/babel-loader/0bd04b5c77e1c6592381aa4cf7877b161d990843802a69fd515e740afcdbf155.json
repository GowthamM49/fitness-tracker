{"ast":null,"code":"import api from './api';\nexport const recommendationService = {\n  // Get personalized meal recommendations\n  async getMealRecommendations() {\n    try {\n      const {\n        data\n      } = await api.get('/recommendations/meals');\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations:', error);\n      throw error;\n    }\n  },\n  // Get recommendations for specific meal type\n  async getMealRecommendationsByType(mealType) {\n    try {\n      const {\n        data\n      } = await api.get(`/recommendations/meals/${mealType}`);\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations by type:', error);\n      throw error;\n    }\n  },\n  // Get breakfast recommendations\n  async getBreakfastRecommendations() {\n    return this.getMealRecommendationsByType('breakfast');\n  },\n  // Get lunch recommendations\n  async getLunchRecommendations() {\n    return this.getMealRecommendationsByType('lunch');\n  },\n  // Get dinner recommendations\n  async getDinnerRecommendations() {\n    return this.getMealRecommendationsByType('dinner');\n  },\n  // Get snack recommendations\n  async getSnackRecommendations() {\n    return this.getMealRecommendationsByType('snack');\n  },\n  // Save a custom meal\n  async saveCustomMeal(mealData) {\n    try {\n      const {\n        data\n      } = await api.post('/recommendations/meals/custom', {\n        mealData\n      });\n      return data;\n    } catch (error) {\n      console.error('Error saving custom meal:', error);\n      throw error;\n    }\n  },\n  // Get user's custom meals\n  async getCustomMeals(mealType = null) {\n    try {\n      const params = mealType ? {\n        mealType\n      } : {};\n      const {\n        data\n      } = await api.get('/recommendations/meals/custom', {\n        params\n      });\n      return data;\n    } catch (error) {\n      console.error('Error fetching custom meals:', error);\n      throw error;\n    }\n  },\n  // Rate a meal\n  async rateMeal(mealId, rating, feedback = '') {\n    try {\n      const {\n        data\n      } = await api.post(`/recommendations/meals/${mealId}/rate`, {\n        rating,\n        feedback\n      });\n      return data;\n    } catch (error) {\n      console.error('Error rating meal:', error);\n      throw error;\n    }\n  }\n};\nexport default recommendationService;","map":{"version":3,"names":["api","recommendationService","getMealRecommendations","data","get","error","console","getMealRecommendationsByType","mealType","getBreakfastRecommendations","getLunchRecommendations","getDinnerRecommendations","getSnackRecommendations","saveCustomMeal","mealData","post","getCustomMeals","params","rateMeal","mealId","rating","feedback"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/services/recommendationService.js"],"sourcesContent":["import api from './api';\n\nexport const recommendationService = {\n  // Get personalized meal recommendations\n  async getMealRecommendations() {\n    try {\n      const { data } = await api.get('/recommendations/meals');\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations:', error);\n      throw error;\n    }\n  },\n\n  // Get recommendations for specific meal type\n  async getMealRecommendationsByType(mealType) {\n    try {\n      const { data } = await api.get(`/recommendations/meals/${mealType}`);\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations by type:', error);\n      throw error;\n    }\n  },\n\n  // Get breakfast recommendations\n  async getBreakfastRecommendations() {\n    return this.getMealRecommendationsByType('breakfast');\n  },\n\n  // Get lunch recommendations\n  async getLunchRecommendations() {\n    return this.getMealRecommendationsByType('lunch');\n  },\n\n  // Get dinner recommendations\n  async getDinnerRecommendations() {\n    return this.getMealRecommendationsByType('dinner');\n  },\n\n  // Get snack recommendations\n  async getSnackRecommendations() {\n    return this.getMealRecommendationsByType('snack');\n  },\n\n  // Save a custom meal\n  async saveCustomMeal(mealData) {\n    try {\n      const { data } = await api.post('/recommendations/meals/custom', { mealData });\n      return data;\n    } catch (error) {\n      console.error('Error saving custom meal:', error);\n      throw error;\n    }\n  },\n\n  // Get user's custom meals\n  async getCustomMeals(mealType = null) {\n    try {\n      const params = mealType ? { mealType } : {};\n      const { data } = await api.get('/recommendations/meals/custom', { params });\n      return data;\n    } catch (error) {\n      console.error('Error fetching custom meals:', error);\n      throw error;\n    }\n  },\n\n  // Rate a meal\n  async rateMeal(mealId, rating, feedback = '') {\n    try {\n      const { data } = await api.post(`/recommendations/meals/${mealId}/rate`, {\n        rating,\n        feedback\n      });\n      return data;\n    } catch (error) {\n      console.error('Error rating meal:', error);\n      throw error;\n    }\n  }\n};\n\nexport default recommendationService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,qBAAqB,GAAG;EACnC;EACA,MAAMC,sBAAsBA,CAAA,EAAG;IAC7B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,wBAAwB,CAAC;MACxD,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,4BAA4BA,CAACC,QAAQ,EAAE;IAC3C,IAAI;MACF,MAAM;QAAEL;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,0BAA0BI,QAAQ,EAAE,CAAC;MACpE,OAAOL,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,2BAA2BA,CAAA,EAAG;IAClC,OAAO,IAAI,CAACF,4BAA4B,CAAC,WAAW,CAAC;EACvD,CAAC;EAED;EACA,MAAMG,uBAAuBA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACH,4BAA4B,CAAC,OAAO,CAAC;EACnD,CAAC;EAED;EACA,MAAMI,wBAAwBA,CAAA,EAAG;IAC/B,OAAO,IAAI,CAACJ,4BAA4B,CAAC,QAAQ,CAAC;EACpD,CAAC;EAED;EACA,MAAMK,uBAAuBA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACL,4BAA4B,CAAC,OAAO,CAAC;EACnD,CAAC;EAED;EACA,MAAMM,cAAcA,CAACC,QAAQ,EAAE;IAC7B,IAAI;MACF,MAAM;QAAEX;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACe,IAAI,CAAC,+BAA+B,EAAE;QAAED;MAAS,CAAC,CAAC;MAC9E,OAAOX,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMW,cAAcA,CAACR,QAAQ,GAAG,IAAI,EAAE;IACpC,IAAI;MACF,MAAMS,MAAM,GAAGT,QAAQ,GAAG;QAAEA;MAAS,CAAC,GAAG,CAAC,CAAC;MAC3C,MAAM;QAAEL;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,+BAA+B,EAAE;QAAEa;MAAO,CAAC,CAAC;MAC3E,OAAOd,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMa,QAAQA,CAACC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,GAAG,EAAE,EAAE;IAC5C,IAAI;MACF,MAAM;QAAElB;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACe,IAAI,CAAC,0BAA0BI,MAAM,OAAO,EAAE;QACvEC,MAAM;QACNC;MACF,CAAC,CAAC;MACF,OAAOlB,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}