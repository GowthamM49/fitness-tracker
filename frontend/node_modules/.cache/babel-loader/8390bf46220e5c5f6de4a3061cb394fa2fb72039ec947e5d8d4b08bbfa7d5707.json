{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth_tq3ir2j\\\\OneDrive\\\\Documents\\\\project 3rd year\\\\one credit\\\\Fitness Tracker\\\\src\\\\components\\\\diet\\\\MealLogger.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, Button, Grid, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, Chip, FormControl, InputLabel, Select, MenuItem, Divider, Alert, Autocomplete } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Save as SaveIcon, Restaurant as FoodIcon, LocalFireDepartment as CalorieIcon } from '@mui/icons-material';\nimport { dietService } from '../../services/dietService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealLogger = ({\n  onMealSaved,\n  dailyCalorieTarget = 2000\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n  const [showFoodForm, setShowFoodForm] = useState(false);\n  const mealTypes = [{\n    value: 'breakfast',\n    label: 'Breakfast'\n  }, {\n    value: 'lunch',\n    label: 'Lunch'\n  }, {\n    value: 'dinner',\n    label: 'Dinner'\n  }, {\n    value: 'snack',\n    label: 'Snack'\n  }];\n  const commonFoods = [{\n    name: 'Chicken Breast',\n    calories: 165,\n    protein: 31,\n    carbs: 0,\n    fat: 3.6,\n    per: 100\n  }, {\n    name: 'Brown Rice',\n    calories: 111,\n    protein: 2.6,\n    carbs: 23,\n    fat: 0.9,\n    per: 100\n  }, {\n    name: 'Broccoli',\n    calories: 34,\n    protein: 2.8,\n    carbs: 7,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Salmon',\n    calories: 208,\n    protein: 25,\n    carbs: 0,\n    fat: 12,\n    per: 100\n  }, {\n    name: 'Sweet Potato',\n    calories: 86,\n    protein: 1.6,\n    carbs: 20,\n    fat: 0.1,\n    per: 100\n  }, {\n    name: 'Eggs',\n    calories: 155,\n    protein: 13,\n    carbs: 1.1,\n    fat: 11,\n    per: 100\n  }, {\n    name: 'Oatmeal',\n    calories: 68,\n    protein: 2.4,\n    carbs: 12,\n    fat: 1.4,\n    per: 100\n  }, {\n    name: 'Banana',\n    calories: 89,\n    protein: 1.1,\n    carbs: 23,\n    fat: 0.3,\n    per: 100\n  }, {\n    name: 'Greek Yogurt',\n    calories: 59,\n    protein: 10,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Almonds',\n    calories: 579,\n    protein: 21,\n    carbs: 22,\n    fat: 50,\n    per: 100\n  }, {\n    name: 'Spinach',\n    calories: 23,\n    protein: 2.9,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Quinoa',\n    calories: 120,\n    protein: 4.4,\n    carbs: 22,\n    fat: 1.9,\n    per: 100\n  }];\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n  const handleMealChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodSelect = food => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n  const removeFoodItem = foodId => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const saveMeal = async () => {\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n    setIsSaving(true);\n    setError('');\n    try {\n      const meal = {\n        name: mealData.name,\n        mealType: mealData.mealType.charAt(0).toUpperCase() + mealData.mealType.slice(1),\n        // Capitalize first letter\n        date: mealData.date,\n        foodItems: foodItems.map(food => ({\n          name: food.name,\n          quantity: parseFloat(food.quantity),\n          unit: food.unit,\n          calories: parseFloat(food.calories),\n          protein: parseFloat(food.protein),\n          carbs: parseFloat(food.carbs),\n          fat: parseFloat(food.fat)\n        })),\n        notes: mealData.notes\n      };\n      const savedMeal = await dietService.create(meal);\n\n      // Reset form\n      setMealData({\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        mealType: 'breakfast',\n        notes: ''\n      });\n      setFoodItems([]);\n\n      // Notify parent component\n      if (onMealSaved) {\n        onMealSaved(savedMeal);\n      }\n    } catch (error) {\n      console.error('Error saving meal:', error);\n      setError('Failed to save meal. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n    return {\n      totalCalories,\n      totalProtein,\n      totalCarbs,\n      totalFat\n    };\n  };\n  const getMealTypeColor = mealType => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n  const nutrition = getTotalNutrition();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Log New Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Meal Name\",\n            name: \"name\",\n            value: mealData.name,\n            onChange: handleMealChange,\n            placeholder: \"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Date\",\n            name: \"date\",\n            type: \"date\",\n            value: mealData.date,\n            onChange: handleMealChange,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"mealType\",\n              value: mealData.mealType,\n              onChange: handleMealChange,\n              label: \"Meal Type\",\n              children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Notes\",\n            name: \"notes\",\n            value: mealData.notes,\n            onChange: handleMealChange,\n            multiline: true,\n            rows: 2,\n            placeholder: \"How did it taste? Any special notes?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Food Items (\", foodItems.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowFoodForm(true),\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), showFoodForm && /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Add Food Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: commonFoods,\n              getOptionLabel: option => option.name,\n              onChange: (event, value) => handleFoodSelect(value),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Food Name\",\n                name: \"name\",\n                value: currentFood.name,\n                onChange: handleFoodChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              value: currentFood.quantity,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"unit\",\n                value: currentFood.unit,\n                onChange: handleFoodChange,\n                label: \"Unit\",\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Calories (per 100g)\",\n              name: \"calories\",\n              type: \"number\",\n              value: currentFood.calories,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Protein (g per 100g)\",\n              name: \"protein\",\n              type: \"number\",\n              value: currentFood.protein,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Carbs (g per 100g)\",\n              name: \"carbs\",\n              type: \"number\",\n              value: currentFood.carbs,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Fat (g per 100g)\",\n              name: \"fat\",\n              type: \"number\",\n              value: currentFood.fat,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: addFoodItem,\n            disabled: !currentFood.name || !currentFood.quantity || !currentFood.calories,\n            children: \"Add Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setShowFoodForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n        children: foodItems.map(food => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              children: [/*#__PURE__*/_jsxDEV(FoodIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: food.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${food.quantity}${food.unit}`,\n                  size: \"small\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${food.calories} cal`,\n                  size: \"small\",\n                  color: \"warning\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `P: ${food.protein}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `C: ${food.carbs}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"info\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `F: ${food.fat}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => removeFoodItem(food.id),\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Meal Summary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), \" \", foodItems.length, \" food items,\", nutrition.totalCalories, \" calories,\", nutrition.totalProtein, \"g protein,\", nutrition.totalCarbs, \"g carbs,\", nutrition.totalFat, \"g fat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 28\n            }, this),\n            onClick: saveMeal,\n            disabled: !mealData.name || isSaving,\n            size: \"large\",\n            children: isSaving ? 'Saving...' : 'Save Meal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(MealLogger, \"5JJ2eqE5ay2orvhUOaNrZX4XiEY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = MealLogger;\nexport default MealLogger;\nvar _c;\n$RefreshReg$(_c, \"MealLogger\");","map":{"version":3,"names":["React","useState","Box","Card","CardContent","Typography","TextField","Button","Grid","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Chip","FormControl","InputLabel","Select","MenuItem","Divider","Alert","Autocomplete","Add","AddIcon","Delete","DeleteIcon","Save","SaveIcon","Restaurant","FoodIcon","LocalFireDepartment","CalorieIcon","dietService","useAuth","useNavigate","jsxDEV","_jsxDEV","MealLogger","onMealSaved","dailyCalorieTarget","_s","isAuthenticated","navigate","mealData","setMealData","name","date","Date","toISOString","split","mealType","notes","foodItems","setFoodItems","currentFood","setCurrentFood","quantity","unit","calories","protein","carbs","fat","showFoodForm","setShowFoodForm","mealTypes","value","label","commonFoods","per","units","handleMealChange","e","target","prev","handleFoodChange","handleFoodSelect","food","toString","addFoodItem","parseFloat","multiplier","newFoodItem","id","now","Math","round","removeFoodItem","foodId","filter","isSaving","setIsSaving","error","setError","saveMeal","length","meal","charAt","toUpperCase","slice","map","savedMeal","create","console","getTotalNutrition","totalCalories","reduce","sum","totalProtein","totalCarbs","totalFat","getMealTypeColor","colors","nutrition","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","fullWidth","onChange","placeholder","type","InputLabelProps","shrink","multiline","rows","sx","my","display","justifyContent","alignItems","mb","startIcon","onClick","p","options","getOptionLabel","option","event","renderInput","params","inputProps","min","step","mt","gap","disabled","divider","primary","color","secondary","component","size","mr","edge","severity","_c","$RefreshReg$"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/src/components/diet/MealLogger.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Alert,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Save as SaveIcon,\n  Restaurant as FoodIcon,\n  LocalFireDepartment as CalorieIcon\n} from '@mui/icons-material';\nimport { dietService } from '../../services/dietService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst MealLogger = ({ onMealSaved, dailyCalorieTarget = 2000 }) => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n\n  const [showFoodForm, setShowFoodForm] = useState(false);\n\n  const mealTypes = [\n    { value: 'breakfast', label: 'Breakfast' },\n    { value: 'lunch', label: 'Lunch' },\n    { value: 'dinner', label: 'Dinner' },\n    { value: 'snack', label: 'Snack' }\n  ];\n\n  const commonFoods = [\n    { name: 'Chicken Breast', calories: 165, protein: 31, carbs: 0, fat: 3.6, per: 100 },\n    { name: 'Brown Rice', calories: 111, protein: 2.6, carbs: 23, fat: 0.9, per: 100 },\n    { name: 'Broccoli', calories: 34, protein: 2.8, carbs: 7, fat: 0.4, per: 100 },\n    { name: 'Salmon', calories: 208, protein: 25, carbs: 0, fat: 12, per: 100 },\n    { name: 'Sweet Potato', calories: 86, protein: 1.6, carbs: 20, fat: 0.1, per: 100 },\n    { name: 'Eggs', calories: 155, protein: 13, carbs: 1.1, fat: 11, per: 100 },\n    { name: 'Oatmeal', calories: 68, protein: 2.4, carbs: 12, fat: 1.4, per: 100 },\n    { name: 'Banana', calories: 89, protein: 1.1, carbs: 23, fat: 0.3, per: 100 },\n    { name: 'Greek Yogurt', calories: 59, protein: 10, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Almonds', calories: 579, protein: 21, carbs: 22, fat: 50, per: 100 },\n    { name: 'Spinach', calories: 23, protein: 2.9, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Quinoa', calories: 120, protein: 4.4, carbs: 22, fat: 1.9, per: 100 }\n  ];\n\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n\n  const handleMealChange = (e) => {\n    const { name, value } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodSelect = (food) => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n\n  const removeFoodItem = (foodId) => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n\n  const saveMeal = async () => {\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n\n    setIsSaving(true);\n    setError('');\n\n    try {\n      const meal = {\n        name: mealData.name,\n        mealType: mealData.mealType.charAt(0).toUpperCase() + mealData.mealType.slice(1), // Capitalize first letter\n        date: mealData.date,\n        foodItems: foodItems.map(food => ({\n          name: food.name,\n          quantity: parseFloat(food.quantity),\n          unit: food.unit,\n          calories: parseFloat(food.calories),\n          protein: parseFloat(food.protein),\n          carbs: parseFloat(food.carbs),\n          fat: parseFloat(food.fat)\n        })),\n        notes: mealData.notes\n      };\n\n      const savedMeal = await dietService.create(meal);\n\n      // Reset form\n      setMealData({\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        mealType: 'breakfast',\n        notes: ''\n      });\n      setFoodItems([]);\n\n      // Notify parent component\n      if (onMealSaved) {\n        onMealSaved(savedMeal);\n      }\n    } catch (error) {\n      console.error('Error saving meal:', error);\n      setError('Failed to save meal. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n\n    return { totalCalories, totalProtein, totalCarbs, totalFat };\n  };\n\n  const getMealTypeColor = (mealType) => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n\n  const nutrition = getTotalNutrition();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Log New Meal\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Meal Name\"\n              name=\"name\"\n              value={mealData.name}\n              onChange={handleMealChange}\n              placeholder=\"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Date\"\n              name=\"date\"\n              type=\"date\"\n              value={mealData.date}\n              onChange={handleMealChange}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth>\n              <InputLabel>Meal Type</InputLabel>\n              <Select\n                name=\"mealType\"\n                value={mealData.mealType}\n                onChange={handleMealChange}\n                label=\"Meal Type\"\n              >\n                {mealTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Notes\"\n              name=\"notes\"\n              value={mealData.notes}\n              onChange={handleMealChange}\n              multiline\n              rows={2}\n              placeholder=\"How did it taste? Any special notes?\"\n            />\n          </Grid>\n        </Grid>\n\n        <Divider sx={{ my: 3 }} />\n\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\">\n            Food Items ({foodItems.length})\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={() => setShowFoodForm(true)}\n          >\n            Add Food\n          </Button>\n        </Box>\n\n        {showFoodForm && (\n          <Card variant=\"outlined\" sx={{ mb: 2, p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Add Food Item\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Autocomplete\n                  options={commonFoods}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, value) => handleFoodSelect(value)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Food Name\"\n                      name=\"name\"\n                      value={currentFood.name}\n                      onChange={handleFoodChange}\n                    />\n                  )}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Quantity\"\n                  name=\"quantity\"\n                  type=\"number\"\n                  value={currentFood.quantity}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <FormControl fullWidth>\n                  <InputLabel>Unit</InputLabel>\n                  <Select\n                    name=\"unit\"\n                    value={currentFood.unit}\n                    onChange={handleFoodChange}\n                    label=\"Unit\"\n                  >\n                    {units.map((unit) => (\n                      <MenuItem key={unit} value={unit}>\n                        {unit}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Calories (per 100g)\"\n                  name=\"calories\"\n                  type=\"number\"\n                  value={currentFood.calories}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Protein (g per 100g)\"\n                  name=\"protein\"\n                  type=\"number\"\n                  value={currentFood.protein}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Carbs (g per 100g)\"\n                  name=\"carbs\"\n                  type=\"number\"\n                  value={currentFood.carbs}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Fat (g per 100g)\"\n                  name=\"fat\"\n                  type=\"number\"\n                  value={currentFood.fat}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                onClick={addFoodItem}\n                disabled={!currentFood.name || !currentFood.quantity || !currentFood.calories}\n              >\n                Add Food\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => setShowFoodForm(false)}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Card>\n        )}\n\n        {foodItems.length > 0 && (\n          <List>\n            {foodItems.map((food) => (\n              <ListItem key={food.id} divider>\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      <FoodIcon color=\"primary\" />\n                      <Typography variant=\"subtitle1\">\n                        {food.name}\n                      </Typography>\n                    </Box>\n                  }\n                  secondary={\n                    <Typography component=\"div\" variant=\"body2\" color=\"text.secondary\">\n                      <Box>\n                        <Chip \n                          label={`${food.quantity}${food.unit}`} \n                          size=\"small\" \n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`${food.calories} cal`} \n                          size=\"small\" \n                          color=\"warning\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`P: ${food.protein}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"success\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`C: ${food.carbs}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"info\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`F: ${food.fat}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"error\"\n                        />\n                      </Box>\n                    </Typography>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => removeFoodItem(food.id)}\n                    color=\"error\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n\n        {foodItems.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\n                {error}\n              </Alert>\n            )}\n            \n            <Alert severity=\"info\">\n              <Typography variant=\"body2\">\n                <strong>Meal Summary:</strong> {foodItems.length} food items, \n                {nutrition.totalCalories} calories, \n                {nutrition.totalProtein}g protein, \n                {nutrition.totalCarbs}g carbs, \n                {nutrition.totalFat}g fat\n              </Typography>\n            </Alert>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                startIcon={<SaveIcon />}\n                onClick={saveMeal}\n                disabled={!mealData.name || isSaving}\n                size=\"large\"\n              >\n                {isSaving ? 'Saving...' : 'Save Meal'}\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MealLogger;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,IAAI,EACJC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,OAAO,EACPC,KAAK,EACLC,YAAY,QACP,eAAe;AACtB,SACEC,GAAG,IAAIC,OAAO,EACdC,MAAM,IAAIC,UAAU,EACpBC,IAAI,IAAIC,QAAQ,EAChBC,UAAU,IAAIC,QAAQ,EACtBC,mBAAmB,IAAIC,WAAW,QAC7B,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC,kBAAkB,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC;EAAgB,CAAC,GAAGR,OAAO,CAAC,CAAC;EACrC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC;IACvC4C,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5CC,QAAQ,EAAE,WAAW;IACrBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAAC;IAC7C4C,IAAI,EAAE,EAAE;IACRW,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM+D,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAMC,WAAW,GAAG,CAClB;IAAEtB,IAAI,EAAE,gBAAgB;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EACpF;IAAEvB,IAAI,EAAE,YAAY;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EAClF;IAAEvB,IAAI,EAAE,UAAU;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC9E;IAAEvB,IAAI,EAAE,QAAQ;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC3E;IAAEvB,IAAI,EAAE,cAAc;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EACnF;IAAEvB,IAAI,EAAE,MAAM;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC3E;IAAEvB,IAAI,EAAE,SAAS;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC9E;IAAEvB,IAAI,EAAE,QAAQ;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC7E;IAAEvB,IAAI,EAAE,cAAc;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EACnF;IAAEvB,IAAI,EAAE,SAAS;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC7E;IAAEvB,IAAI,EAAE,SAAS;IAAEa,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,EAC/E;IAAEvB,IAAI,EAAE,QAAQ;IAAEa,QAAQ,EAAE,GAAG;IAAEC,OAAO,EAAE,GAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEO,GAAG,EAAE;EAAI,CAAC,CAC/E;EAED,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC;EAEjE,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAM;MAAE1B,IAAI;MAAEoB;IAAM,CAAC,GAAGM,CAAC,CAACC,MAAM;IAChC5B,WAAW,CAAC6B,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAAC5B,IAAI,GAAGoB;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMS,gBAAgB,GAAIH,CAAC,IAAK;IAC9B,MAAM;MAAE1B,IAAI;MAAEoB;IAAM,CAAC,GAAGM,CAAC,CAACC,MAAM;IAChCjB,cAAc,CAACkB,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAAC5B,IAAI,GAAGoB;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIA,IAAI,EAAE;MACRrB,cAAc,CAACkB,IAAI,KAAK;QACtB,GAAGA,IAAI;QACP5B,IAAI,EAAE+B,IAAI,CAAC/B,IAAI;QACfa,QAAQ,EAAEkB,IAAI,CAAClB,QAAQ,CAACmB,QAAQ,CAAC,CAAC;QAClClB,OAAO,EAAEiB,IAAI,CAACjB,OAAO,CAACkB,QAAQ,CAAC,CAAC;QAChCjB,KAAK,EAAEgB,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAAC,CAAC;QAC5BhB,GAAG,EAAEe,IAAI,CAACf,GAAG,CAACgB,QAAQ,CAAC;MACzB,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACxB,WAAW,CAACT,IAAI,IAAI,CAACS,WAAW,CAACE,QAAQ,IAAI,CAACF,WAAW,CAACI,QAAQ,EAAE;MACvE;IACF;IAEA,MAAMF,QAAQ,GAAGuB,UAAU,CAACzB,WAAW,CAACE,QAAQ,CAAC;IACjD,MAAMwB,UAAU,GAAGxB,QAAQ,GAAG,GAAG,CAAC,CAAC;;IAEnC,MAAMyB,WAAW,GAAG;MAClB,GAAG3B,WAAW;MACd4B,EAAE,EAAEnC,IAAI,CAACoC,GAAG,CAAC,CAAC;MACd3B,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAE0B,IAAI,CAACC,KAAK,CAACN,UAAU,CAACzB,WAAW,CAACI,QAAQ,CAAC,GAAGsB,UAAU,CAAC;MACnErB,OAAO,EAAEyB,IAAI,CAACC,KAAK,CAACN,UAAU,CAACzB,WAAW,CAACK,OAAO,CAAC,GAAGqB,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE;MAC3EpB,KAAK,EAAEwB,IAAI,CAACC,KAAK,CAACN,UAAU,CAACzB,WAAW,CAACM,KAAK,CAAC,GAAGoB,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE;MACvEnB,GAAG,EAAEuB,IAAI,CAACC,KAAK,CAACN,UAAU,CAACzB,WAAW,CAACO,GAAG,CAAC,GAAGmB,UAAU,GAAG,EAAE,CAAC,GAAG;IACnE,CAAC;IAED3B,YAAY,CAACoB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEQ,WAAW,CAAC,CAAC;IAC5C1B,cAAc,CAAC;MACbV,IAAI,EAAE,EAAE;MACRW,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,GAAG;MACTC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP,CAAC,CAAC;IACFE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMuB,cAAc,GAAIC,MAAM,IAAK;IACjClC,YAAY,CAACoB,IAAI,IAAIA,IAAI,CAACe,MAAM,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKK,MAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0F,KAAK,EAAEC,QAAQ,CAAC,GAAG3F,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM4F,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAClD,QAAQ,CAACE,IAAI,IAAIO,SAAS,CAAC0C,MAAM,KAAK,CAAC,EAAE;MAC5C;IACF;IAEAJ,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMG,IAAI,GAAG;QACXlD,IAAI,EAAEF,QAAQ,CAACE,IAAI;QACnBK,QAAQ,EAAEP,QAAQ,CAACO,QAAQ,CAAC8C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtD,QAAQ,CAACO,QAAQ,CAACgD,KAAK,CAAC,CAAC,CAAC;QAAE;QAClFpD,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBM,SAAS,EAAEA,SAAS,CAAC+C,GAAG,CAACvB,IAAI,KAAK;UAChC/B,IAAI,EAAE+B,IAAI,CAAC/B,IAAI;UACfW,QAAQ,EAAEuB,UAAU,CAACH,IAAI,CAACpB,QAAQ,CAAC;UACnCC,IAAI,EAAEmB,IAAI,CAACnB,IAAI;UACfC,QAAQ,EAAEqB,UAAU,CAACH,IAAI,CAAClB,QAAQ,CAAC;UACnCC,OAAO,EAAEoB,UAAU,CAACH,IAAI,CAACjB,OAAO,CAAC;UACjCC,KAAK,EAAEmB,UAAU,CAACH,IAAI,CAAChB,KAAK,CAAC;UAC7BC,GAAG,EAAEkB,UAAU,CAACH,IAAI,CAACf,GAAG;QAC1B,CAAC,CAAC,CAAC;QACHV,KAAK,EAAER,QAAQ,CAACQ;MAClB,CAAC;MAED,MAAMiD,SAAS,GAAG,MAAMpE,WAAW,CAACqE,MAAM,CAACN,IAAI,CAAC;;MAEhD;MACAnD,WAAW,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5CC,QAAQ,EAAE,WAAW;QACrBC,KAAK,EAAE;MACT,CAAC,CAAC;MACFE,YAAY,CAAC,EAAE,CAAC;;MAEhB;MACA,IAAIf,WAAW,EAAE;QACfA,WAAW,CAAC8D,SAAS,CAAC;MACxB;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CC,QAAQ,CAAC,wCAAwC,CAAC;IACpD,CAAC,SAAS;MACRF,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAGpD,SAAS,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE9B,IAAI,KAAK8B,GAAG,GAAG9B,IAAI,CAAClB,QAAQ,EAAE,CAAC,CAAC;IAC7E,MAAMiD,YAAY,GAAGvD,SAAS,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE9B,IAAI,KAAK8B,GAAG,GAAG9B,IAAI,CAACjB,OAAO,EAAE,CAAC,CAAC;IAC3E,MAAMiD,UAAU,GAAGxD,SAAS,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE9B,IAAI,KAAK8B,GAAG,GAAG9B,IAAI,CAAChB,KAAK,EAAE,CAAC,CAAC;IACvE,MAAMiD,QAAQ,GAAGzD,SAAS,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE9B,IAAI,KAAK8B,GAAG,GAAG9B,IAAI,CAACf,GAAG,EAAE,CAAC,CAAC;IAEnE,OAAO;MAAE2C,aAAa;MAAEG,YAAY;MAAEC,UAAU;MAAEC;IAAS,CAAC;EAC9D,CAAC;EAED,MAAMC,gBAAgB,GAAI5D,QAAQ,IAAK;IACrC,MAAM6D,MAAM,GAAG;MACb,WAAW,EAAE,SAAS;MACtB,OAAO,EAAE,SAAS;MAClB,QAAQ,EAAE,WAAW;MACrB,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,MAAM,CAAC7D,QAAQ,CAAC,IAAI,SAAS;EACtC,CAAC;EAED,MAAM8D,SAAS,GAAGT,iBAAiB,CAAC,CAAC;EAErC,oBACEnE,OAAA,CAACjC,IAAI;IAAA8G,QAAA,eACH7E,OAAA,CAAChC,WAAW;MAAA6G,QAAA,gBACV7E,OAAA,CAAC/B,UAAU;QAAC6G,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbnF,OAAA,CAAC5B,IAAI;QAACgH,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAR,QAAA,gBACzB7E,OAAA,CAAC5B,IAAI;UAACkH,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;YACRuH,SAAS;YACT3D,KAAK,EAAC,WAAW;YACjBrB,IAAI,EAAC,MAAM;YACXoB,KAAK,EAAEtB,QAAQ,CAACE,IAAK;YACrBiF,QAAQ,EAAExD,gBAAiB;YAC3ByD,WAAW,EAAC;UAAgD;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;UAACkH,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;YACRuH,SAAS;YACT3D,KAAK,EAAC,MAAM;YACZrB,IAAI,EAAC,MAAM;YACXmF,IAAI,EAAC,MAAM;YACX/D,KAAK,EAAEtB,QAAQ,CAACG,IAAK;YACrBgF,QAAQ,EAAExD,gBAAiB;YAC3B2D,eAAe,EAAE;cAAEC,MAAM,EAAE;YAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;UAACkH,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,eACvB7E,OAAA,CAACrB,WAAW;YAAC8G,SAAS;YAAAZ,QAAA,gBACpB7E,OAAA,CAACpB,UAAU;cAAAiG,QAAA,EAAC;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClCnF,OAAA,CAACnB,MAAM;cACL4B,IAAI,EAAC,UAAU;cACfoB,KAAK,EAAEtB,QAAQ,CAACO,QAAS;cACzB4E,QAAQ,EAAExD,gBAAiB;cAC3BJ,KAAK,EAAC,WAAW;cAAA+C,QAAA,EAEhBjD,SAAS,CAACmC,GAAG,CAAE6B,IAAI,iBAClB5F,OAAA,CAAClB,QAAQ;gBAAkB+C,KAAK,EAAE+D,IAAI,CAAC/D,KAAM;gBAAAgD,QAAA,EAC1Ce,IAAI,CAAC9D;cAAK,GADE8D,IAAI,CAAC/D,KAAK;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEf,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;UAACkH,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAV,QAAA,eAChB7E,OAAA,CAAC9B,SAAS;YACRuH,SAAS;YACT3D,KAAK,EAAC,OAAO;YACbrB,IAAI,EAAC,OAAO;YACZoB,KAAK,EAAEtB,QAAQ,CAACQ,KAAM;YACtB2E,QAAQ,EAAExD,gBAAiB;YAC3B6D,SAAS;YACTC,IAAI,EAAE,CAAE;YACRL,WAAW,EAAC;UAAsC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPnF,OAAA,CAACjB,OAAO;QAACkH,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE1BnF,OAAA,CAAClC,GAAG;QAACqI,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,eAAe;QAACC,UAAU,EAAC,QAAQ;QAACC,EAAE,EAAE,CAAE;QAAAzB,QAAA,gBAC3E7E,OAAA,CAAC/B,UAAU;UAAC6G,OAAO,EAAC,IAAI;UAAAD,QAAA,GAAC,cACX,EAAC7D,SAAS,CAAC0C,MAAM,EAAC,GAChC;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbnF,OAAA,CAAC7B,MAAM;UACL2G,OAAO,EAAC,UAAU;UAClByB,SAAS,eAAEvG,OAAA,CAACb,OAAO;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBqB,OAAO,EAAEA,CAAA,KAAM7E,eAAe,CAAC,IAAI,CAAE;UAAAkD,QAAA,EACtC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELzD,YAAY,iBACX1B,OAAA,CAACjC,IAAI;QAAC+G,OAAO,EAAC,UAAU;QAACmB,EAAE,EAAE;UAAEK,EAAE,EAAE,CAAC;UAAEG,CAAC,EAAE;QAAE,CAAE;QAAA5B,QAAA,gBAC3C7E,OAAA,CAAC/B,UAAU;UAAC6G,OAAO,EAAC,WAAW;UAACC,YAAY;UAAAF,QAAA,EAAC;QAE7C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAEbnF,OAAA,CAAC5B,IAAI;UAACgH,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAR,QAAA,gBACzB7E,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAACf,YAAY;cACXyH,OAAO,EAAE3E,WAAY;cACrB4E,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACnG,IAAK;cACxCiF,QAAQ,EAAEA,CAACmB,KAAK,EAAEhF,KAAK,KAAKU,gBAAgB,CAACV,KAAK,CAAE;cACpDiF,WAAW,EAAGC,MAAM,iBAClB/G,OAAA,CAAC9B,SAAS;gBAAA,GACJ6I,MAAM;gBACVjF,KAAK,EAAC,WAAW;gBACjBrB,IAAI,EAAC,MAAM;gBACXoB,KAAK,EAAEX,WAAW,CAACT,IAAK;gBACxBiF,QAAQ,EAAEpD;cAAiB;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YACD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;cACRuH,SAAS;cACT3D,KAAK,EAAC,UAAU;cAChBrB,IAAI,EAAC,UAAU;cACfmF,IAAI,EAAC,QAAQ;cACb/D,KAAK,EAAEX,WAAW,CAACE,QAAS;cAC5BsE,QAAQ,EAAEpD,gBAAiB;cAC3B0E,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAI;YAAE;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAACrB,WAAW;cAAC8G,SAAS;cAAAZ,QAAA,gBACpB7E,OAAA,CAACpB,UAAU;gBAAAiG,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7BnF,OAAA,CAACnB,MAAM;gBACL4B,IAAI,EAAC,MAAM;gBACXoB,KAAK,EAAEX,WAAW,CAACG,IAAK;gBACxBqE,QAAQ,EAAEpD,gBAAiB;gBAC3BR,KAAK,EAAC,MAAM;gBAAA+C,QAAA,EAEX5C,KAAK,CAAC8B,GAAG,CAAE1C,IAAI,iBACdrB,OAAA,CAAClB,QAAQ;kBAAY+C,KAAK,EAAER,IAAK;kBAAAwD,QAAA,EAC9BxD;gBAAI,GADQA,IAAI;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAET,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;cACRuH,SAAS;cACT3D,KAAK,EAAC,qBAAqB;cAC3BrB,IAAI,EAAC,UAAU;cACfmF,IAAI,EAAC,QAAQ;cACb/D,KAAK,EAAEX,WAAW,CAACI,QAAS;cAC5BoE,QAAQ,EAAEpD,gBAAiB;cAC3B0E,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAI;YAAE;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;cACRuH,SAAS;cACT3D,KAAK,EAAC,sBAAsB;cAC5BrB,IAAI,EAAC,SAAS;cACdmF,IAAI,EAAC,QAAQ;cACb/D,KAAK,EAAEX,WAAW,CAACK,OAAQ;cAC3BmE,QAAQ,EAAEpD,gBAAiB;cAC3B0E,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAI;YAAE;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;cACRuH,SAAS;cACT3D,KAAK,EAAC,oBAAoB;cAC1BrB,IAAI,EAAC,OAAO;cACZmF,IAAI,EAAC,QAAQ;cACb/D,KAAK,EAAEX,WAAW,CAACM,KAAM;cACzBkE,QAAQ,EAAEpD,gBAAiB;cAC3B0E,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAI;YAAE;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEPnF,OAAA,CAAC5B,IAAI;YAACkH,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAX,QAAA,eACvB7E,OAAA,CAAC9B,SAAS;cACRuH,SAAS;cACT3D,KAAK,EAAC,kBAAkB;cACxBrB,IAAI,EAAC,KAAK;cACVmF,IAAI,EAAC,QAAQ;cACb/D,KAAK,EAAEX,WAAW,CAACO,GAAI;cACvBiE,QAAQ,EAAEpD,gBAAiB;cAC3B0E,UAAU,EAAE;gBAAEC,GAAG,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAI;YAAE;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEPnF,OAAA,CAAClC,GAAG;UAACmI,EAAE,EAAE;YAAEkB,EAAE,EAAE,CAAC;YAAEhB,OAAO,EAAE,MAAM;YAAEiB,GAAG,EAAE;UAAE,CAAE;UAAAvC,QAAA,gBAC1C7E,OAAA,CAAC7B,MAAM;YACL2G,OAAO,EAAC,WAAW;YACnB0B,OAAO,EAAE9D,WAAY;YACrB2E,QAAQ,EAAE,CAACnG,WAAW,CAACT,IAAI,IAAI,CAACS,WAAW,CAACE,QAAQ,IAAI,CAACF,WAAW,CAACI,QAAS;YAAAuD,QAAA,EAC/E;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnF,OAAA,CAAC7B,MAAM;YACL2G,OAAO,EAAC,UAAU;YAClB0B,OAAO,EAAEA,CAAA,KAAM7E,eAAe,CAAC,KAAK,CAAE;YAAAkD,QAAA,EACvC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP,EAEAnE,SAAS,CAAC0C,MAAM,GAAG,CAAC,iBACnB1D,OAAA,CAAC1B,IAAI;QAAAuG,QAAA,EACF7D,SAAS,CAAC+C,GAAG,CAAEvB,IAAI,iBAClBxC,OAAA,CAACzB,QAAQ;UAAe+I,OAAO;UAAAzC,QAAA,gBAC7B7E,OAAA,CAACxB,YAAY;YACX+I,OAAO,eACLvH,OAAA,CAAClC,GAAG;cAACqI,OAAO,EAAC,MAAM;cAACE,UAAU,EAAC,QAAQ;cAACe,GAAG,EAAE,CAAE;cAAAvC,QAAA,gBAC7C7E,OAAA,CAACP,QAAQ;gBAAC+H,KAAK,EAAC;cAAS;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5BnF,OAAA,CAAC/B,UAAU;gBAAC6G,OAAO,EAAC,WAAW;gBAAAD,QAAA,EAC5BrC,IAAI,CAAC/B;cAAI;gBAAAuE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CACN;YACDsC,SAAS,eACPzH,OAAA,CAAC/B,UAAU;cAACyJ,SAAS,EAAC,KAAK;cAAC5C,OAAO,EAAC,OAAO;cAAC0C,KAAK,EAAC,gBAAgB;cAAA3C,QAAA,eAChE7E,OAAA,CAAClC,GAAG;gBAAA+G,QAAA,gBACF7E,OAAA,CAACtB,IAAI;kBACHoD,KAAK,EAAE,GAAGU,IAAI,CAACpB,QAAQ,GAAGoB,IAAI,CAACnB,IAAI,EAAG;kBACtCsG,IAAI,EAAC,OAAO;kBACZ1B,EAAE,EAAE;oBAAE2B,EAAE,EAAE;kBAAE;gBAAE;kBAAA5C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC,eACFnF,OAAA,CAACtB,IAAI;kBACHoD,KAAK,EAAE,GAAGU,IAAI,CAAClB,QAAQ,MAAO;kBAC9BqG,IAAI,EAAC,OAAO;kBACZH,KAAK,EAAC,SAAS;kBACfvB,EAAE,EAAE;oBAAE2B,EAAE,EAAE;kBAAE;gBAAE;kBAAA5C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC,eACFnF,OAAA,CAACtB,IAAI;kBACHoD,KAAK,EAAE,MAAMU,IAAI,CAACjB,OAAO,GAAI;kBAC7BoG,IAAI,EAAC,OAAO;kBACZ7C,OAAO,EAAC,UAAU;kBAClB0C,KAAK,EAAC,SAAS;kBACfvB,EAAE,EAAE;oBAAE2B,EAAE,EAAE;kBAAE;gBAAE;kBAAA5C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC,eACFnF,OAAA,CAACtB,IAAI;kBACHoD,KAAK,EAAE,MAAMU,IAAI,CAAChB,KAAK,GAAI;kBAC3BmG,IAAI,EAAC,OAAO;kBACZ7C,OAAO,EAAC,UAAU;kBAClB0C,KAAK,EAAC,MAAM;kBACZvB,EAAE,EAAE;oBAAE2B,EAAE,EAAE;kBAAE;gBAAE;kBAAA5C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC,eACFnF,OAAA,CAACtB,IAAI;kBACHoD,KAAK,EAAE,MAAMU,IAAI,CAACf,GAAG,GAAI;kBACzBkG,IAAI,EAAC,OAAO;kBACZ7C,OAAO,EAAC,UAAU;kBAClB0C,KAAK,EAAC;gBAAO;kBAAAxC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI;UACb;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFnF,OAAA,CAACvB,uBAAuB;YAAAoG,QAAA,eACtB7E,OAAA,CAAC3B,UAAU;cACTwJ,IAAI,EAAC,KAAK;cACVrB,OAAO,EAAEA,CAAA,KAAMtD,cAAc,CAACV,IAAI,CAACM,EAAE,CAAE;cACvC0E,KAAK,EAAC,OAAO;cAAA3C,QAAA,eAEb7E,OAAA,CAACX,UAAU;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC;QAAA,GAxDb3C,IAAI,CAACM,EAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyDZ,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACP,EAEAnE,SAAS,CAAC0C,MAAM,GAAG,CAAC,iBACnB1D,OAAA,CAAClC,GAAG;QAACmI,EAAE,EAAE;UAAEkB,EAAE,EAAE;QAAE,CAAE;QAAAtC,QAAA,GAChBtB,KAAK,iBACJvD,OAAA,CAAChB,KAAK;UAAC8I,QAAQ,EAAC,OAAO;UAAC7B,EAAE,EAAE;YAAEK,EAAE,EAAE;UAAE,CAAE;UAAAzB,QAAA,EACnCtB;QAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR,eAEDnF,OAAA,CAAChB,KAAK;UAAC8I,QAAQ,EAAC,MAAM;UAAAjD,QAAA,eACpB7E,OAAA,CAAC/B,UAAU;YAAC6G,OAAO,EAAC,OAAO;YAAAD,QAAA,gBACzB7E,OAAA;cAAA6E,QAAA,EAAQ;YAAa;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnE,SAAS,CAAC0C,MAAM,EAAC,cACjD,EAACkB,SAAS,CAACR,aAAa,EAAC,YACzB,EAACQ,SAAS,CAACL,YAAY,EAAC,YACxB,EAACK,SAAS,CAACJ,UAAU,EAAC,UACtB,EAACI,SAAS,CAACH,QAAQ,EAAC,OACtB;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAERnF,OAAA,CAAClC,GAAG;UAACmI,EAAE,EAAE;YAAEkB,EAAE,EAAE,CAAC;YAAEhB,OAAO,EAAE,MAAM;YAAEiB,GAAG,EAAE;UAAE,CAAE;UAAAvC,QAAA,eAC1C7E,OAAA,CAAC7B,MAAM;YACL2G,OAAO,EAAC,WAAW;YACnByB,SAAS,eAAEvG,OAAA,CAACT,QAAQ;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACxBqB,OAAO,EAAE/C,QAAS;YAClB4D,QAAQ,EAAE,CAAC9G,QAAQ,CAACE,IAAI,IAAI4C,QAAS;YACrCsE,IAAI,EAAC,OAAO;YAAA9C,QAAA,EAEXxB,QAAQ,GAAG,WAAW,GAAG;UAAW;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAAC/E,EAAA,CAjeIH,UAAU;EAAA,QACcJ,OAAO,EAClBC,WAAW;AAAA;AAAAiI,EAAA,GAFxB9H,UAAU;AAmehB,eAAeA,UAAU;AAAC,IAAA8H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}