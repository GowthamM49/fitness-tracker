{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Grid,Card,CardContent,Typography,Paper,Tabs,Tab,FormControl,InputLabel,Select,MenuItem,Chip,IconButton,Tooltip}from'@mui/material';import{TrendingUp as TrendingUpIcon,FitnessCenter as WorkoutIcon,Restaurant as DietIcon,Scale as WeightIcon,Refresh as RefreshIcon,Download as DownloadIcon}from'@mui/icons-material';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip as RechartsTooltip,Legend,ResponsiveContainer,BarChart,Bar,PieChart,Pie,Cell,AreaChart,Area}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnhancedAnalyticsDashboard=()=>{const[activeTab,setActiveTab]=useState(0);const[timeRange,setTimeRange]=useState('30');const[chartData,setChartData]=useState({weightProgress:[],workoutStats:[],nutritionData:[],fitnessScore:[]});useEffect(()=>{loadAnalyticsData();},[timeRange]);const loadAnalyticsData=()=>{// Load real data from localStorage\nconst userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');const weightEntries=JSON.parse(localStorage.getItem('weightEntries')||'[]');const workouts=JSON.parse(localStorage.getItem('workouts')||'[]');const meals=JSON.parse(localStorage.getItem('meals')||'[]');// Generate charts from real data\nconst realWeightData=generateRealWeightData(weightEntries);const realWorkoutData=generateRealWorkoutData(workouts);const realNutritionData=generateRealNutritionData(meals);const realFitnessScore=generateRealFitnessScore(userData,weightEntries,workouts,meals);setChartData({weightProgress:realWeightData,workoutStats:realWorkoutData,nutritionData:realNutritionData,fitnessScore:realFitnessScore});};// Generate real weight data from stored entries\nconst generateRealWeightData=weightEntries=>{if(!weightEntries||weightEntries.length===0){return generateWeightData();// Fallback to mock data\n}const days=parseInt(timeRange);const filteredEntries=weightEntries.filter(entry=>{const entryDate=new Date(entry.date);const cutoffDate=new Date();cutoffDate.setDate(cutoffDate.getDate()-days);return entryDate>=cutoffDate;}).sort((a,b)=>new Date(a.date)-new Date(b.date));return filteredEntries.map(entry=>{var _localStorage$getItem;const date=new Date(entry.date);const height=parseFloat(((_localStorage$getItem=localStorage.getItem('fitnessTrackerData'))===null||_localStorage$getItem===void 0?void 0:_localStorage$getItem.height)||175)/100;const bmi=entry.weight/(height*height);return{date:date.toLocaleDateString('en-US',{month:'short',day:'numeric'}),weight:entry.weight,bmi:Math.round(bmi*10)/10};});};const generateWeightData=()=>{const data=[];const days=parseInt(timeRange);const startDate=new Date();startDate.setDate(startDate.getDate()-days);for(let i=0;i<days;i++){const date=new Date(startDate);date.setDate(date.getDate()+i);data.push({date:date.toLocaleDateString('en-US',{month:'short',day:'numeric'}),weight:70+Math.random()*5-2.5,bmi:22+Math.random()*2-1});}return data;};// Generate real workout data from stored workouts\nconst generateRealWorkoutData=workouts=>{if(!workouts||workouts.length===0){return generateWorkoutData();// Fallback to mock data\n}const workoutTypes={};workouts.forEach(workout=>{if(!workoutTypes[workout.type]){workoutTypes[workout.type]={name:workout.type,duration:0,calories:0,frequency:0};}workoutTypes[workout.type].duration+=workout.duration||0;workoutTypes[workout.type].calories+=workout.caloriesBurned||0;workoutTypes[workout.type].frequency+=1;});return Object.values(workoutTypes).map(workout=>({name:workout.name,duration:Math.round(workout.duration/workout.frequency),calories:Math.round(workout.calories/workout.frequency),frequency:workout.frequency}));};const generateWorkoutData=()=>{const workouts=['Push-ups','Squats','Running','Weight Lifting','Yoga'];return workouts.map(workout=>({name:workout,duration:Math.floor(Math.random()*60)+15,calories:Math.floor(Math.random()*200)+50,frequency:Math.floor(Math.random()*7)+1}));};// Generate real nutrition data from stored meals\nconst generateRealNutritionData=meals=>{if(!meals||meals.length===0){return generateNutritionData();// Fallback to mock data\n}const days=parseInt(timeRange);const recentMeals=meals.filter(meal=>{const mealDate=new Date(meal.date);const cutoffDate=new Date();cutoffDate.setDate(cutoffDate.getDate()-days);return mealDate>=cutoffDate;});const totals=recentMeals.reduce((acc,meal)=>({protein:acc.protein+(meal.totalProtein||0),carbs:acc.carbs+(meal.totalCarbs||0),fat:acc.fat+(meal.totalFat||0),calories:acc.calories+(meal.totalCalories||0)}),{protein:0,carbs:0,fat:0,calories:0});const avgDaily={protein:Math.round(totals.protein/Math.max(1,days)),carbs:Math.round(totals.carbs/Math.max(1,days)),fat:Math.round(totals.fat/Math.max(1,days)),calories:Math.round(totals.calories/Math.max(1,days))};return[{name:'Protein',value:avgDaily.protein,color:'#8884d8'},{name:'Carbs',value:avgDaily.carbs,color:'#82ca9d'},{name:'Fat',value:avgDaily.fat,color:'#ffc658'},{name:'Calories',value:Math.round(avgDaily.calories/10),color:'#ff7300'}];};const generateNutritionData=()=>{const nutrients=['Protein','Carbs','Fat','Fiber'];const colors=['#8884d8','#82ca9d','#ffc658','#ff7300'];return nutrients.map((nutrient,index)=>({name:nutrient,value:Math.floor(Math.random()*100)+20,color:colors[index]}));};// Generate real fitness score from user data\nconst generateRealFitnessScore=(userData,weightEntries,workouts,meals)=>{if(!userData||Object.keys(userData).length===0){return generateFitnessScoreData();// Fallback to mock data\n}const days=parseInt(timeRange);const data=[];const startDate=new Date();startDate.setDate(startDate.getDate()-days);for(let i=0;i<days;i++){const date=new Date(startDate);date.setDate(date.getDate()+i);const dateStr=date.toISOString().split('T')[0];// Calculate daily metrics\nconst dayWorkouts=workouts.filter(w=>w.date===dateStr);const dayMeals=meals.filter(m=>m.date===dateStr);const dayWeight=weightEntries.find(w=>w.date===dateStr);// Calculate fitness score components\nconst workoutScore=Math.min(30,dayWorkouts.length*10);const nutritionScore=Math.min(30,dayMeals.length*7.5);const consistencyScore=dayWorkouts.length>0||dayMeals.length>0?20:0;const totalScore=workoutScore+nutritionScore+consistencyScore;data.push({date:date.toLocaleDateString('en-US',{month:'short',day:'numeric'}),score:Math.max(40,totalScore),workout:workoutScore,nutrition:nutritionScore,consistency:consistencyScore});}return data;};const generateFitnessScoreData=()=>{const data=[];const days=parseInt(timeRange);const startDate=new Date();startDate.setDate(startDate.getDate()-days);for(let i=0;i<days;i++){const date=new Date(startDate);date.setDate(date.getDate()+i);data.push({date:date.toLocaleDateString('en-US',{month:'short',day:'numeric'}),score:Math.floor(Math.random()*40)+40,workout:Math.floor(Math.random()*30)+20,nutrition:Math.floor(Math.random()*30)+20,consistency:Math.floor(Math.random()*30)+20});}return data;};const renderWeightProgressChart=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Weight & BMI Progress\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData.weightProgress,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"left\"}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"right\",orientation:\"right\"}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{yAxisId:\"left\",type:\"monotone\",dataKey:\"weight\",stroke:\"#8884d8\",strokeWidth:2,name:\"Weight (kg)\"}),/*#__PURE__*/_jsx(Line,{yAxisId:\"right\",type:\"monotone\",dataKey:\"bmi\",stroke:\"#82ca9d\",strokeWidth:2,name:\"BMI\"})]})})]})});const renderWorkoutAnalytics=()=>/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:8},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Workout Duration by Exercise\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData.workoutStats,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"duration\",fill:\"#8884d8\",name:\"Duration (min)\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"calories\",fill:\"#82ca9d\",name:\"Calories Burned\"})]})})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:4},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Workout Frequency\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:chartData.workoutStats,cx:\"50%\",cy:\"50%\",labelLine:false,label:_ref=>{let{name,frequency}=_ref;return`${name}: ${frequency}`;},outerRadius:80,fill:\"#8884d8\",dataKey:\"frequency\",children:chartData.workoutStats.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:`hsl(${index*60}, 70%, 50%)`},`cell-${index}`))}),/*#__PURE__*/_jsx(RechartsTooltip,{})]})})]})})})]});const renderNutritionAnalytics=()=>/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Macronutrient Distribution\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:chartData.nutritionData,cx:\"50%\",cy:\"50%\",labelLine:false,label:_ref2=>{let{name,value}=_ref2;return`${name}: ${value}g`;},outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",children:chartData.nutritionData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},`cell-${index}`))}),/*#__PURE__*/_jsx(RechartsTooltip,{})]})})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Daily Calorie Intake Trend\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(AreaChart,{data:chartData.weightProgress,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"weight\",stroke:\"#8884d8\",fill:\"#8884d8\",fillOpacity:0.3,name:\"Calories\"})]})})]})})})]});const renderFitnessScoreAnalytics=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Comprehensive Fitness Score Breakdown\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData.fitnessScore,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,100]}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"score\",stroke:\"#8884d8\",strokeWidth:3,name:\"Overall Score\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"workout\",stroke:\"#82ca9d\",strokeWidth:2,name:\"Workout Score\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"nutrition\",stroke:\"#ffc658\",strokeWidth:2,name:\"Nutrition Score\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"consistency\",stroke:\"#ff7300\",strokeWidth:2,name:\"Consistency Score\"})]})})]})});const renderSummaryCards=()=>{var _chartData$weightProg,_chartData$weightProg2;return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",gutterBottom:true,variant:\"h6\",children:\"Current Weight\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[((_chartData$weightProg=chartData.weightProgress[chartData.weightProgress.length-1])===null||_chartData$weightProg===void 0?void 0:(_chartData$weightProg2=_chartData$weightProg.weight)===null||_chartData$weightProg2===void 0?void 0:_chartData$weightProg2.toFixed(1))||'0.0',\" kg\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"success.main\",children:((_chartData$weightProg3,_chartData$weightProg4)=>{if(chartData.weightProgress.length<2)return'No trend data';const latest=(_chartData$weightProg3=chartData.weightProgress[chartData.weightProgress.length-1])===null||_chartData$weightProg3===void 0?void 0:_chartData$weightProg3.weight;const earliest=(_chartData$weightProg4=chartData.weightProgress[0])===null||_chartData$weightProg4===void 0?void 0:_chartData$weightProg4.weight;const change=latest-earliest;return change>0?`↑ ${change.toFixed(1)} kg this period`:`↓ ${Math.abs(change).toFixed(1)} kg this period`;})()})]}),/*#__PURE__*/_jsx(WeightIcon,{color:\"primary\",sx:{fontSize:40}})]})})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",gutterBottom:true,variant:\"h6\",children:\"Workouts This Week\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');return userData.workoutsThisWeek||'0';})()}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"success.main\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');const thisWeek=parseInt(userData.workoutsThisWeek)||0;const lastWeek=Math.max(0,thisWeek-Math.floor(Math.random()*3));const change=thisWeek-lastWeek;return change>0?`+${change} from last week`:'Same as last week';})()})]}),/*#__PURE__*/_jsx(WorkoutIcon,{color:\"secondary\",sx:{fontSize:40}})]})})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",gutterBottom:true,variant:\"h6\",children:\"Avg. Daily Calories\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');return userData.caloriesToday||'0';})()}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"warning.main\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');const current=parseInt(userData.caloriesToday)||0;const target=2000;// Default target\nconst diff=current-target;return diff>0?`+${diff} from target`:`${Math.abs(diff)} below target`;})()})]}),/*#__PURE__*/_jsx(DietIcon,{color:\"success\",sx:{fontSize:40}})]})})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",gutterBottom:true,variant:\"h6\",children:\"Fitness Score\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');const workouts=parseInt(userData.workoutsThisWeek)||0;const calories=parseInt(userData.caloriesToday)||0;const streak=parseInt(userData.streakDays)||0;// Calculate fitness score based on activity\nlet score=40;// Base score\nscore+=Math.min(30,workouts*5);// Workout component\nscore+=Math.min(20,Math.floor(calories/100));// Nutrition component\nscore+=Math.min(10,streak);// Consistency component\nreturn Math.min(100,score)+'%';})()}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"success.main\",children:(()=>{const userData=JSON.parse(localStorage.getItem('fitnessTrackerData')||'{}');const streak=parseInt(userData.streakDays)||0;return streak>0?`+${Math.min(5,streak)}% this week`:'Start your streak!';})()})]}),/*#__PURE__*/_jsx(TrendingUpIcon,{color:\"primary\",sx:{fontSize:40}})]})})})})]});};return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Enhanced Analytics Dashboard\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,alignItems:\"center\",children:[/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Time Range\"}),/*#__PURE__*/_jsxs(Select,{value:timeRange,onChange:e=>setTimeRange(e.target.value),label:\"Time Range\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"7\",children:\"Last 7 days\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"30\",children:\"Last 30 days\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"90\",children:\"Last 90 days\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"365\",children:\"Last year\"})]})]}),/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh Data\",children:/*#__PURE__*/_jsx(IconButton,{onClick:loadAnalyticsData,children:/*#__PURE__*/_jsx(RefreshIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Export Report\",children:/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(DownloadIcon,{})})})]})]}),renderSummaryCards(),/*#__PURE__*/_jsx(Paper,{sx:{mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:(e,newValue)=>setActiveTab(newValue),children:[/*#__PURE__*/_jsx(Tab,{label:\"Weight Progress\"}),/*#__PURE__*/_jsx(Tab,{label:\"Workout Analytics\"}),/*#__PURE__*/_jsx(Tab,{label:\"Nutrition Analytics\"}),/*#__PURE__*/_jsx(Tab,{label:\"Fitness Score\"})]})}),activeTab===0&&renderWeightProgressChart(),activeTab===1&&renderWorkoutAnalytics(),activeTab===2&&renderNutritionAnalytics(),activeTab===3&&renderFitnessScoreAnalytics()]});};export default EnhancedAnalyticsDashboard;","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Card","CardContent","Typography","Paper","Tabs","Tab","FormControl","InputLabel","Select","MenuItem","Chip","IconButton","Tooltip","TrendingUp","TrendingUpIcon","FitnessCenter","WorkoutIcon","Restaurant","DietIcon","Scale","WeightIcon","Refresh","RefreshIcon","Download","DownloadIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","RechartsTooltip","Legend","ResponsiveContainer","BarChart","Bar","PieChart","Pie","Cell","AreaChart","Area","jsx","_jsx","jsxs","_jsxs","EnhancedAnalyticsDashboard","activeTab","setActiveTab","timeRange","setTimeRange","chartData","setChartData","weightProgress","workoutStats","nutritionData","fitnessScore","loadAnalyticsData","userData","JSON","parse","localStorage","getItem","weightEntries","workouts","meals","realWeightData","generateRealWeightData","realWorkoutData","generateRealWorkoutData","realNutritionData","generateRealNutritionData","realFitnessScore","generateRealFitnessScore","length","generateWeightData","days","parseInt","filteredEntries","filter","entry","entryDate","Date","date","cutoffDate","setDate","getDate","sort","a","b","map","_localStorage$getItem","height","parseFloat","bmi","weight","toLocaleDateString","month","day","Math","round","data","startDate","i","push","random","generateWorkoutData","workoutTypes","forEach","workout","type","name","duration","calories","frequency","caloriesBurned","Object","values","floor","generateNutritionData","recentMeals","meal","mealDate","totals","reduce","acc","protein","totalProtein","carbs","totalCarbs","fat","totalFat","totalCalories","avgDaily","max","value","color","nutrients","colors","nutrient","index","keys","generateFitnessScoreData","dateStr","toISOString","split","dayWorkouts","w","dayMeals","m","dayWeight","find","workoutScore","min","nutritionScore","consistencyScore","totalScore","score","nutrition","consistency","renderWeightProgressChart","children","variant","gutterBottom","width","strokeDasharray","dataKey","yAxisId","orientation","stroke","strokeWidth","renderWorkoutAnalytics","container","spacing","size","xs","md","fill","cx","cy","labelLine","label","_ref","outerRadius","renderNutritionAnalytics","_ref2","fillOpacity","renderFitnessScoreAnalytics","domain","renderSummaryCards","_chartData$weightProg","_chartData$weightProg2","sx","mb","sm","display","alignItems","justifyContent","toFixed","_chartData$weightProg3","_chartData$weightProg4","latest","earliest","change","abs","fontSize","workoutsThisWeek","thisWeek","lastWeek","caloriesToday","current","target","diff","streak","streakDays","p","gap","minWidth","onChange","e","title","onClick","newValue"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/analytics/EnhancedAnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  FitnessCenter as WorkoutIcon,\n  Restaurant as DietIcon,\n  Scale as WeightIcon,\n  Refresh as RefreshIcon,\n  Download as DownloadIcon\n} from '@mui/icons-material';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area\n} from 'recharts';\n\nconst EnhancedAnalyticsDashboard = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [timeRange, setTimeRange] = useState('30');\n  const [chartData, setChartData] = useState({\n    weightProgress: [],\n    workoutStats: [],\n    nutritionData: [],\n    fitnessScore: []\n  });\n\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [timeRange]);\n\n  const loadAnalyticsData = () => {\n    // Load real data from localStorage\n    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n    const weightEntries = JSON.parse(localStorage.getItem('weightEntries') || '[]');\n    const workouts = JSON.parse(localStorage.getItem('workouts') || '[]');\n    const meals = JSON.parse(localStorage.getItem('meals') || '[]');\n\n    // Generate charts from real data\n    const realWeightData = generateRealWeightData(weightEntries);\n    const realWorkoutData = generateRealWorkoutData(workouts);\n    const realNutritionData = generateRealNutritionData(meals);\n    const realFitnessScore = generateRealFitnessScore(userData, weightEntries, workouts, meals);\n\n    setChartData({\n      weightProgress: realWeightData,\n      workoutStats: realWorkoutData,\n      nutritionData: realNutritionData,\n      fitnessScore: realFitnessScore\n    });\n  };\n\n  // Generate real weight data from stored entries\n  const generateRealWeightData = (weightEntries) => {\n    if (!weightEntries || weightEntries.length === 0) {\n      return generateWeightData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const filteredEntries = weightEntries\n      .filter(entry => {\n        const entryDate = new Date(entry.date);\n        const cutoffDate = new Date();\n        cutoffDate.setDate(cutoffDate.getDate() - days);\n        return entryDate >= cutoffDate;\n      })\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    return filteredEntries.map(entry => {\n      const date = new Date(entry.date);\n      const height = parseFloat(localStorage.getItem('fitnessTrackerData')?.height || 175) / 100;\n      const bmi = entry.weight / (height * height);\n      \n      return {\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        weight: entry.weight,\n        bmi: Math.round(bmi * 10) / 10\n      };\n    });\n  };\n\n  const generateWeightData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        weight: 70 + Math.random() * 5 - 2.5,\n        bmi: 22 + Math.random() * 2 - 1\n      });\n    }\n    return data;\n  };\n\n  // Generate real workout data from stored workouts\n  const generateRealWorkoutData = (workouts) => {\n    if (!workouts || workouts.length === 0) {\n      return generateWorkoutData(); // Fallback to mock data\n    }\n\n    const workoutTypes = {};\n    workouts.forEach(workout => {\n      if (!workoutTypes[workout.type]) {\n        workoutTypes[workout.type] = {\n          name: workout.type,\n          duration: 0,\n          calories: 0,\n          frequency: 0\n        };\n      }\n      workoutTypes[workout.type].duration += workout.duration || 0;\n      workoutTypes[workout.type].calories += workout.caloriesBurned || 0;\n      workoutTypes[workout.type].frequency += 1;\n    });\n\n    return Object.values(workoutTypes).map(workout => ({\n      name: workout.name,\n      duration: Math.round(workout.duration / workout.frequency),\n      calories: Math.round(workout.calories / workout.frequency),\n      frequency: workout.frequency\n    }));\n  };\n\n  const generateWorkoutData = () => {\n    const workouts = ['Push-ups', 'Squats', 'Running', 'Weight Lifting', 'Yoga'];\n    return workouts.map(workout => ({\n      name: workout,\n      duration: Math.floor(Math.random() * 60) + 15,\n      calories: Math.floor(Math.random() * 200) + 50,\n      frequency: Math.floor(Math.random() * 7) + 1\n    }));\n  };\n\n  // Generate real nutrition data from stored meals\n  const generateRealNutritionData = (meals) => {\n    if (!meals || meals.length === 0) {\n      return generateNutritionData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const recentMeals = meals.filter(meal => {\n      const mealDate = new Date(meal.date);\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - days);\n      return mealDate >= cutoffDate;\n    });\n\n    const totals = recentMeals.reduce((acc, meal) => ({\n      protein: acc.protein + (meal.totalProtein || 0),\n      carbs: acc.carbs + (meal.totalCarbs || 0),\n      fat: acc.fat + (meal.totalFat || 0),\n      calories: acc.calories + (meal.totalCalories || 0)\n    }), { protein: 0, carbs: 0, fat: 0, calories: 0 });\n\n    const avgDaily = {\n      protein: Math.round(totals.protein / Math.max(1, days)),\n      carbs: Math.round(totals.carbs / Math.max(1, days)),\n      fat: Math.round(totals.fat / Math.max(1, days)),\n      calories: Math.round(totals.calories / Math.max(1, days))\n    };\n\n    return [\n      { name: 'Protein', value: avgDaily.protein, color: '#8884d8' },\n      { name: 'Carbs', value: avgDaily.carbs, color: '#82ca9d' },\n      { name: 'Fat', value: avgDaily.fat, color: '#ffc658' },\n      { name: 'Calories', value: Math.round(avgDaily.calories / 10), color: '#ff7300' }\n    ];\n  };\n\n  const generateNutritionData = () => {\n    const nutrients = ['Protein', 'Carbs', 'Fat', 'Fiber'];\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\n    return nutrients.map((nutrient, index) => ({\n      name: nutrient,\n      value: Math.floor(Math.random() * 100) + 20,\n      color: colors[index]\n    }));\n  };\n\n  // Generate real fitness score from user data\n  const generateRealFitnessScore = (userData, weightEntries, workouts, meals) => {\n    if (!userData || Object.keys(userData).length === 0) {\n      return generateFitnessScoreData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const data = [];\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      const dateStr = date.toISOString().split('T')[0];\n\n      // Calculate daily metrics\n      const dayWorkouts = workouts.filter(w => w.date === dateStr);\n      const dayMeals = meals.filter(m => m.date === dateStr);\n      const dayWeight = weightEntries.find(w => w.date === dateStr);\n\n      // Calculate fitness score components\n      const workoutScore = Math.min(30, dayWorkouts.length * 10);\n      const nutritionScore = Math.min(30, dayMeals.length * 7.5);\n      const consistencyScore = (dayWorkouts.length > 0 || dayMeals.length > 0) ? 20 : 0;\n      const totalScore = workoutScore + nutritionScore + consistencyScore;\n\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        score: Math.max(40, totalScore),\n        workout: workoutScore,\n        nutrition: nutritionScore,\n        consistency: consistencyScore\n      });\n    }\n    return data;\n  };\n\n  const generateFitnessScoreData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        score: Math.floor(Math.random() * 40) + 40,\n        workout: Math.floor(Math.random() * 30) + 20,\n        nutrition: Math.floor(Math.random() * 30) + 20,\n        consistency: Math.floor(Math.random() * 30) + 20\n      });\n    }\n    return data;\n  };\n\n  const renderWeightProgressChart = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Weight & BMI Progress\n        </Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartData.weightProgress}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis yAxisId=\"left\" />\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\n            <RechartsTooltip />\n            <Legend />\n            <Line\n              yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"weight\"\n              stroke=\"#8884d8\"\n              strokeWidth={2}\n              name=\"Weight (kg)\"\n            />\n            <Line\n              yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"bmi\"\n              stroke=\"#82ca9d\"\n              strokeWidth={2}\n              name=\"BMI\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n\n  const renderWorkoutAnalytics = () => (\n    <Grid container spacing={3}>\n      <Grid size={{ xs: 12, md: 8 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Workout Duration by Exercise\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={chartData.workoutStats}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Legend />\n                <Bar dataKey=\"duration\" fill=\"#8884d8\" name=\"Duration (min)\" />\n                <Bar dataKey=\"calories\" fill=\"#82ca9d\" name=\"Calories Burned\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid size={{ xs: 12, md: 4 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Workout Frequency\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={chartData.workoutStats}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, frequency }) => `${name}: ${frequency}`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"frequency\"\n                >\n                  {chartData.workoutStats.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={`hsl(${index * 60}, 70%, 50%)`} />\n                  ))}\n                </Pie>\n                <RechartsTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  const renderNutritionAnalytics = () => (\n    <Grid container spacing={3}>\n      <Grid size={{ xs: 12, md: 6 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Macronutrient Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={chartData.nutritionData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, value }) => `${name}: ${value}g`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {chartData.nutritionData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <RechartsTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid size={{ xs: 12, md: 6 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Daily Calorie Intake Trend\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={chartData.weightProgress}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"weight\"\n                  stroke=\"#8884d8\"\n                  fill=\"#8884d8\"\n                  fillOpacity={0.3}\n                  name=\"Calories\"\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  const renderFitnessScoreAnalytics = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Comprehensive Fitness Score Breakdown\n        </Typography>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={chartData.fitnessScore}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis domain={[0, 100]} />\n            <RechartsTooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"score\"\n              stroke=\"#8884d8\"\n              strokeWidth={3}\n              name=\"Overall Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"workout\"\n              stroke=\"#82ca9d\"\n              strokeWidth={2}\n              name=\"Workout Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"nutrition\"\n              stroke=\"#ffc658\"\n              strokeWidth={2}\n              name=\"Nutrition Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"consistency\"\n              stroke=\"#ff7300\"\n              strokeWidth={2}\n              name=\"Consistency Score\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n\n  const renderSummaryCards = () => (\n    <Grid container spacing={3} sx={{ mb: 3 }}>\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Current Weight\n                </Typography>\n                <Typography variant=\"h4\">\n                  {chartData.weightProgress[chartData.weightProgress.length - 1]?.weight?.toFixed(1) || '0.0'} kg\n                </Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  {(() => {\n                    if (chartData.weightProgress.length < 2) return 'No trend data';\n                    const latest = chartData.weightProgress[chartData.weightProgress.length - 1]?.weight;\n                    const earliest = chartData.weightProgress[0]?.weight;\n                    const change = latest - earliest;\n                    return change > 0 ? `↑ ${change.toFixed(1)} kg this period` : `↓ ${Math.abs(change).toFixed(1)} kg this period`;\n                  })()}\n                </Typography>\n              </Box>\n              <WeightIcon color=\"primary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Workouts This Week\n                </Typography>\n                <Typography variant=\"h4\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    return userData.workoutsThisWeek || '0';\n                  })()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    const thisWeek = parseInt(userData.workoutsThisWeek) || 0;\n                    const lastWeek = Math.max(0, thisWeek - Math.floor(Math.random() * 3));\n                    const change = thisWeek - lastWeek;\n                    return change > 0 ? `+${change} from last week` : 'Same as last week';\n                  })()}\n                </Typography>\n              </Box>\n              <WorkoutIcon color=\"secondary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Avg. Daily Calories\n                </Typography>\n                <Typography variant=\"h4\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    return userData.caloriesToday || '0';\n                  })()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"warning.main\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    const current = parseInt(userData.caloriesToday) || 0;\n                    const target = 2000; // Default target\n                    const diff = current - target;\n                    return diff > 0 ? `+${diff} from target` : `${Math.abs(diff)} below target`;\n                  })()}\n                </Typography>\n              </Box>\n              <DietIcon color=\"success\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Fitness Score\n                </Typography>\n                <Typography variant=\"h4\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    const workouts = parseInt(userData.workoutsThisWeek) || 0;\n                    const calories = parseInt(userData.caloriesToday) || 0;\n                    const streak = parseInt(userData.streakDays) || 0;\n                    \n                    // Calculate fitness score based on activity\n                    let score = 40; // Base score\n                    score += Math.min(30, workouts * 5); // Workout component\n                    score += Math.min(20, Math.floor(calories / 100)); // Nutrition component\n                    score += Math.min(10, streak); // Consistency component\n                    \n                    return Math.min(100, score) + '%';\n                  })()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  {(() => {\n                    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n                    const streak = parseInt(userData.streakDays) || 0;\n                    return streak > 0 ? `+${Math.min(5, streak)}% this week` : 'Start your streak!';\n                  })()}\n                </Typography>\n              </Box>\n              <TrendingUpIcon color=\"primary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">\n          Enhanced Analytics Dashboard\n        </Typography>\n        <Box display=\"flex\" gap={2} alignItems=\"center\">\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel>Time Range</InputLabel>\n            <Select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              label=\"Time Range\"\n            >\n              <MenuItem value=\"7\">Last 7 days</MenuItem>\n              <MenuItem value=\"30\">Last 30 days</MenuItem>\n              <MenuItem value=\"90\">Last 90 days</MenuItem>\n              <MenuItem value=\"365\">Last year</MenuItem>\n            </Select>\n          </FormControl>\n          <Tooltip title=\"Refresh Data\">\n            <IconButton onClick={loadAnalyticsData}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Export Report\">\n            <IconButton>\n              <DownloadIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {renderSummaryCards()}\n\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n          <Tab label=\"Weight Progress\" />\n          <Tab label=\"Workout Analytics\" />\n          <Tab label=\"Nutrition Analytics\" />\n          <Tab label=\"Fitness Score\" />\n        </Tabs>\n      </Paper>\n\n      {activeTab === 0 && renderWeightProgressChart()}\n      {activeTab === 1 && renderWorkoutAnalytics()}\n      {activeTab === 2 && renderNutritionAnalytics()}\n      {activeTab === 3 && renderFitnessScoreAnalytics()}\n    </Box>\n  );\n};\n\nexport default EnhancedAnalyticsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}