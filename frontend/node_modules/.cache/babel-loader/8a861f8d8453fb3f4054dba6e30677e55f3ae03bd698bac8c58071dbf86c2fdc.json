{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth_tq3ir2j\\\\OneDrive\\\\Documents\\\\project 3rd year\\\\one credit\\\\Fitness Tracker\\\\src\\\\components\\\\diet\\\\MealLogger.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, Button, Grid, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, Chip, FormControl, InputLabel, Select, MenuItem, Divider, Alert, Autocomplete } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Save as SaveIcon, Restaurant as FoodIcon, LocalFireDepartment as CalorieIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealLogger = ({\n  onMealSaved,\n  dailyCalorieTarget = 2000\n}) => {\n  _s();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n  const [showFoodForm, setShowFoodForm] = useState(false);\n  const mealTypes = [{\n    value: 'breakfast',\n    label: 'Breakfast'\n  }, {\n    value: 'lunch',\n    label: 'Lunch'\n  }, {\n    value: 'dinner',\n    label: 'Dinner'\n  }, {\n    value: 'snack',\n    label: 'Snack'\n  }];\n  const commonFoods = [{\n    name: 'Chicken Breast',\n    calories: 165,\n    protein: 31,\n    carbs: 0,\n    fat: 3.6,\n    per: 100\n  }, {\n    name: 'Brown Rice',\n    calories: 111,\n    protein: 2.6,\n    carbs: 23,\n    fat: 0.9,\n    per: 100\n  }, {\n    name: 'Broccoli',\n    calories: 34,\n    protein: 2.8,\n    carbs: 7,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Salmon',\n    calories: 208,\n    protein: 25,\n    carbs: 0,\n    fat: 12,\n    per: 100\n  }, {\n    name: 'Sweet Potato',\n    calories: 86,\n    protein: 1.6,\n    carbs: 20,\n    fat: 0.1,\n    per: 100\n  }, {\n    name: 'Eggs',\n    calories: 155,\n    protein: 13,\n    carbs: 1.1,\n    fat: 11,\n    per: 100\n  }, {\n    name: 'Oatmeal',\n    calories: 68,\n    protein: 2.4,\n    carbs: 12,\n    fat: 1.4,\n    per: 100\n  }, {\n    name: 'Banana',\n    calories: 89,\n    protein: 1.1,\n    carbs: 23,\n    fat: 0.3,\n    per: 100\n  }, {\n    name: 'Greek Yogurt',\n    calories: 59,\n    protein: 10,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Almonds',\n    calories: 579,\n    protein: 21,\n    carbs: 22,\n    fat: 50,\n    per: 100\n  }, {\n    name: 'Spinach',\n    calories: 23,\n    protein: 2.9,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Quinoa',\n    calories: 120,\n    protein: 4.4,\n    carbs: 22,\n    fat: 1.9,\n    per: 100\n  }];\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n  const handleMealChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodSelect = food => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n  const removeFoodItem = foodId => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n  const saveMeal = () => {\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n    const meal = {\n      ...mealData,\n      id: Date.now(),\n      foodItems: foodItems,\n      totalCalories: foodItems.reduce((sum, food) => sum + food.calories, 0),\n      totalProtein: foodItems.reduce((sum, food) => sum + food.protein, 0),\n      totalCarbs: foodItems.reduce((sum, food) => sum + food.carbs, 0),\n      totalFat: foodItems.reduce((sum, food) => sum + food.fat, 0),\n      totalQuantity: foodItems.reduce((sum, food) => sum + food.quantity, 0)\n    };\n\n    // Save to localStorage\n    const savedMeals = JSON.parse(localStorage.getItem('meals') || '[]');\n    savedMeals.push(meal);\n    localStorage.setItem('meals', JSON.stringify(savedMeals));\n\n    // Reset form\n    setMealData({\n      name: '',\n      date: new Date().toISOString().split('T')[0],\n      mealType: 'breakfast',\n      notes: ''\n    });\n    setFoodItems([]);\n\n    // Notify parent component\n    if (onMealSaved) {\n      onMealSaved(meal);\n    }\n  };\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n    return {\n      totalCalories,\n      totalProtein,\n      totalCarbs,\n      totalFat\n    };\n  };\n  const getMealTypeColor = mealType => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n  const nutrition = getTotalNutrition();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Log New Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Meal Name\",\n            name: \"name\",\n            value: mealData.name,\n            onChange: handleMealChange,\n            placeholder: \"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Date\",\n            name: \"date\",\n            type: \"date\",\n            value: mealData.date,\n            onChange: handleMealChange,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"mealType\",\n              value: mealData.mealType,\n              onChange: handleMealChange,\n              label: \"Meal Type\",\n              children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Notes\",\n            name: \"notes\",\n            value: mealData.notes,\n            onChange: handleMealChange,\n            multiline: true,\n            rows: 2,\n            placeholder: \"How did it taste? Any special notes?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Food Items (\", foodItems.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowFoodForm(true),\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), showFoodForm && /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Add Food Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: commonFoods,\n              getOptionLabel: option => option.name,\n              onChange: (event, value) => handleFoodSelect(value),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Food Name\",\n                name: \"name\",\n                value: currentFood.name,\n                onChange: handleFoodChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              value: currentFood.quantity,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"unit\",\n                value: currentFood.unit,\n                onChange: handleFoodChange,\n                label: \"Unit\",\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Calories (per 100g)\",\n              name: \"calories\",\n              type: \"number\",\n              value: currentFood.calories,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Protein (g per 100g)\",\n              name: \"protein\",\n              type: \"number\",\n              value: currentFood.protein,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Carbs (g per 100g)\",\n              name: \"carbs\",\n              type: \"number\",\n              value: currentFood.carbs,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Fat (g per 100g)\",\n              name: \"fat\",\n              type: \"number\",\n              value: currentFood.fat,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: addFoodItem,\n            disabled: !currentFood.name || !currentFood.quantity || !currentFood.calories,\n            children: \"Add Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setShowFoodForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n        children: foodItems.map(food => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              children: [/*#__PURE__*/_jsxDEV(FoodIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: food.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${food.quantity}${food.unit}`,\n                size: \"small\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${food.calories} cal`,\n                size: \"small\",\n                color: \"warning\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `P: ${food.protein}g`,\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"success\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `C: ${food.carbs}g`,\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"info\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `F: ${food.fat}g`,\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => removeFoodItem(food.id),\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Meal Summary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), \" \", foodItems.length, \" food items,\", nutrition.totalCalories, \" calories,\", nutrition.totalProtein, \"g protein,\", nutrition.totalCarbs, \"g carbs,\", nutrition.totalFat, \"g fat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 28\n            }, this),\n            onClick: saveMeal,\n            disabled: !mealData.name,\n            size: \"large\",\n            children: \"Save Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(MealLogger, \"G5JC8aTYlbYl2K6XjTnePuRDHLU=\");\n_c = MealLogger;\nexport default MealLogger;\nvar _c;\n$RefreshReg$(_c, \"MealLogger\");","map":{"version":3,"names":["React","useState","Box","Card","CardContent","Typography","TextField","Button","Grid","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Chip","FormControl","InputLabel","Select","MenuItem","Divider","Alert","Autocomplete","Add","AddIcon","Delete","DeleteIcon","Save","SaveIcon","Restaurant","FoodIcon","LocalFireDepartment","CalorieIcon","jsxDEV","_jsxDEV","MealLogger","onMealSaved","dailyCalorieTarget","_s","mealData","setMealData","name","date","Date","toISOString","split","mealType","notes","foodItems","setFoodItems","currentFood","setCurrentFood","quantity","unit","calories","protein","carbs","fat","showFoodForm","setShowFoodForm","mealTypes","value","label","commonFoods","per","units","handleMealChange","e","target","prev","handleFoodChange","handleFoodSelect","food","toString","addFoodItem","parseFloat","multiplier","newFoodItem","id","now","Math","round","removeFoodItem","foodId","filter","saveMeal","length","meal","totalCalories","reduce","sum","totalProtein","totalCarbs","totalFat","totalQuantity","savedMeals","JSON","parse","localStorage","getItem","push","setItem","stringify","getTotalNutrition","getMealTypeColor","colors","nutrition","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","fullWidth","onChange","placeholder","type","InputLabelProps","shrink","map","multiline","rows","sx","my","display","justifyContent","alignItems","mb","startIcon","onClick","p","options","getOptionLabel","option","event","renderInput","params","inputProps","min","step","mt","gap","disabled","divider","primary","color","secondary","size","mr","edge","severity","_c","$RefreshReg$"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/src/components/diet/MealLogger.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Alert,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Save as SaveIcon,\n  Restaurant as FoodIcon,\n  LocalFireDepartment as CalorieIcon\n} from '@mui/icons-material';\n\nconst MealLogger = ({ onMealSaved, dailyCalorieTarget = 2000 }) => {\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n\n  const [showFoodForm, setShowFoodForm] = useState(false);\n\n  const mealTypes = [\n    { value: 'breakfast', label: 'Breakfast' },\n    { value: 'lunch', label: 'Lunch' },\n    { value: 'dinner', label: 'Dinner' },\n    { value: 'snack', label: 'Snack' }\n  ];\n\n  const commonFoods = [\n    { name: 'Chicken Breast', calories: 165, protein: 31, carbs: 0, fat: 3.6, per: 100 },\n    { name: 'Brown Rice', calories: 111, protein: 2.6, carbs: 23, fat: 0.9, per: 100 },\n    { name: 'Broccoli', calories: 34, protein: 2.8, carbs: 7, fat: 0.4, per: 100 },\n    { name: 'Salmon', calories: 208, protein: 25, carbs: 0, fat: 12, per: 100 },\n    { name: 'Sweet Potato', calories: 86, protein: 1.6, carbs: 20, fat: 0.1, per: 100 },\n    { name: 'Eggs', calories: 155, protein: 13, carbs: 1.1, fat: 11, per: 100 },\n    { name: 'Oatmeal', calories: 68, protein: 2.4, carbs: 12, fat: 1.4, per: 100 },\n    { name: 'Banana', calories: 89, protein: 1.1, carbs: 23, fat: 0.3, per: 100 },\n    { name: 'Greek Yogurt', calories: 59, protein: 10, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Almonds', calories: 579, protein: 21, carbs: 22, fat: 50, per: 100 },\n    { name: 'Spinach', calories: 23, protein: 2.9, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Quinoa', calories: 120, protein: 4.4, carbs: 22, fat: 1.9, per: 100 }\n  ];\n\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n\n  const handleMealChange = (e) => {\n    const { name, value } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodSelect = (food) => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n\n  const removeFoodItem = (foodId) => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n\n  const saveMeal = () => {\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n\n    const meal = {\n      ...mealData,\n      id: Date.now(),\n      foodItems: foodItems,\n      totalCalories: foodItems.reduce((sum, food) => sum + food.calories, 0),\n      totalProtein: foodItems.reduce((sum, food) => sum + food.protein, 0),\n      totalCarbs: foodItems.reduce((sum, food) => sum + food.carbs, 0),\n      totalFat: foodItems.reduce((sum, food) => sum + food.fat, 0),\n      totalQuantity: foodItems.reduce((sum, food) => sum + food.quantity, 0)\n    };\n\n    // Save to localStorage\n    const savedMeals = JSON.parse(localStorage.getItem('meals') || '[]');\n    savedMeals.push(meal);\n    localStorage.setItem('meals', JSON.stringify(savedMeals));\n\n    // Reset form\n    setMealData({\n      name: '',\n      date: new Date().toISOString().split('T')[0],\n      mealType: 'breakfast',\n      notes: ''\n    });\n    setFoodItems([]);\n\n    // Notify parent component\n    if (onMealSaved) {\n      onMealSaved(meal);\n    }\n  };\n\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n\n    return { totalCalories, totalProtein, totalCarbs, totalFat };\n  };\n\n  const getMealTypeColor = (mealType) => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n\n  const nutrition = getTotalNutrition();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Log New Meal\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Meal Name\"\n              name=\"name\"\n              value={mealData.name}\n              onChange={handleMealChange}\n              placeholder=\"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Date\"\n              name=\"date\"\n              type=\"date\"\n              value={mealData.date}\n              onChange={handleMealChange}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth>\n              <InputLabel>Meal Type</InputLabel>\n              <Select\n                name=\"mealType\"\n                value={mealData.mealType}\n                onChange={handleMealChange}\n                label=\"Meal Type\"\n              >\n                {mealTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Notes\"\n              name=\"notes\"\n              value={mealData.notes}\n              onChange={handleMealChange}\n              multiline\n              rows={2}\n              placeholder=\"How did it taste? Any special notes?\"\n            />\n          </Grid>\n        </Grid>\n\n        <Divider sx={{ my: 3 }} />\n\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\">\n            Food Items ({foodItems.length})\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={() => setShowFoodForm(true)}\n          >\n            Add Food\n          </Button>\n        </Box>\n\n        {showFoodForm && (\n          <Card variant=\"outlined\" sx={{ mb: 2, p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Add Food Item\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Autocomplete\n                  options={commonFoods}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, value) => handleFoodSelect(value)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Food Name\"\n                      name=\"name\"\n                      value={currentFood.name}\n                      onChange={handleFoodChange}\n                    />\n                  )}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Quantity\"\n                  name=\"quantity\"\n                  type=\"number\"\n                  value={currentFood.quantity}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <FormControl fullWidth>\n                  <InputLabel>Unit</InputLabel>\n                  <Select\n                    name=\"unit\"\n                    value={currentFood.unit}\n                    onChange={handleFoodChange}\n                    label=\"Unit\"\n                  >\n                    {units.map((unit) => (\n                      <MenuItem key={unit} value={unit}>\n                        {unit}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Calories (per 100g)\"\n                  name=\"calories\"\n                  type=\"number\"\n                  value={currentFood.calories}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Protein (g per 100g)\"\n                  name=\"protein\"\n                  type=\"number\"\n                  value={currentFood.protein}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Carbs (g per 100g)\"\n                  name=\"carbs\"\n                  type=\"number\"\n                  value={currentFood.carbs}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid item xs={12} sm={3}>\n                <TextField\n                  fullWidth\n                  label=\"Fat (g per 100g)\"\n                  name=\"fat\"\n                  type=\"number\"\n                  value={currentFood.fat}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                onClick={addFoodItem}\n                disabled={!currentFood.name || !currentFood.quantity || !currentFood.calories}\n              >\n                Add Food\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => setShowFoodForm(false)}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Card>\n        )}\n\n        {foodItems.length > 0 && (\n          <List>\n            {foodItems.map((food) => (\n              <ListItem key={food.id} divider>\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      <FoodIcon color=\"primary\" />\n                      <Typography variant=\"subtitle1\">\n                        {food.name}\n                      </Typography>\n                    </Box>\n                  }\n                  secondary={\n                    <Box>\n                      <Chip \n                        label={`${food.quantity}${food.unit}`} \n                        size=\"small\" \n                        sx={{ mr: 1 }}\n                      />\n                      <Chip \n                        label={`${food.calories} cal`} \n                        size=\"small\" \n                        color=\"warning\"\n                        sx={{ mr: 1 }}\n                      />\n                      <Chip \n                        label={`P: ${food.protein}g`} \n                        size=\"small\" \n                        variant=\"outlined\"\n                        color=\"success\"\n                        sx={{ mr: 1 }}\n                      />\n                      <Chip \n                        label={`C: ${food.carbs}g`} \n                        size=\"small\" \n                        variant=\"outlined\"\n                        color=\"info\"\n                        sx={{ mr: 1 }}\n                      />\n                      <Chip \n                        label={`F: ${food.fat}g`} \n                        size=\"small\" \n                        variant=\"outlined\"\n                        color=\"error\"\n                      />\n                    </Box>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => removeFoodItem(food.id)}\n                    color=\"error\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n\n        {foodItems.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            <Alert severity=\"info\">\n              <Typography variant=\"body2\">\n                <strong>Meal Summary:</strong> {foodItems.length} food items, \n                {nutrition.totalCalories} calories, \n                {nutrition.totalProtein}g protein, \n                {nutrition.totalCarbs}g carbs, \n                {nutrition.totalFat}g fat\n              </Typography>\n            </Alert>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                startIcon={<SaveIcon />}\n                onClick={saveMeal}\n                disabled={!mealData.name}\n                size=\"large\"\n              >\n                Save Meal\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MealLogger;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}