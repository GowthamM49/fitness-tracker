{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Grid,Button,Chip,List,ListItem,ListItemText,ListItemIcon,Alert,CircularProgress,Tabs,Tab,Accordion,AccordionSummary,AccordionDetails,IconButton,Tooltip}from'@mui/material';import{Restaurant as FoodIcon,AccessTime as TimeIcon,LocalFireDepartment as CalorieIcon,ExpandMore as ExpandMoreIcon,Star as StarIcon,TrendingUp as TrendingUpIcon,Refresh as RefreshIcon,Add as AddIcon}from'@mui/icons-material';import{recommendationService}from'../../services/recommendationService';import{useAuth}from'../../context/AuthContext';import CustomMealCreator from'./CustomMealCreator';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MealRecommendations=_ref=>{let{onMealSelect}=_ref;const{isAuthenticated}=useAuth();const[recommendations,setRecommendations]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[selectedTab,setSelectedTab]=useState(0);const[userProfile,setUserProfile]=useState(null);const[showCustomMealCreator,setShowCustomMealCreator]=useState(false);const[customMeals,setCustomMeals]=useState([]);const mealTypes=[{value:'all',label:'All Meals',icon:/*#__PURE__*/_jsx(FoodIcon,{})},{value:'breakfast',label:'Breakfast',icon:/*#__PURE__*/_jsx(FoodIcon,{})},{value:'lunch',label:'Lunch',icon:/*#__PURE__*/_jsx(FoodIcon,{})},{value:'dinner',label:'Dinner',icon:/*#__PURE__*/_jsx(FoodIcon,{})},{value:'snack',label:'Snack',icon:/*#__PURE__*/_jsx(FoodIcon,{})}];useEffect(()=>{if(isAuthenticated){fetchRecommendations();fetchCustomMeals();}},[isAuthenticated]);const fetchRecommendations=async function(){let mealType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';setLoading(true);setError('');try{let data;if(mealType==='all'){data=await recommendationService.getMealRecommendations();}else{data=await recommendationService.getMealRecommendationsByType(mealType);}setRecommendations(data.recommendations||[]);setUserProfile(data.userProfile);}catch(error){console.error('Error fetching recommendations:',error);setError('Failed to load meal recommendations. Please try again.');}finally{setLoading(false);}};const fetchCustomMeals=async()=>{try{const data=await recommendationService.getCustomMeals();setCustomMeals(data.customMeals||[]);}catch(error){console.error('Error fetching custom meals:',error);}};const handleCustomMealCreated=newMeal=>{setCustomMeals(prev=>[newMeal,...prev]);setShowCustomMealCreator(false);};const handleTabChange=(event,newValue)=>{setSelectedTab(newValue);const mealType=mealTypes[newValue].value;fetchRecommendations(mealType);};const handleRefresh=()=>{const mealType=mealTypes[selectedTab].value;fetchRecommendations(mealType);};const handleMealSelect=recommendation=>{if(onMealSelect){onMealSelect(recommendation);}};const getDifficultyColor=difficulty=>{switch(difficulty.toLowerCase()){case'easy':return'success';case'medium':return'warning';case'hard':return'error';default:return'default';}};const getMealTypeColor=mealType=>{switch(mealType.toLowerCase()){case'breakfast':return'primary';case'lunch':return'success';case'dinner':return'secondary';case'snack':return'warning';default:return'default';}};if(!isAuthenticated){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Please log in to get personalized meal recommendations.\"})})})});}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(StarIcon,{color:\"primary\",sx:{mr:1,verticalAlign:'middle'}}),\"Personalized Meal Recommendations\"]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setShowCustomMealCreator(true),size:\"small\",children:\"Create Custom Meal\"}),/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh recommendations\",children:/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(IconButton,{onClick:handleRefresh,disabled:loading,children:/*#__PURE__*/_jsx(RefreshIcon,{})})})})]})]}),userProfile&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Your Profile:\"}),\" \",userProfile.fitnessGoal,\" goal,\",userProfile.age,\" years old, \",userProfile.gender,\",\",userProfile.height,\"cm, \",userProfile.weight,\"kg\"]})}),/*#__PURE__*/_jsx(Tabs,{value:selectedTab,onChange:handleTabChange,variant:\"scrollable\",scrollButtons:\"auto\",sx:{mb:2},children:mealTypes.map((type,index)=>/*#__PURE__*/_jsx(Tab,{label:type.label,icon:type.icon,iconPosition:\"start\"},type.value))}),loading&&/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",py:4,children:/*#__PURE__*/_jsx(CircularProgress,{})}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),!loading&&!error&&recommendations.length===0&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"No recommendations available. Please complete your profile to get personalized suggestions.\"})}),!loading&&!error&&(recommendations.length>0||customMeals.length>0)&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[customMeals.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{mt:2,mb:2},children:\"Your Custom Meals\"})}),customMeals.slice(0,4).map((meal,index)=>/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",sx:{height:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"flex-start\",mb:2,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:meal.name}),/*#__PURE__*/_jsx(Chip,{label:meal.mealType,color:getMealTypeColor(meal.mealType),size:\"small\",sx:{mb:1}})]}),/*#__PURE__*/_jsxs(Box,{textAlign:\"right\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"primary\",children:[meal.totalCalories,\" cal\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Custom Meal\"})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:meal.notes||'Your custom creation'}),/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(CalorieIcon,{sx:{mr:1,verticalAlign:'middle',fontSize:16}}),\"Nutrition\"]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,flexWrap:\"wrap\",children:[/*#__PURE__*/_jsx(Chip,{label:`${meal.totalCalories} cal`,size:\"small\",color:\"warning\"}),/*#__PURE__*/_jsx(Chip,{label:`${meal.totalProtein}g protein`,size:\"small\",color:\"success\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:`${meal.totalCarbs}g carbs`,size:\"small\",color:\"info\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:`${meal.totalFat}g fat`,size:\"small\",color:\"error\",variant:\"outlined\"})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:()=>handleMealSelect(meal),startIcon:/*#__PURE__*/_jsx(FoodIcon,{}),children:\"Use This Meal\"})]})})},`custom-${meal._id}`))]}),recommendations.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{mt:2,mb:2},children:\"AI Recommendations\"})}),recommendations.map((recommendation,index)=>/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",sx:{height:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"flex-start\",mb:2,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:recommendation.name}),/*#__PURE__*/_jsx(Chip,{label:recommendation.mealType,color:getMealTypeColor(recommendation.mealType),size:\"small\",sx:{mb:1}})]}),/*#__PURE__*/_jsxs(Box,{textAlign:\"right\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"primary\",children:[recommendation.estimatedCalories,\" cal\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:recommendation.prepTime})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:recommendation.description}),/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(CalorieIcon,{sx:{mr:1,verticalAlign:'middle',fontSize:16}}),\"Nutrition (per serving)\"]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,flexWrap:\"wrap\",children:[/*#__PURE__*/_jsx(Chip,{label:`${recommendation.nutrition.calories} cal`,size:\"small\",color:\"warning\"}),/*#__PURE__*/_jsx(Chip,{label:`${recommendation.nutrition.protein}g protein`,size:\"small\",color:\"success\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:`${recommendation.nutrition.carbs}g carbs`,size:\"small\",color:\"info\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:`${recommendation.nutrition.fat}g fat`,size:\"small\",color:\"error\",variant:\"outlined\"})]})]}),/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",children:[/*#__PURE__*/_jsx(FoodIcon,{sx:{mr:1,verticalAlign:'middle',fontSize:16}}),\"Ingredients (\",recommendation.foodItems.length,\" items)\"]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(List,{dense:true,children:recommendation.foodItems.map((food,foodIndex)=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FoodIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:food.name,secondary:`${food.quantity}${food.unit} - ${food.calories} cal`})]},foodIndex))})})]}),/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(TrendingUpIcon,{sx:{mr:1,verticalAlign:'middle',fontSize:16}}),\"Benefits\"]}),/*#__PURE__*/_jsx(Box,{display:\"flex\",gap:1,flexWrap:\"wrap\",mb:2,children:recommendation.benefits.map((benefit,benefitIndex)=>/*#__PURE__*/_jsx(Chip,{label:benefit,size:\"small\",variant:\"outlined\",color:\"primary\"},benefitIndex))}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,flexWrap:\"wrap\",mb:2,children:[/*#__PURE__*/_jsx(Chip,{label:recommendation.difficulty,size:\"small\",color:getDifficultyColor(recommendation.difficulty)}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(TimeIcon,{}),label:recommendation.prepTime,size:\"small\",variant:\"outlined\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:()=>handleMealSelect(recommendation),startIcon:/*#__PURE__*/_jsx(FoodIcon,{}),children:\"Use This Meal\"})]})]})})},index))]})]}),showCustomMealCreator&&/*#__PURE__*/_jsx(CustomMealCreator,{onMealCreated:handleCustomMealCreated,onClose:()=>setShowCustomMealCreator(false)})]})});};export default MealRecommendations;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Grid","Button","Chip","List","ListItem","ListItemText","ListItemIcon","Alert","CircularProgress","Tabs","Tab","Accordion","AccordionSummary","AccordionDetails","IconButton","Tooltip","Restaurant","FoodIcon","AccessTime","TimeIcon","LocalFireDepartment","CalorieIcon","ExpandMore","ExpandMoreIcon","Star","StarIcon","TrendingUp","TrendingUpIcon","Refresh","RefreshIcon","Add","AddIcon","recommendationService","useAuth","CustomMealCreator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MealRecommendations","_ref","onMealSelect","isAuthenticated","recommendations","setRecommendations","loading","setLoading","error","setError","selectedTab","setSelectedTab","userProfile","setUserProfile","showCustomMealCreator","setShowCustomMealCreator","customMeals","setCustomMeals","mealTypes","value","label","icon","fetchRecommendations","fetchCustomMeals","mealType","arguments","length","undefined","data","getMealRecommendations","getMealRecommendationsByType","console","getCustomMeals","handleCustomMealCreated","newMeal","prev","handleTabChange","event","newValue","handleRefresh","handleMealSelect","recommendation","getDifficultyColor","difficulty","toLowerCase","getMealTypeColor","children","severity","variant","display","justifyContent","alignItems","mb","gutterBottom","color","sx","mr","verticalAlign","gap","startIcon","onClick","size","title","disabled","fitnessGoal","age","gender","height","weight","onChange","scrollButtons","map","type","index","iconPosition","py","container","spacing","xs","mt","slice","meal","md","name","textAlign","totalCalories","paragraph","notes","fontSize","flexWrap","totalProtein","totalCarbs","totalFat","fullWidth","_id","estimatedCalories","prepTime","description","nutrition","calories","protein","carbs","fat","expandIcon","foodItems","dense","food","foodIndex","primary","secondary","quantity","unit","benefits","benefit","benefitIndex","onMealCreated","onClose"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/diet/MealRecommendations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Button,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  Restaurant as FoodIcon,\n  AccessTime as TimeIcon,\n  LocalFireDepartment as CalorieIcon,\n  ExpandMore as ExpandMoreIcon,\n  Star as StarIcon,\n  TrendingUp as TrendingUpIcon,\n  Refresh as RefreshIcon,\n  Add as AddIcon\n} from '@mui/icons-material';\nimport { recommendationService } from '../../services/recommendationService';\nimport { useAuth } from '../../context/AuthContext';\nimport CustomMealCreator from './CustomMealCreator';\n\nconst MealRecommendations = ({ onMealSelect }) => {\n  const { isAuthenticated } = useAuth();\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [userProfile, setUserProfile] = useState(null);\n  const [showCustomMealCreator, setShowCustomMealCreator] = useState(false);\n  const [customMeals, setCustomMeals] = useState([]);\n\n  const mealTypes = [\n    { value: 'all', label: 'All Meals', icon: <FoodIcon /> },\n    { value: 'breakfast', label: 'Breakfast', icon: <FoodIcon /> },\n    { value: 'lunch', label: 'Lunch', icon: <FoodIcon /> },\n    { value: 'dinner', label: 'Dinner', icon: <FoodIcon /> },\n    { value: 'snack', label: 'Snack', icon: <FoodIcon /> }\n  ];\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchRecommendations();\n      fetchCustomMeals();\n    }\n  }, [isAuthenticated]);\n\n  const fetchRecommendations = async (mealType = 'all') => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      let data;\n      if (mealType === 'all') {\n        data = await recommendationService.getMealRecommendations();\n      } else {\n        data = await recommendationService.getMealRecommendationsByType(mealType);\n      }\n      \n      setRecommendations(data.recommendations || []);\n      setUserProfile(data.userProfile);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n      setError('Failed to load meal recommendations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCustomMeals = async () => {\n    try {\n      const data = await recommendationService.getCustomMeals();\n      setCustomMeals(data.customMeals || []);\n    } catch (error) {\n      console.error('Error fetching custom meals:', error);\n    }\n  };\n\n  const handleCustomMealCreated = (newMeal) => {\n    setCustomMeals(prev => [newMeal, ...prev]);\n    setShowCustomMealCreator(false);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n    const mealType = mealTypes[newValue].value;\n    fetchRecommendations(mealType);\n  };\n\n  const handleRefresh = () => {\n    const mealType = mealTypes[selectedTab].value;\n    fetchRecommendations(mealType);\n  };\n\n  const handleMealSelect = (recommendation) => {\n    if (onMealSelect) {\n      onMealSelect(recommendation);\n    }\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty.toLowerCase()) {\n      case 'easy':\n        return 'success';\n      case 'medium':\n        return 'warning';\n      case 'hard':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const getMealTypeColor = (mealType) => {\n    switch (mealType.toLowerCase()) {\n      case 'breakfast':\n        return 'primary';\n      case 'lunch':\n        return 'success';\n      case 'dinner':\n        return 'secondary';\n      case 'snack':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <Card>\n        <CardContent>\n          <Alert severity=\"info\">\n            <Typography variant=\"body2\">\n              Please log in to get personalized meal recommendations.\n            </Typography>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\" gutterBottom>\n            <StarIcon color=\"primary\" sx={{ mr: 1, verticalAlign: 'middle' }} />\n            Personalized Meal Recommendations\n          </Typography>\n          <Box display=\"flex\" gap={1}>\n            <Button\n              variant=\"outlined\"\n              startIcon={<AddIcon />}\n              onClick={() => setShowCustomMealCreator(true)}\n              size=\"small\"\n            >\n              Create Custom Meal\n            </Button>\n            <Tooltip title=\"Refresh recommendations\">\n              <span>\n                <IconButton onClick={handleRefresh} disabled={loading}>\n                  <RefreshIcon />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </Box>\n        </Box>\n\n        {userProfile && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            <Typography variant=\"body2\">\n              <strong>Your Profile:</strong> {userProfile.fitnessGoal} goal, \n              {userProfile.age} years old, {userProfile.gender}, \n              {userProfile.height}cm, {userProfile.weight}kg\n            </Typography>\n          </Alert>\n        )}\n\n        <Tabs\n          value={selectedTab}\n          onChange={handleTabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          sx={{ mb: 2 }}\n        >\n          {mealTypes.map((type, index) => (\n            <Tab\n              key={type.value}\n              label={type.label}\n              icon={type.icon}\n              iconPosition=\"start\"\n            />\n          ))}\n        </Tabs>\n\n        {loading && (\n          <Box display=\"flex\" justifyContent=\"center\" py={4}>\n            <CircularProgress />\n          </Box>\n        )}\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {!loading && !error && recommendations.length === 0 && (\n          <Alert severity=\"info\">\n            <Typography variant=\"body2\">\n              No recommendations available. Please complete your profile to get personalized suggestions.\n            </Typography>\n          </Alert>\n        )}\n\n        {!loading && !error && (recommendations.length > 0 || customMeals.length > 0) && (\n          <Grid container spacing={3}>\n            {/* Custom Meals Section */}\n            {customMeals.length > 0 && (\n              <>\n                <Grid size={{ xs: 12 }}>\n                  <Typography variant=\"h6\" gutterBottom sx={{ mt: 2, mb: 2 }}>\n                    Your Custom Meals\n                  </Typography>\n                </Grid>\n                {customMeals.slice(0, 4).map((meal, index) => (\n                  <Grid size={{ xs: 12, md: 6 }} key={`custom-${meal._id}`}>\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                      <CardContent>\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\n                          <Box>\n                            <Typography variant=\"h6\" gutterBottom>\n                              {meal.name}\n                            </Typography>\n                            <Chip\n                              label={meal.mealType}\n                              color={getMealTypeColor(meal.mealType)}\n                              size=\"small\"\n                              sx={{ mb: 1 }}\n                            />\n                          </Box>\n                          <Box textAlign=\"right\">\n                            <Typography variant=\"h6\" color=\"primary\">\n                              {meal.totalCalories} cal\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              Custom Meal\n                            </Typography>\n                          </Box>\n                        </Box>\n\n                        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                          {meal.notes || 'Your custom creation'}\n                        </Typography>\n\n                        <Box mb={2}>\n                          <Typography variant=\"subtitle2\" gutterBottom>\n                            <CalorieIcon sx={{ mr: 1, verticalAlign: 'middle', fontSize: 16 }} />\n                            Nutrition\n                          </Typography>\n                          <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n                            <Chip\n                              label={`${meal.totalCalories} cal`}\n                              size=\"small\"\n                              color=\"warning\"\n                            />\n                            <Chip\n                              label={`${meal.totalProtein}g protein`}\n                              size=\"small\"\n                              color=\"success\"\n                              variant=\"outlined\"\n                            />\n                            <Chip\n                              label={`${meal.totalCarbs}g carbs`}\n                              size=\"small\"\n                              color=\"info\"\n                              variant=\"outlined\"\n                            />\n                            <Chip\n                              label={`${meal.totalFat}g fat`}\n                              size=\"small\"\n                              color=\"error\"\n                              variant=\"outlined\"\n                            />\n                          </Box>\n                        </Box>\n\n                        <Button\n                          variant=\"contained\"\n                          fullWidth\n                          onClick={() => handleMealSelect(meal)}\n                          startIcon={<FoodIcon />}\n                        >\n                          Use This Meal\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </>\n            )}\n\n            {/* AI Recommendations Section */}\n            {recommendations.length > 0 && (\n              <>\n                <Grid size={{ xs: 12 }}>\n                  <Typography variant=\"h6\" gutterBottom sx={{ mt: 2, mb: 2 }}>\n                    AI Recommendations\n                  </Typography>\n                </Grid>\n                {recommendations.map((recommendation, index) => (\n              <Grid size={{ xs: 12, md: 6 }} key={index}>\n                <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                  <CardContent>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          {recommendation.name}\n                        </Typography>\n                        <Chip\n                          label={recommendation.mealType}\n                          color={getMealTypeColor(recommendation.mealType)}\n                          size=\"small\"\n                          sx={{ mb: 1 }}\n                        />\n                      </Box>\n                      <Box textAlign=\"right\">\n                        <Typography variant=\"h6\" color=\"primary\">\n                          {recommendation.estimatedCalories} cal\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {recommendation.prepTime}\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {recommendation.description}\n                    </Typography>\n\n                    <Box mb={2}>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        <CalorieIcon sx={{ mr: 1, verticalAlign: 'middle', fontSize: 16 }} />\n                        Nutrition (per serving)\n                      </Typography>\n                      <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n                        <Chip\n                          label={`${recommendation.nutrition.calories} cal`}\n                          size=\"small\"\n                          color=\"warning\"\n                        />\n                        <Chip\n                          label={`${recommendation.nutrition.protein}g protein`}\n                          size=\"small\"\n                          color=\"success\"\n                          variant=\"outlined\"\n                        />\n                        <Chip\n                          label={`${recommendation.nutrition.carbs}g carbs`}\n                          size=\"small\"\n                          color=\"info\"\n                          variant=\"outlined\"\n                        />\n                        <Chip\n                          label={`${recommendation.nutrition.fat}g fat`}\n                          size=\"small\"\n                          color=\"error\"\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    </Box>\n\n                    <Accordion>\n                      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography variant=\"subtitle2\">\n                          <FoodIcon sx={{ mr: 1, verticalAlign: 'middle', fontSize: 16 }} />\n                          Ingredients ({recommendation.foodItems.length} items)\n                        </Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <List dense>\n                          {recommendation.foodItems.map((food, foodIndex) => (\n                            <ListItem key={foodIndex}>\n                              <ListItemIcon>\n                                <FoodIcon fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText\n                                primary={food.name}\n                                secondary={`${food.quantity}${food.unit} - ${food.calories} cal`}\n                              />\n                            </ListItem>\n                          ))}\n                        </List>\n                      </AccordionDetails>\n                    </Accordion>\n\n                    <Box mt={2}>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        <TrendingUpIcon sx={{ mr: 1, verticalAlign: 'middle', fontSize: 16 }} />\n                        Benefits\n                      </Typography>\n                      <Box display=\"flex\" gap={1} flexWrap=\"wrap\" mb={2}>\n                        {recommendation.benefits.map((benefit, benefitIndex) => (\n                          <Chip\n                            key={benefitIndex}\n                            label={benefit}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          />\n                        ))}\n                      </Box>\n\n                      <Box display=\"flex\" gap={1} flexWrap=\"wrap\" mb={2}>\n                        <Chip\n                          label={recommendation.difficulty}\n                          size=\"small\"\n                          color={getDifficultyColor(recommendation.difficulty)}\n                        />\n                        <Chip\n                          icon={<TimeIcon />}\n                          label={recommendation.prepTime}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                      </Box>\n\n                      <Button\n                        variant=\"contained\"\n                        fullWidth\n                        onClick={() => handleMealSelect(recommendation)}\n                        startIcon={<FoodIcon />}\n                      >\n                        Use This Meal\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n              </>\n            )}\n          </Grid>\n        )}\n\n        {/* Custom Meal Creator Dialog */}\n        {showCustomMealCreator && (\n          <CustomMealCreator\n            onMealCreated={handleCustomMealCreated}\n            onClose={() => setShowCustomMealCreator(false)}\n          />\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MealRecommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}