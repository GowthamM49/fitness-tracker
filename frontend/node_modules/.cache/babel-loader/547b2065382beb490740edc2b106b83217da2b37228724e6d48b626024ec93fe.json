{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Grid,LinearProgress,Chip,Alert,Box as MuiBox}from'@mui/material';import{LocalFireDepartment as CalorieIcon,Restaurant as ProteinIcon,Grain as CarbIcon,OilBarrel as FatIcon,TrendingUp as ProgressIcon,TrendingDown as DeficitIcon,Restaurant}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NutritionDashboard=_ref=>{let{dailyCalorieTarget=2000,dailyProteinTarget=150,dailyCarbTarget=250,dailyFatTarget=67}=_ref;const[todayMeals,setTodayMeals]=useState([]);const[todayNutrition,setTodayNutrition]=useState({calories:0,protein:0,carbs:0,fat:0});useEffect(()=>{loadTodayMeals();},[]);const loadTodayMeals=()=>{const savedMeals=JSON.parse(localStorage.getItem('meals')||'[]');const today=new Date().toISOString().split('T')[0];const todayMealsData=savedMeals.filter(meal=>meal.date===today);setTodayMeals(todayMealsData);// Calculate total nutrition for today\nconst totalNutrition=todayMealsData.reduce((acc,meal)=>({calories:acc.calories+meal.totalCalories,protein:acc.protein+meal.totalProtein,carbs:acc.carbs+meal.totalCarbs,fat:acc.fat+meal.totalFat}),{calories:0,protein:0,carbs:0,fat:0});setTodayNutrition(totalNutrition);};const getCalorieProgress=()=>{const percentage=todayNutrition.calories/dailyCalorieTarget*100;return Math.min(percentage,100);};const getMacroProgress=(current,target)=>{const percentage=current/target*100;return Math.min(percentage,100);};const getCalorieStatus=()=>{const difference=todayNutrition.calories-dailyCalorieTarget;if(difference>0){return{status:'Over Target',color:'error',icon:/*#__PURE__*/_jsx(DeficitIcon,{})};}else if(difference<-200){return{status:'Under Target',color:'warning',icon:/*#__PURE__*/_jsx(DeficitIcon,{})};}else{return{status:'On Target',color:'success',icon:/*#__PURE__*/_jsx(ProgressIcon,{})};}};const getMacroStatus=(current,target,macroName)=>{const percentage=current/target*100;if(percentage>=90&&percentage<=110){return{status:'Balanced',color:'success'};}else if(percentage<90){return{status:'Low',color:'warning'};}else{return{status:'High',color:'error'};}};const getRemainingCalories=()=>{return Math.max(0,dailyCalorieTarget-todayNutrition.calories);};const getMealTypeBreakdown=()=>{const breakdown={breakfast:0,lunch:0,dinner:0,snack:0};todayMeals.forEach(meal=>{breakdown[meal.mealType]+=meal.totalCalories;});return breakdown;};const mealBreakdown=getMealTypeBreakdown();const calorieStatus=getCalorieStatus();return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Today's Nutrition Overview\"}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,mb:2,children:[/*#__PURE__*/_jsx(CalorieIcon,{color:\"primary\",sx:{fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",color:\"primary\",children:todayNutrition.calories}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"text.secondary\",children:[\"/ \",dailyCalorieTarget,\" calories\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{ml:'auto'},children:/*#__PURE__*/_jsx(Chip,{label:calorieStatus.status,color:calorieStatus.color,icon:calorieStatus.icon,size:\"large\"})})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getCalorieProgress(),sx:{height:12,borderRadius:6,mb:2},color:calorieStatus.color==='success'?'success':'primary'}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Remaining: \",getRemainingCalories(),\" calories\"]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Progress: \",getCalorieProgress().toFixed(1),\"%\"]})})]})]})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(ProteinIcon,{color:\"success\",sx:{fontSize:40,mb:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"success\",children:[todayNutrition.protein,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Protein\"}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getMacroProgress(todayNutrition.protein,dailyProteinTarget),color:\"success\",sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsx(Chip,{label:getMacroStatus(todayNutrition.protein,dailyProteinTarget,'protein').status,color:getMacroStatus(todayNutrition.protein,dailyProteinTarget,'protein').color,size:\"small\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",sx:{mt:1},children:[\"Target: \",dailyProteinTarget,\"g\"]})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(CarbIcon,{color:\"info\",sx:{fontSize:40,mb:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"info\",children:[todayNutrition.carbs,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Carbohydrates\"}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getMacroProgress(todayNutrition.carbs,dailyCarbTarget),color:\"info\",sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsx(Chip,{label:getMacroStatus(todayNutrition.carbs,dailyCarbTarget,'carbs').status,color:getMacroStatus(todayNutrition.carbs,dailyCarbTarget,'carbs').color,size:\"small\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",sx:{mt:1},children:[\"Target: \",dailyCarbTarget,\"g\"]})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(FatIcon,{color:\"warning\",sx:{fontSize:40,mb:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"warning\",children:[todayNutrition.fat,\"g\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Fat\"}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:getMacroProgress(todayNutrition.fat,dailyFatTarget),color:\"warning\",sx:{height:8,borderRadius:4,mb:1}}),/*#__PURE__*/_jsx(Chip,{label:getMacroStatus(todayNutrition.fat,dailyFatTarget,'fat').status,color:getMacroStatus(todayNutrition.fat,dailyFatTarget,'fat').color,size:\"small\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",sx:{mt:1},children:[\"Target: \",dailyFatTarget,\"g\"]})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Restaurant,{color:\"secondary\",sx:{fontSize:40,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"secondary\",children:todayMeals.length}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Meals Today\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",sx:{mt:1},children:todayMeals.length===0?'No meals logged yet':'Keep it up!'})]})})})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Meal Distribution\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",children:mealBreakdown.breakfast}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Breakfast\"})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"success\",children:mealBreakdown.lunch}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Lunch\"})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"secondary\",children:mealBreakdown.dinner}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Dinner\"})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"warning\",children:mealBreakdown.snack}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Snacks\"})]})})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Nutrition Recommendations\"}),todayMeals.length===0?/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start your day right!\"}),\" Log your first meal to begin tracking your nutrition.\"]})}):/*#__PURE__*/_jsxs(Box,{children:[getRemainingCalories()>200&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"You have \",getRemainingCalories(),\" calories remaining.\"]}),\" Consider adding a healthy snack or adjusting your meal portions.\"]})}),todayNutrition.protein<dailyProteinTarget*0.8&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Protein intake is low.\"}),\" Consider adding lean protein sources like chicken, fish, eggs, or legumes.\"]})}),todayNutrition.carbs<dailyCarbTarget*0.8&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Carbohydrate intake is low.\"}),\" Add whole grains, fruits, or vegetables for energy.\"]})}),todayNutrition.fat>dailyFatTarget*1.2&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fat intake is high.\"}),\" Consider reducing high-fat foods and choosing leaner options.\"]})}),getCalorieProgress()>=100&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Great job!\"}),\" You've reached your daily calorie target. Remember to stay hydrated and get adequate rest.\"]})})]})]})})]});};export default NutritionDashboard;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Grid","LinearProgress","Chip","Alert","MuiBox","LocalFireDepartment","CalorieIcon","Restaurant","ProteinIcon","Grain","CarbIcon","OilBarrel","FatIcon","TrendingUp","ProgressIcon","TrendingDown","DeficitIcon","jsx","_jsx","jsxs","_jsxs","NutritionDashboard","_ref","dailyCalorieTarget","dailyProteinTarget","dailyCarbTarget","dailyFatTarget","todayMeals","setTodayMeals","todayNutrition","setTodayNutrition","calories","protein","carbs","fat","loadTodayMeals","savedMeals","JSON","parse","localStorage","getItem","today","Date","toISOString","split","todayMealsData","filter","meal","date","totalNutrition","reduce","acc","totalCalories","totalProtein","totalCarbs","totalFat","getCalorieProgress","percentage","Math","min","getMacroProgress","current","target","getCalorieStatus","difference","status","color","icon","getMacroStatus","macroName","getRemainingCalories","max","getMealTypeBreakdown","breakdown","breakfast","lunch","dinner","snack","forEach","mealType","mealBreakdown","calorieStatus","children","variant","gutterBottom","sx","mb","display","alignItems","gap","fontSize","ml","label","size","value","height","borderRadius","container","spacing","xs","sm","toFixed","md","textAlign","mt","length","severity"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/diet/NutritionDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  LinearProgress,\n  Chip,\n  Alert,\n  Box as MuiBox\n} from '@mui/material';\nimport {\n  LocalFireDepartment as CalorieIcon,\n  Restaurant as ProteinIcon,\n  Grain as CarbIcon,\n  OilBarrel as FatIcon,\n  TrendingUp as ProgressIcon,\n  TrendingDown as DeficitIcon,\n  Restaurant\n} from '@mui/icons-material';\n\nconst NutritionDashboard = ({ dailyCalorieTarget = 2000, dailyProteinTarget = 150, dailyCarbTarget = 250, dailyFatTarget = 67 }) => {\n  const [todayMeals, setTodayMeals] = useState([]);\n  const [todayNutrition, setTodayNutrition] = useState({\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fat: 0\n  });\n\n  useEffect(() => {\n    loadTodayMeals();\n  }, []);\n\n  const loadTodayMeals = () => {\n    const savedMeals = JSON.parse(localStorage.getItem('meals') || '[]');\n    const today = new Date().toISOString().split('T')[0];\n    const todayMealsData = savedMeals.filter(meal => meal.date === today);\n    \n    setTodayMeals(todayMealsData);\n    \n    // Calculate total nutrition for today\n    const totalNutrition = todayMealsData.reduce((acc, meal) => ({\n      calories: acc.calories + meal.totalCalories,\n      protein: acc.protein + meal.totalProtein,\n      carbs: acc.carbs + meal.totalCarbs,\n      fat: acc.fat + meal.totalFat\n    }), { calories: 0, protein: 0, carbs: 0, fat: 0 });\n    \n    setTodayNutrition(totalNutrition);\n  };\n\n  const getCalorieProgress = () => {\n    const percentage = (todayNutrition.calories / dailyCalorieTarget) * 100;\n    return Math.min(percentage, 100);\n  };\n\n  const getMacroProgress = (current, target) => {\n    const percentage = (current / target) * 100;\n    return Math.min(percentage, 100);\n  };\n\n  const getCalorieStatus = () => {\n    const difference = todayNutrition.calories - dailyCalorieTarget;\n    if (difference > 0) {\n      return { status: 'Over Target', color: 'error', icon: <DeficitIcon /> };\n    } else if (difference < -200) {\n      return { status: 'Under Target', color: 'warning', icon: <DeficitIcon /> };\n    } else {\n      return { status: 'On Target', color: 'success', icon: <ProgressIcon /> };\n    }\n  };\n\n  const getMacroStatus = (current, target, macroName) => {\n    const percentage = (current / target) * 100;\n    if (percentage >= 90 && percentage <= 110) {\n      return { status: 'Balanced', color: 'success' };\n    } else if (percentage < 90) {\n      return { status: 'Low', color: 'warning' };\n    } else {\n      return { status: 'High', color: 'error' };\n    }\n  };\n\n  const getRemainingCalories = () => {\n    return Math.max(0, dailyCalorieTarget - todayNutrition.calories);\n  };\n\n  const getMealTypeBreakdown = () => {\n    const breakdown = { breakfast: 0, lunch: 0, dinner: 0, snack: 0 };\n    todayMeals.forEach(meal => {\n      breakdown[meal.mealType] += meal.totalCalories;\n    });\n    return breakdown;\n  };\n\n  const mealBreakdown = getMealTypeBreakdown();\n  const calorieStatus = getCalorieStatus();\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Today's Nutrition Overview\n      </Typography>\n      \n      {/* Main Calorie Card */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n            <CalorieIcon color=\"primary\" sx={{ fontSize: 40 }} />\n            <Box>\n              <Typography variant=\"h3\" color=\"primary\">\n                {todayNutrition.calories}\n              </Typography>\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                / {dailyCalorieTarget} calories\n              </Typography>\n            </Box>\n            <Box sx={{ ml: 'auto' }}>\n              <Chip \n                label={calorieStatus.status} \n                color={calorieStatus.color}\n                icon={calorieStatus.icon}\n                size=\"large\"\n              />\n            </Box>\n          </Box>\n          \n          <LinearProgress \n            variant=\"determinate\" \n            value={getCalorieProgress()} \n            sx={{ height: 12, borderRadius: 6, mb: 2 }}\n            color={calorieStatus.color === 'success' ? 'success' : 'primary'}\n          />\n          \n          <Grid container spacing={2}>\n            <Grid size={{ xs: 12, sm: 6 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Remaining: {getRemainingCalories()} calories\n              </Typography>\n            </Grid>\n            <Grid size={{ xs: 12, sm: 6 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Progress: {getCalorieProgress().toFixed(1)}%\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      {/* Macronutrients Grid */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <ProteinIcon color=\"success\" sx={{ fontSize: 40, mb: 1 }} />\n              <Typography variant=\"h4\" color=\"success\">\n                {todayNutrition.protein}g\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                Protein\n              </Typography>\n              <LinearProgress \n                variant=\"determinate\" \n                value={getMacroProgress(todayNutrition.protein, dailyProteinTarget)} \n                color=\"success\"\n                sx={{ height: 8, borderRadius: 4, mb: 1 }}\n              />\n              <Chip \n                label={getMacroStatus(todayNutrition.protein, dailyProteinTarget, 'protein').status}\n                color={getMacroStatus(todayNutrition.protein, dailyProteinTarget, 'protein').color}\n                size=\"small\"\n              />\n              <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                Target: {dailyProteinTarget}g\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <CarbIcon color=\"info\" sx={{ fontSize: 40, mb: 1 }} />\n              <Typography variant=\"h4\" color=\"info\">\n                {todayNutrition.carbs}g\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                Carbohydrates\n              </Typography>\n              <LinearProgress \n                variant=\"determinate\" \n                value={getMacroProgress(todayNutrition.carbs, dailyCarbTarget)} \n                color=\"info\"\n                sx={{ height: 8, borderRadius: 4, mb: 1 }}\n              />\n              <Chip \n                label={getMacroStatus(todayNutrition.carbs, dailyCarbTarget, 'carbs').status}\n                color={getMacroStatus(todayNutrition.carbs, dailyCarbTarget, 'carbs').color}\n                size=\"small\"\n              />\n              <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                Target: {dailyCarbTarget}g\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <FatIcon color=\"warning\" sx={{ fontSize: 40, mb: 1 }} />\n              <Typography variant=\"h4\" color=\"warning\">\n                {todayNutrition.fat}g\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                Fat\n              </Typography>\n              <LinearProgress \n                variant=\"determinate\" \n                value={getMacroProgress(todayNutrition.fat, dailyFatTarget)} \n                color=\"warning\"\n                sx={{ height: 8, borderRadius: 4, mb: 1 }}\n              />\n              <Chip \n                label={getMacroStatus(todayNutrition.fat, dailyFatTarget, 'fat').status}\n                color={getMacroStatus(todayNutrition.fat, dailyFatTarget, 'fat').color}\n                size=\"small\"\n              />\n              <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                Target: {dailyFatTarget}g\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <Card>\n            <CardContent sx={{ textAlign: 'center' }}>\n              <Restaurant color=\"secondary\" sx={{ fontSize: 40, mb: 1 }} />\n              <Typography variant=\"h4\" color=\"secondary\">\n                {todayMeals.length}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                Meals Today\n              </Typography>\n              <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                {todayMeals.length === 0 ? 'No meals logged yet' : 'Keep it up!'}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Meal Type Breakdown */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Meal Distribution\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h6\" color=\"primary\">\n                  {mealBreakdown.breakfast}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Breakfast\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h6\" color=\"success\">\n                  {mealBreakdown.lunch}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Lunch\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h6\" color=\"secondary\">\n                  {mealBreakdown.dinner}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Dinner\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h6\" color=\"warning\">\n                  {mealBreakdown.snack}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Snacks\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      {/* Recommendations */}\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Nutrition Recommendations\n          </Typography>\n          \n          {todayMeals.length === 0 ? (\n            <Alert severity=\"info\">\n              <Typography variant=\"body2\">\n                <strong>Start your day right!</strong> Log your first meal to begin tracking your nutrition.\n              </Typography>\n            </Alert>\n          ) : (\n            <Box>\n              {getRemainingCalories() > 200 && (\n                <Alert severity=\"info\" sx={{ mb: 1 }}>\n                  <Typography variant=\"body2\">\n                    <strong>You have {getRemainingCalories()} calories remaining.</strong> Consider adding a healthy snack or adjusting your meal portions.\n                  </Typography>\n                </Alert>\n              )}\n              \n              {todayNutrition.protein < dailyProteinTarget * 0.8 && (\n                <Alert severity=\"warning\" sx={{ mb: 1 }}>\n                  <Typography variant=\"body2\">\n                    <strong>Protein intake is low.</strong> Consider adding lean protein sources like chicken, fish, eggs, or legumes.\n                  </Typography>\n                </Alert>\n              )}\n              \n              {todayNutrition.carbs < dailyCarbTarget * 0.8 && (\n                <Alert severity=\"warning\" sx={{ mb: 1 }}>\n                  <Typography variant=\"body2\">\n                    <strong>Carbohydrate intake is low.</strong> Add whole grains, fruits, or vegetables for energy.\n                  </Typography>\n                </Alert>\n              )}\n              \n              {todayNutrition.fat > dailyFatTarget * 1.2 && (\n                <Alert severity=\"warning\" sx={{ mb: 1 }}>\n                  <Typography variant=\"body2\">\n                    <strong>Fat intake is high.</strong> Consider reducing high-fat foods and choosing leaner options.\n                  </Typography>\n                </Alert>\n              )}\n              \n              {getCalorieProgress() >= 100 && (\n                <Alert severity=\"success\">\n                  <Typography variant=\"body2\">\n                    <strong>Great job!</strong> You've reached your daily calorie target. Remember to stay hydrated and get adequate rest.\n                  </Typography>\n                </Alert>\n              )}\n            </Box>\n          )}\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default NutritionDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}