{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth_tq3ir2j\\\\OneDrive\\\\Documents\\\\project 3rd year\\\\one credit\\\\Fitness Tracker\\\\frontend\\\\src\\\\components\\\\analytics\\\\EnhancedAnalyticsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Paper, Tabs, Tab, FormControl, InputLabel, Select, MenuItem, Chip, IconButton, Tooltip } from '@mui/material';\nimport { TrendingUp as TrendingUpIcon, FitnessCenter as WorkoutIcon, Restaurant as DietIcon, Scale as WeightIcon, Refresh as RefreshIcon, Download as DownloadIcon } from '@mui/icons-material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell, AreaChart, Area } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedAnalyticsDashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(0);\n  const [timeRange, setTimeRange] = useState('30');\n  const [chartData, setChartData] = useState({\n    weightProgress: [],\n    workoutStats: [],\n    nutritionData: [],\n    fitnessScore: []\n  });\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [timeRange]);\n  const loadAnalyticsData = () => {\n    // Load real data from localStorage\n    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n    const weightEntries = JSON.parse(localStorage.getItem('weightEntries') || '[]');\n    const workouts = JSON.parse(localStorage.getItem('workouts') || '[]');\n    const meals = JSON.parse(localStorage.getItem('meals') || '[]');\n\n    // Generate charts from real data\n    const realWeightData = generateRealWeightData(weightEntries);\n    const realWorkoutData = generateRealWorkoutData(workouts);\n    const realNutritionData = generateRealNutritionData(meals);\n    const realFitnessScore = generateRealFitnessScore(userData, weightEntries, workouts, meals);\n    setChartData({\n      weightProgress: realWeightData,\n      workoutStats: realWorkoutData,\n      nutritionData: realNutritionData,\n      fitnessScore: realFitnessScore\n    });\n  };\n\n  // Generate real weight data from stored entries\n  const generateRealWeightData = weightEntries => {\n    if (!weightEntries || weightEntries.length === 0) {\n      return generateWeightData(); // Fallback to mock data\n    }\n    const days = parseInt(timeRange);\n    const filteredEntries = weightEntries.filter(entry => {\n      const entryDate = new Date(entry.date);\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - days);\n      return entryDate >= cutoffDate;\n    }).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return filteredEntries.map(entry => {\n      var _localStorage$getItem;\n      const date = new Date(entry.date);\n      const height = parseFloat(((_localStorage$getItem = localStorage.getItem('fitnessTrackerData')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.height) || 175) / 100;\n      const bmi = entry.weight / (height * height);\n      return {\n        date: date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        }),\n        weight: entry.weight,\n        bmi: Math.round(bmi * 10) / 10\n      };\n    });\n  };\n  const generateWeightData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        }),\n        weight: 70 + Math.random() * 5 - 2.5,\n        bmi: 22 + Math.random() * 2 - 1\n      });\n    }\n    return data;\n  };\n\n  // Generate real workout data from stored workouts\n  const generateRealWorkoutData = workouts => {\n    if (!workouts || workouts.length === 0) {\n      return generateWorkoutData(); // Fallback to mock data\n    }\n    const workoutTypes = {};\n    workouts.forEach(workout => {\n      if (!workoutTypes[workout.type]) {\n        workoutTypes[workout.type] = {\n          name: workout.type,\n          duration: 0,\n          calories: 0,\n          frequency: 0\n        };\n      }\n      workoutTypes[workout.type].duration += workout.duration || 0;\n      workoutTypes[workout.type].calories += workout.caloriesBurned || 0;\n      workoutTypes[workout.type].frequency += 1;\n    });\n    return Object.values(workoutTypes).map(workout => ({\n      name: workout.name,\n      duration: Math.round(workout.duration / workout.frequency),\n      calories: Math.round(workout.calories / workout.frequency),\n      frequency: workout.frequency\n    }));\n  };\n  const generateWorkoutData = () => {\n    const workouts = ['Push-ups', 'Squats', 'Running', 'Weight Lifting', 'Yoga'];\n    return workouts.map(workout => ({\n      name: workout,\n      duration: Math.floor(Math.random() * 60) + 15,\n      calories: Math.floor(Math.random() * 200) + 50,\n      frequency: Math.floor(Math.random() * 7) + 1\n    }));\n  };\n\n  // Generate real nutrition data from stored meals\n  const generateRealNutritionData = meals => {\n    if (!meals || meals.length === 0) {\n      return generateNutritionData(); // Fallback to mock data\n    }\n    const days = parseInt(timeRange);\n    const recentMeals = meals.filter(meal => {\n      const mealDate = new Date(meal.date);\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - days);\n      return mealDate >= cutoffDate;\n    });\n    const totals = recentMeals.reduce((acc, meal) => ({\n      protein: acc.protein + (meal.totalProtein || 0),\n      carbs: acc.carbs + (meal.totalCarbs || 0),\n      fat: acc.fat + (meal.totalFat || 0),\n      calories: acc.calories + (meal.totalCalories || 0)\n    }), {\n      protein: 0,\n      carbs: 0,\n      fat: 0,\n      calories: 0\n    });\n    const avgDaily = {\n      protein: Math.round(totals.protein / Math.max(1, days)),\n      carbs: Math.round(totals.carbs / Math.max(1, days)),\n      fat: Math.round(totals.fat / Math.max(1, days)),\n      calories: Math.round(totals.calories / Math.max(1, days))\n    };\n    return [{\n      name: 'Protein',\n      value: avgDaily.protein,\n      color: '#8884d8'\n    }, {\n      name: 'Carbs',\n      value: avgDaily.carbs,\n      color: '#82ca9d'\n    }, {\n      name: 'Fat',\n      value: avgDaily.fat,\n      color: '#ffc658'\n    }, {\n      name: 'Calories',\n      value: Math.round(avgDaily.calories / 10),\n      color: '#ff7300'\n    }];\n  };\n  const generateNutritionData = () => {\n    const nutrients = ['Protein', 'Carbs', 'Fat', 'Fiber'];\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\n    return nutrients.map((nutrient, index) => ({\n      name: nutrient,\n      value: Math.floor(Math.random() * 100) + 20,\n      color: colors[index]\n    }));\n  };\n\n  // Generate real fitness score from user data\n  const generateRealFitnessScore = (userData, weightEntries, workouts, meals) => {\n    if (!userData || Object.keys(userData).length === 0) {\n      return generateFitnessScoreData(); // Fallback to mock data\n    }\n    const days = parseInt(timeRange);\n    const data = [];\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      const dateStr = date.toISOString().split('T')[0];\n\n      // Calculate daily metrics\n      const dayWorkouts = workouts.filter(w => w.date === dateStr);\n      const dayMeals = meals.filter(m => m.date === dateStr);\n      const dayWeight = weightEntries.find(w => w.date === dateStr);\n\n      // Calculate fitness score components\n      const workoutScore = Math.min(30, dayWorkouts.length * 10);\n      const nutritionScore = Math.min(30, dayMeals.length * 7.5);\n      const consistencyScore = dayWorkouts.length > 0 || dayMeals.length > 0 ? 20 : 0;\n      const totalScore = workoutScore + nutritionScore + consistencyScore;\n      data.push({\n        date: date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        }),\n        score: Math.max(40, totalScore),\n        workout: workoutScore,\n        nutrition: nutritionScore,\n        consistency: consistencyScore\n      });\n    }\n    return data;\n  };\n  const generateFitnessScoreData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        }),\n        score: Math.floor(Math.random() * 40) + 40,\n        workout: Math.floor(Math.random() * 30) + 20,\n        nutrition: Math.floor(Math.random() * 30) + 20,\n        consistency: Math.floor(Math.random() * 30) + 20\n      });\n    }\n    return data;\n  };\n  const renderWeightProgressChart = () => /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Weight & BMI Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData.weightProgress,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"right\",\n            orientation: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            yAxisId: \"left\",\n            type: \"monotone\",\n            dataKey: \"weight\",\n            stroke: \"#8884d8\",\n            strokeWidth: 2,\n            name: \"Weight (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            yAxisId: \"right\",\n            type: \"monotone\",\n            dataKey: \"bmi\",\n            stroke: \"#82ca9d\",\n            strokeWidth: 2,\n            name: \"BMI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n  const renderWorkoutAnalytics = () => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12,\n        md: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Workout Duration by Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: chartData.workoutStats,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"duration\",\n                fill: \"#8884d8\",\n                name: \"Duration (min)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"calories\",\n                fill: \"#82ca9d\",\n                name: \"Calories Burned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12,\n        md: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Workout Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: chartData.workoutStats,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  frequency\n                }) => `${name}: ${frequency}`,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"frequency\",\n                children: chartData.workoutStats.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: `hsl(${index * 60}, 70%, 50%)`\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n  const renderNutritionAnalytics = () => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12,\n        md: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Macronutrient Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: chartData.nutritionData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  value\n                }) => `${name}: ${value}g`,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                children: chartData.nutritionData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: entry.color\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      size: {\n        xs: 12,\n        md: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Daily Calorie Intake Trend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(AreaChart, {\n              data: chartData.weightProgress,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                type: \"monotone\",\n                dataKey: \"weight\",\n                stroke: \"#8884d8\",\n                fill: \"#8884d8\",\n                fillOpacity: 0.3,\n                name: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n  const renderFitnessScoreAnalytics = () => /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Comprehensive Fitness Score Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData.fitnessScore,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 100]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RechartsTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"score\",\n            stroke: \"#8884d8\",\n            strokeWidth: 3,\n            name: \"Overall Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"workout\",\n            stroke: \"#82ca9d\",\n            strokeWidth: 2,\n            name: \"Workout Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"nutrition\",\n            stroke: \"#ffc658\",\n            strokeWidth: 2,\n            name: \"Nutrition Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"consistency\",\n            stroke: \"#ff7300\",\n            strokeWidth: 2,\n            name: \"Consistency Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n  const renderSummaryCards = () => {\n    var _chartData$weightProg, _chartData$weightProg2;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          sm: 6,\n          md: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  children: \"Current Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [((_chartData$weightProg = chartData.weightProgress[chartData.weightProgress.length - 1]) === null || _chartData$weightProg === void 0 ? void 0 : (_chartData$weightProg2 = _chartData$weightProg.weight) === null || _chartData$weightProg2 === void 0 ? void 0 : _chartData$weightProg2.toFixed(1)) || '0.0', \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"success.main\",\n                  children: ((_chartData$weightProg3, _chartData$weightProg4) => {\n                    if (chartData.weightProgress.length < 2) return 'No trend data';\n                    const latest = (_chartData$weightProg3 = chartData.weightProgress[chartData.weightProgress.length - 1]) === null || _chartData$weightProg3 === void 0 ? void 0 : _chartData$weightProg3.weight;\n                    const earliest = (_chartData$weightProg4 = chartData.weightProgress[0]) === null || _chartData$weightProg4 === void 0 ? void 0 : _chartData$weightProg4.weight;\n                    const change = latest - earliest;\n                    return change > 0 ? `↑ ${change.toFixed(1)} kg this period` : `↓ ${Math.abs(change).toFixed(1)} kg this period`;\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(WeightIcon, {\n                color: \"primary\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          sm: 6,\n          md: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  children: \"Workouts This Week\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"success.main\",\n                  children: \"+3 from last week\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(WorkoutIcon, {\n                color: \"secondary\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          sm: 6,\n          md: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  children: \"Avg. Daily Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: \"2,150\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"warning.main\",\n                  children: \"+50 from target\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DietIcon, {\n                color: \"success\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          sm: 6,\n          md: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  children: \"Fitness Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: \"85%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"success.main\",\n                  children: \"+5% this week\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n                color: \"primary\",\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Enhanced Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          sx: {\n            minWidth: 120\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Time Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: timeRange,\n            onChange: e => setTimeRange(e.target.value),\n            label: \"Time Range\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"7\",\n              children: \"Last 7 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"30\",\n              children: \"Last 30 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"90\",\n              children: \"Last 90 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"365\",\n              children: \"Last year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh Data\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: loadAnalyticsData,\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Export Report\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this), renderSummaryCards(), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (e, newValue) => setActiveTab(newValue),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Weight Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Workout Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Nutrition Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Fitness Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), activeTab === 0 && renderWeightProgressChart(), activeTab === 1 && renderWorkoutAnalytics(), activeTab === 2 && renderNutritionAnalytics(), activeTab === 3 && renderFitnessScoreAnalytics()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedAnalyticsDashboard, \"G/R/+V8COWghxKzUkce6c1iQJbg=\");\n_c = EnhancedAnalyticsDashboard;\nexport default EnhancedAnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"EnhancedAnalyticsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Card","CardContent","Typography","Paper","Tabs","Tab","FormControl","InputLabel","Select","MenuItem","Chip","IconButton","Tooltip","TrendingUp","TrendingUpIcon","FitnessCenter","WorkoutIcon","Restaurant","DietIcon","Scale","WeightIcon","Refresh","RefreshIcon","Download","DownloadIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","RechartsTooltip","Legend","ResponsiveContainer","BarChart","Bar","PieChart","Pie","Cell","AreaChart","Area","jsxDEV","_jsxDEV","EnhancedAnalyticsDashboard","_s","activeTab","setActiveTab","timeRange","setTimeRange","chartData","setChartData","weightProgress","workoutStats","nutritionData","fitnessScore","loadAnalyticsData","userData","JSON","parse","localStorage","getItem","weightEntries","workouts","meals","realWeightData","generateRealWeightData","realWorkoutData","generateRealWorkoutData","realNutritionData","generateRealNutritionData","realFitnessScore","generateRealFitnessScore","length","generateWeightData","days","parseInt","filteredEntries","filter","entry","entryDate","Date","date","cutoffDate","setDate","getDate","sort","a","b","map","_localStorage$getItem","height","parseFloat","bmi","weight","toLocaleDateString","month","day","Math","round","data","startDate","i","push","random","generateWorkoutData","workoutTypes","forEach","workout","type","name","duration","calories","frequency","caloriesBurned","Object","values","floor","generateNutritionData","recentMeals","meal","mealDate","totals","reduce","acc","protein","totalProtein","carbs","totalCarbs","fat","totalFat","totalCalories","avgDaily","max","value","color","nutrients","colors","nutrient","index","keys","generateFitnessScoreData","dateStr","toISOString","split","dayWorkouts","w","dayMeals","m","dayWeight","find","workoutScore","min","nutritionScore","consistencyScore","totalScore","score","nutrition","consistency","renderWeightProgressChart","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","strokeDasharray","dataKey","yAxisId","orientation","stroke","strokeWidth","renderWorkoutAnalytics","container","spacing","size","xs","md","fill","cx","cy","labelLine","label","outerRadius","renderNutritionAnalytics","fillOpacity","renderFitnessScoreAnalytics","domain","renderSummaryCards","_chartData$weightProg","_chartData$weightProg2","sx","mb","sm","display","alignItems","justifyContent","toFixed","_chartData$weightProg3","_chartData$weightProg4","latest","earliest","change","abs","fontSize","p","gap","minWidth","onChange","e","target","title","onClick","newValue","_c","$RefreshReg$"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/analytics/EnhancedAnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  FitnessCenter as WorkoutIcon,\n  Restaurant as DietIcon,\n  Scale as WeightIcon,\n  Refresh as RefreshIcon,\n  Download as DownloadIcon\n} from '@mui/icons-material';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area\n} from 'recharts';\n\nconst EnhancedAnalyticsDashboard = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [timeRange, setTimeRange] = useState('30');\n  const [chartData, setChartData] = useState({\n    weightProgress: [],\n    workoutStats: [],\n    nutritionData: [],\n    fitnessScore: []\n  });\n\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [timeRange]);\n\n  const loadAnalyticsData = () => {\n    // Load real data from localStorage\n    const userData = JSON.parse(localStorage.getItem('fitnessTrackerData') || '{}');\n    const weightEntries = JSON.parse(localStorage.getItem('weightEntries') || '[]');\n    const workouts = JSON.parse(localStorage.getItem('workouts') || '[]');\n    const meals = JSON.parse(localStorage.getItem('meals') || '[]');\n\n    // Generate charts from real data\n    const realWeightData = generateRealWeightData(weightEntries);\n    const realWorkoutData = generateRealWorkoutData(workouts);\n    const realNutritionData = generateRealNutritionData(meals);\n    const realFitnessScore = generateRealFitnessScore(userData, weightEntries, workouts, meals);\n\n    setChartData({\n      weightProgress: realWeightData,\n      workoutStats: realWorkoutData,\n      nutritionData: realNutritionData,\n      fitnessScore: realFitnessScore\n    });\n  };\n\n  // Generate real weight data from stored entries\n  const generateRealWeightData = (weightEntries) => {\n    if (!weightEntries || weightEntries.length === 0) {\n      return generateWeightData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const filteredEntries = weightEntries\n      .filter(entry => {\n        const entryDate = new Date(entry.date);\n        const cutoffDate = new Date();\n        cutoffDate.setDate(cutoffDate.getDate() - days);\n        return entryDate >= cutoffDate;\n      })\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    return filteredEntries.map(entry => {\n      const date = new Date(entry.date);\n      const height = parseFloat(localStorage.getItem('fitnessTrackerData')?.height || 175) / 100;\n      const bmi = entry.weight / (height * height);\n      \n      return {\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        weight: entry.weight,\n        bmi: Math.round(bmi * 10) / 10\n      };\n    });\n  };\n\n  const generateWeightData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        weight: 70 + Math.random() * 5 - 2.5,\n        bmi: 22 + Math.random() * 2 - 1\n      });\n    }\n    return data;\n  };\n\n  // Generate real workout data from stored workouts\n  const generateRealWorkoutData = (workouts) => {\n    if (!workouts || workouts.length === 0) {\n      return generateWorkoutData(); // Fallback to mock data\n    }\n\n    const workoutTypes = {};\n    workouts.forEach(workout => {\n      if (!workoutTypes[workout.type]) {\n        workoutTypes[workout.type] = {\n          name: workout.type,\n          duration: 0,\n          calories: 0,\n          frequency: 0\n        };\n      }\n      workoutTypes[workout.type].duration += workout.duration || 0;\n      workoutTypes[workout.type].calories += workout.caloriesBurned || 0;\n      workoutTypes[workout.type].frequency += 1;\n    });\n\n    return Object.values(workoutTypes).map(workout => ({\n      name: workout.name,\n      duration: Math.round(workout.duration / workout.frequency),\n      calories: Math.round(workout.calories / workout.frequency),\n      frequency: workout.frequency\n    }));\n  };\n\n  const generateWorkoutData = () => {\n    const workouts = ['Push-ups', 'Squats', 'Running', 'Weight Lifting', 'Yoga'];\n    return workouts.map(workout => ({\n      name: workout,\n      duration: Math.floor(Math.random() * 60) + 15,\n      calories: Math.floor(Math.random() * 200) + 50,\n      frequency: Math.floor(Math.random() * 7) + 1\n    }));\n  };\n\n  // Generate real nutrition data from stored meals\n  const generateRealNutritionData = (meals) => {\n    if (!meals || meals.length === 0) {\n      return generateNutritionData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const recentMeals = meals.filter(meal => {\n      const mealDate = new Date(meal.date);\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - days);\n      return mealDate >= cutoffDate;\n    });\n\n    const totals = recentMeals.reduce((acc, meal) => ({\n      protein: acc.protein + (meal.totalProtein || 0),\n      carbs: acc.carbs + (meal.totalCarbs || 0),\n      fat: acc.fat + (meal.totalFat || 0),\n      calories: acc.calories + (meal.totalCalories || 0)\n    }), { protein: 0, carbs: 0, fat: 0, calories: 0 });\n\n    const avgDaily = {\n      protein: Math.round(totals.protein / Math.max(1, days)),\n      carbs: Math.round(totals.carbs / Math.max(1, days)),\n      fat: Math.round(totals.fat / Math.max(1, days)),\n      calories: Math.round(totals.calories / Math.max(1, days))\n    };\n\n    return [\n      { name: 'Protein', value: avgDaily.protein, color: '#8884d8' },\n      { name: 'Carbs', value: avgDaily.carbs, color: '#82ca9d' },\n      { name: 'Fat', value: avgDaily.fat, color: '#ffc658' },\n      { name: 'Calories', value: Math.round(avgDaily.calories / 10), color: '#ff7300' }\n    ];\n  };\n\n  const generateNutritionData = () => {\n    const nutrients = ['Protein', 'Carbs', 'Fat', 'Fiber'];\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300'];\n    return nutrients.map((nutrient, index) => ({\n      name: nutrient,\n      value: Math.floor(Math.random() * 100) + 20,\n      color: colors[index]\n    }));\n  };\n\n  // Generate real fitness score from user data\n  const generateRealFitnessScore = (userData, weightEntries, workouts, meals) => {\n    if (!userData || Object.keys(userData).length === 0) {\n      return generateFitnessScoreData(); // Fallback to mock data\n    }\n\n    const days = parseInt(timeRange);\n    const data = [];\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      const dateStr = date.toISOString().split('T')[0];\n\n      // Calculate daily metrics\n      const dayWorkouts = workouts.filter(w => w.date === dateStr);\n      const dayMeals = meals.filter(m => m.date === dateStr);\n      const dayWeight = weightEntries.find(w => w.date === dateStr);\n\n      // Calculate fitness score components\n      const workoutScore = Math.min(30, dayWorkouts.length * 10);\n      const nutritionScore = Math.min(30, dayMeals.length * 7.5);\n      const consistencyScore = (dayWorkouts.length > 0 || dayMeals.length > 0) ? 20 : 0;\n      const totalScore = workoutScore + nutritionScore + consistencyScore;\n\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        score: Math.max(40, totalScore),\n        workout: workoutScore,\n        nutrition: nutritionScore,\n        consistency: consistencyScore\n      });\n    }\n    return data;\n  };\n\n  const generateFitnessScoreData = () => {\n    const data = [];\n    const days = parseInt(timeRange);\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      data.push({\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        score: Math.floor(Math.random() * 40) + 40,\n        workout: Math.floor(Math.random() * 30) + 20,\n        nutrition: Math.floor(Math.random() * 30) + 20,\n        consistency: Math.floor(Math.random() * 30) + 20\n      });\n    }\n    return data;\n  };\n\n  const renderWeightProgressChart = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Weight & BMI Progress\n        </Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartData.weightProgress}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis yAxisId=\"left\" />\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\n            <RechartsTooltip />\n            <Legend />\n            <Line\n              yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"weight\"\n              stroke=\"#8884d8\"\n              strokeWidth={2}\n              name=\"Weight (kg)\"\n            />\n            <Line\n              yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"bmi\"\n              stroke=\"#82ca9d\"\n              strokeWidth={2}\n              name=\"BMI\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n\n  const renderWorkoutAnalytics = () => (\n    <Grid container spacing={3}>\n      <Grid size={{ xs: 12, md: 8 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Workout Duration by Exercise\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={chartData.workoutStats}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Legend />\n                <Bar dataKey=\"duration\" fill=\"#8884d8\" name=\"Duration (min)\" />\n                <Bar dataKey=\"calories\" fill=\"#82ca9d\" name=\"Calories Burned\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid size={{ xs: 12, md: 4 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Workout Frequency\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={chartData.workoutStats}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, frequency }) => `${name}: ${frequency}`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"frequency\"\n                >\n                  {chartData.workoutStats.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={`hsl(${index * 60}, 70%, 50%)`} />\n                  ))}\n                </Pie>\n                <RechartsTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  const renderNutritionAnalytics = () => (\n    <Grid container spacing={3}>\n      <Grid size={{ xs: 12, md: 6 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Macronutrient Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={chartData.nutritionData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, value }) => `${name}: ${value}g`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {chartData.nutritionData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <RechartsTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid size={{ xs: 12, md: 6 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Daily Calorie Intake Trend\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={chartData.weightProgress}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"weight\"\n                  stroke=\"#8884d8\"\n                  fill=\"#8884d8\"\n                  fillOpacity={0.3}\n                  name=\"Calories\"\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  const renderFitnessScoreAnalytics = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Comprehensive Fitness Score Breakdown\n        </Typography>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={chartData.fitnessScore}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis domain={[0, 100]} />\n            <RechartsTooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"score\"\n              stroke=\"#8884d8\"\n              strokeWidth={3}\n              name=\"Overall Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"workout\"\n              stroke=\"#82ca9d\"\n              strokeWidth={2}\n              name=\"Workout Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"nutrition\"\n              stroke=\"#ffc658\"\n              strokeWidth={2}\n              name=\"Nutrition Score\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"consistency\"\n              stroke=\"#ff7300\"\n              strokeWidth={2}\n              name=\"Consistency Score\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n\n  const renderSummaryCards = () => (\n    <Grid container spacing={3} sx={{ mb: 3 }}>\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Current Weight\n                </Typography>\n                <Typography variant=\"h4\">\n                  {chartData.weightProgress[chartData.weightProgress.length - 1]?.weight?.toFixed(1) || '0.0'} kg\n                </Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  {(() => {\n                    if (chartData.weightProgress.length < 2) return 'No trend data';\n                    const latest = chartData.weightProgress[chartData.weightProgress.length - 1]?.weight;\n                    const earliest = chartData.weightProgress[0]?.weight;\n                    const change = latest - earliest;\n                    return change > 0 ? `↑ ${change.toFixed(1)} kg this period` : `↓ ${Math.abs(change).toFixed(1)} kg this period`;\n                  })()}\n                </Typography>\n              </Box>\n              <WeightIcon color=\"primary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Workouts This Week\n                </Typography>\n                <Typography variant=\"h4\">12</Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  +3 from last week\n                </Typography>\n              </Box>\n              <WorkoutIcon color=\"secondary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Avg. Daily Calories\n                </Typography>\n                <Typography variant=\"h4\">2,150</Typography>\n                <Typography variant=\"body2\" color=\"warning.main\">\n                  +50 from target\n                </Typography>\n              </Box>\n              <DietIcon color=\"success\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n        <Card>\n          <CardContent>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                  Fitness Score\n                </Typography>\n                <Typography variant=\"h4\">85%</Typography>\n                <Typography variant=\"body2\" color=\"success.main\">\n                  +5% this week\n                </Typography>\n              </Box>\n              <TrendingUpIcon color=\"primary\" sx={{ fontSize: 40 }} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">\n          Enhanced Analytics Dashboard\n        </Typography>\n        <Box display=\"flex\" gap={2} alignItems=\"center\">\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel>Time Range</InputLabel>\n            <Select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              label=\"Time Range\"\n            >\n              <MenuItem value=\"7\">Last 7 days</MenuItem>\n              <MenuItem value=\"30\">Last 30 days</MenuItem>\n              <MenuItem value=\"90\">Last 90 days</MenuItem>\n              <MenuItem value=\"365\">Last year</MenuItem>\n            </Select>\n          </FormControl>\n          <Tooltip title=\"Refresh Data\">\n            <IconButton onClick={loadAnalyticsData}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Export Report\">\n            <IconButton>\n              <DownloadIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {renderSummaryCards()}\n\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n          <Tab label=\"Weight Progress\" />\n          <Tab label=\"Workout Analytics\" />\n          <Tab label=\"Nutrition Analytics\" />\n          <Tab label=\"Fitness Score\" />\n        </Tabs>\n      </Paper>\n\n      {activeTab === 0 && renderWeightProgressChart()}\n      {activeTab === 1 && renderWorkoutAnalytics()}\n      {activeTab === 2 && renderNutritionAnalytics()}\n      {activeTab === 3 && renderFitnessScoreAnalytics()}\n    </Box>\n  );\n};\n\nexport default EnhancedAnalyticsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}