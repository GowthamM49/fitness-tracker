{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth_tq3ir2j\\\\OneDrive\\\\Documents\\\\project 3rd year\\\\one credit\\\\Fitness Tracker\\\\src\\\\components\\\\diet\\\\MealLogger.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, Button, Grid, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, Chip, FormControl, InputLabel, Select, MenuItem, Divider, Alert, Autocomplete } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Save as SaveIcon, Restaurant as FoodIcon, LocalFireDepartment as CalorieIcon } from '@mui/icons-material';\nimport { dietService } from '../../services/dietService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealLogger = ({\n  onMealSaved,\n  dailyCalorieTarget = 2000,\n  recommendedMeal = null\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n  const [showFoodForm, setShowFoodForm] = useState(false);\n\n  // Handle recommended meal when component receives one\n  useEffect(() => {\n    if (recommendedMeal) {\n      setMealData(prev => ({\n        ...prev,\n        name: recommendedMeal.name,\n        mealType: recommendedMeal.mealType.toLowerCase()\n      }));\n\n      // Convert recommended meal food items to the format expected by the form\n      const recommendedFoodItems = recommendedMeal.foodItems.map((food, index) => ({\n        id: Date.now() + index,\n        name: food.name,\n        quantity: food.quantity,\n        unit: food.unit,\n        calories: food.calories,\n        protein: food.protein,\n        carbs: food.carbs,\n        fat: food.fat\n      }));\n      setFoodItems(recommendedFoodItems);\n    }\n  }, [recommendedMeal]);\n  const mealTypes = [{\n    value: 'breakfast',\n    label: 'Breakfast'\n  }, {\n    value: 'lunch',\n    label: 'Lunch'\n  }, {\n    value: 'dinner',\n    label: 'Dinner'\n  }, {\n    value: 'snack',\n    label: 'Snack'\n  }];\n  const commonFoods = [{\n    name: 'Chicken Breast',\n    calories: 165,\n    protein: 31,\n    carbs: 0,\n    fat: 3.6,\n    per: 100\n  }, {\n    name: 'Brown Rice',\n    calories: 111,\n    protein: 2.6,\n    carbs: 23,\n    fat: 0.9,\n    per: 100\n  }, {\n    name: 'Broccoli',\n    calories: 34,\n    protein: 2.8,\n    carbs: 7,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Salmon',\n    calories: 208,\n    protein: 25,\n    carbs: 0,\n    fat: 12,\n    per: 100\n  }, {\n    name: 'Sweet Potato',\n    calories: 86,\n    protein: 1.6,\n    carbs: 20,\n    fat: 0.1,\n    per: 100\n  }, {\n    name: 'Eggs',\n    calories: 155,\n    protein: 13,\n    carbs: 1.1,\n    fat: 11,\n    per: 100\n  }, {\n    name: 'Oatmeal',\n    calories: 68,\n    protein: 2.4,\n    carbs: 12,\n    fat: 1.4,\n    per: 100\n  }, {\n    name: 'Banana',\n    calories: 89,\n    protein: 1.1,\n    carbs: 23,\n    fat: 0.3,\n    per: 100\n  }, {\n    name: 'Greek Yogurt',\n    calories: 59,\n    protein: 10,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Almonds',\n    calories: 579,\n    protein: 21,\n    carbs: 22,\n    fat: 50,\n    per: 100\n  }, {\n    name: 'Spinach',\n    calories: 23,\n    protein: 2.9,\n    carbs: 3.6,\n    fat: 0.4,\n    per: 100\n  }, {\n    name: 'Quinoa',\n    calories: 120,\n    protein: 4.4,\n    carbs: 22,\n    fat: 1.9,\n    per: 100\n  }];\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n  const handleMealChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFoodSelect = food => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n  const removeFoodItem = foodId => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const saveMeal = async () => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n    setIsSaving(true);\n    setError('');\n    setSuccess('');\n    try {\n      const meal = {\n        name: mealData.name,\n        mealType: mealData.mealType.charAt(0).toUpperCase() + mealData.mealType.slice(1),\n        // Capitalize first letter\n        date: mealData.date,\n        foodItems: foodItems.map(food => ({\n          name: food.name,\n          quantity: parseFloat(food.quantity),\n          unit: food.unit,\n          calories: parseFloat(food.calories),\n          protein: parseFloat(food.protein),\n          carbs: parseFloat(food.carbs),\n          fat: parseFloat(food.fat)\n        })),\n        notes: mealData.notes\n      };\n      const savedMeal = await dietService.create(meal);\n\n      // Show success message\n      setSuccess('Meal saved successfully to MongoDB!');\n\n      // Reset form\n      setMealData({\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        mealType: 'breakfast',\n        notes: ''\n      });\n      setFoodItems([]);\n\n      // Notify parent component\n      if (onMealSaved) {\n        onMealSaved(savedMeal);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error saving meal:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        setError('Please log in to save meals.');\n        navigate('/login');\n      } else {\n        setError('Failed to save meal. Please try again.');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n    return {\n      totalCalories,\n      totalProtein,\n      totalCarbs,\n      totalFat\n    };\n  };\n  const getMealTypeColor = mealType => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n  const nutrition = getTotalNutrition();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [!isAuthenticated && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Please \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 22\n          }, this), \" to save your meals to the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          sx: {\n            mt: 1\n          },\n          onClick: () => navigate('/login'),\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Log New Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 12,\n            sm: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Meal Name\",\n            name: \"name\",\n            value: mealData.name,\n            onChange: handleMealChange,\n            placeholder: \"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 12,\n            sm: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Date\",\n            name: \"date\",\n            type: \"date\",\n            value: mealData.date,\n            onChange: handleMealChange,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          size: {\n            xs: 12,\n            sm: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"mealType\",\n              value: mealData.mealType,\n              onChange: handleMealChange,\n              label: \"Meal Type\",\n              children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          size: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Notes\",\n            name: \"notes\",\n            value: mealData.notes,\n            onChange: handleMealChange,\n            multiline: true,\n            rows: 2,\n            placeholder: \"How did it taste? Any special notes?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Food Items (\", foodItems.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowFoodForm(true),\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), showFoodForm && /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Add Food Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: commonFoods,\n              getOptionLabel: option => option.name,\n              onChange: (event, value) => handleFoodSelect(value),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Food Name\",\n                name: \"name\",\n                value: currentFood.name,\n                onChange: handleFoodChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              value: currentFood.quantity,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"unit\",\n                value: currentFood.unit,\n                onChange: handleFoodChange,\n                label: \"Unit\",\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Calories (per 100g)\",\n              name: \"calories\",\n              type: \"number\",\n              value: currentFood.calories,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Protein (g per 100g)\",\n              name: \"protein\",\n              type: \"number\",\n              value: currentFood.protein,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Carbs (g per 100g)\",\n              name: \"carbs\",\n              type: \"number\",\n              value: currentFood.carbs,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            size: {\n              xs: 12,\n              sm: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Fat (g per 100g)\",\n              name: \"fat\",\n              type: \"number\",\n              value: currentFood.fat,\n              onChange: handleFoodChange,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: addFoodItem,\n            disabled: !currentFood.name || !currentFood.quantity || !currentFood.calories,\n            children: \"Add Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setShowFoodForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n        children: foodItems.map(food => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              children: [/*#__PURE__*/_jsxDEV(FoodIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: food.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${food.quantity}${food.unit}`,\n                  size: \"small\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${food.calories} cal`,\n                  size: \"small\",\n                  color: \"warning\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `P: ${food.protein}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `C: ${food.carbs}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"info\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `F: ${food.fat}g`,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => removeFoodItem(food.id),\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this)]\n        }, food.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this), foodItems.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [success && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Meal Summary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), \" \", foodItems.length, \" food items,\", nutrition.totalCalories, \" calories,\", nutrition.totalProtein, \"g protein,\", nutrition.totalCarbs, \"g carbs,\", nutrition.totalFat, \"g fat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            gap: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 28\n            }, this),\n            onClick: saveMeal,\n            disabled: !mealData.name || isSaving,\n            size: \"large\",\n            children: isSaving ? 'Saving...' : 'Save Meal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(MealLogger, \"qzNlg/Tl5cCM1FaGP+QP5CPAVzQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = MealLogger;\nexport default MealLogger;\nvar _c;\n$RefreshReg$(_c, \"MealLogger\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","TextField","Button","Grid","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","Chip","FormControl","InputLabel","Select","MenuItem","Divider","Alert","Autocomplete","Add","AddIcon","Delete","DeleteIcon","Save","SaveIcon","Restaurant","FoodIcon","LocalFireDepartment","CalorieIcon","dietService","useAuth","useNavigate","jsxDEV","_jsxDEV","MealLogger","onMealSaved","dailyCalorieTarget","recommendedMeal","_s","isAuthenticated","navigate","mealData","setMealData","name","date","Date","toISOString","split","mealType","notes","foodItems","setFoodItems","currentFood","setCurrentFood","quantity","unit","calories","protein","carbs","fat","showFoodForm","setShowFoodForm","prev","toLowerCase","recommendedFoodItems","map","food","index","id","now","mealTypes","value","label","commonFoods","per","units","handleMealChange","e","target","handleFoodChange","handleFoodSelect","toString","addFoodItem","parseFloat","multiplier","newFoodItem","Math","round","removeFoodItem","foodId","filter","isSaving","setIsSaving","error","setError","success","setSuccess","saveMeal","length","meal","charAt","toUpperCase","slice","savedMeal","create","_error$response","console","response","status","getTotalNutrition","totalCalories","reduce","sum","totalProtein","totalCarbs","totalFat","getMealTypeColor","colors","nutrition","children","severity","sx","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","mt","onClick","gutterBottom","container","spacing","xs","sm","fullWidth","onChange","placeholder","type","InputLabelProps","shrink","multiline","rows","my","display","justifyContent","alignItems","startIcon","p","options","getOptionLabel","option","event","renderInput","params","inputProps","min","step","gap","disabled","divider","primary","color","secondary","component","mr","edge","_c","$RefreshReg$"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/src/components/diet/MealLogger.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider,\n  Alert,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Save as SaveIcon,\n  Restaurant as FoodIcon,\n  LocalFireDepartment as CalorieIcon\n} from '@mui/icons-material';\nimport { dietService } from '../../services/dietService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst MealLogger = ({ onMealSaved, dailyCalorieTarget = 2000, recommendedMeal = null }) => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const [mealData, setMealData] = useState({\n    name: '',\n    date: new Date().toISOString().split('T')[0],\n    mealType: 'breakfast',\n    notes: ''\n  });\n\n  const [foodItems, setFoodItems] = useState([]);\n  const [currentFood, setCurrentFood] = useState({\n    name: '',\n    quantity: '',\n    unit: 'g',\n    calories: '',\n    protein: '',\n    carbs: '',\n    fat: ''\n  });\n\n  const [showFoodForm, setShowFoodForm] = useState(false);\n\n  // Handle recommended meal when component receives one\n  useEffect(() => {\n    if (recommendedMeal) {\n      setMealData(prev => ({\n        ...prev,\n        name: recommendedMeal.name,\n        mealType: recommendedMeal.mealType.toLowerCase()\n      }));\n      \n      // Convert recommended meal food items to the format expected by the form\n      const recommendedFoodItems = recommendedMeal.foodItems.map((food, index) => ({\n        id: Date.now() + index,\n        name: food.name,\n        quantity: food.quantity,\n        unit: food.unit,\n        calories: food.calories,\n        protein: food.protein,\n        carbs: food.carbs,\n        fat: food.fat\n      }));\n      \n      setFoodItems(recommendedFoodItems);\n    }\n  }, [recommendedMeal]);\n\n  const mealTypes = [\n    { value: 'breakfast', label: 'Breakfast' },\n    { value: 'lunch', label: 'Lunch' },\n    { value: 'dinner', label: 'Dinner' },\n    { value: 'snack', label: 'Snack' }\n  ];\n\n  const commonFoods = [\n    { name: 'Chicken Breast', calories: 165, protein: 31, carbs: 0, fat: 3.6, per: 100 },\n    { name: 'Brown Rice', calories: 111, protein: 2.6, carbs: 23, fat: 0.9, per: 100 },\n    { name: 'Broccoli', calories: 34, protein: 2.8, carbs: 7, fat: 0.4, per: 100 },\n    { name: 'Salmon', calories: 208, protein: 25, carbs: 0, fat: 12, per: 100 },\n    { name: 'Sweet Potato', calories: 86, protein: 1.6, carbs: 20, fat: 0.1, per: 100 },\n    { name: 'Eggs', calories: 155, protein: 13, carbs: 1.1, fat: 11, per: 100 },\n    { name: 'Oatmeal', calories: 68, protein: 2.4, carbs: 12, fat: 1.4, per: 100 },\n    { name: 'Banana', calories: 89, protein: 1.1, carbs: 23, fat: 0.3, per: 100 },\n    { name: 'Greek Yogurt', calories: 59, protein: 10, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Almonds', calories: 579, protein: 21, carbs: 22, fat: 50, per: 100 },\n    { name: 'Spinach', calories: 23, protein: 2.9, carbs: 3.6, fat: 0.4, per: 100 },\n    { name: 'Quinoa', calories: 120, protein: 4.4, carbs: 22, fat: 1.9, per: 100 }\n  ];\n\n  const units = ['g', 'ml', 'cup', 'tbsp', 'tsp', 'piece', 'slice'];\n\n  const handleMealChange = (e) => {\n    const { name, value } = e.target;\n    setMealData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentFood(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleFoodSelect = (food) => {\n    if (food) {\n      setCurrentFood(prev => ({\n        ...prev,\n        name: food.name,\n        calories: food.calories.toString(),\n        protein: food.protein.toString(),\n        carbs: food.carbs.toString(),\n        fat: food.fat.toString()\n      }));\n    }\n  };\n\n  const addFoodItem = () => {\n    if (!currentFood.name || !currentFood.quantity || !currentFood.calories) {\n      return;\n    }\n\n    const quantity = parseFloat(currentFood.quantity);\n    const multiplier = quantity / 100; // Assuming nutrition values are per 100g\n\n    const newFoodItem = {\n      ...currentFood,\n      id: Date.now(),\n      quantity: quantity,\n      calories: Math.round(parseFloat(currentFood.calories) * multiplier),\n      protein: Math.round(parseFloat(currentFood.protein) * multiplier * 10) / 10,\n      carbs: Math.round(parseFloat(currentFood.carbs) * multiplier * 10) / 10,\n      fat: Math.round(parseFloat(currentFood.fat) * multiplier * 10) / 10\n    };\n\n    setFoodItems(prev => [...prev, newFoodItem]);\n    setCurrentFood({\n      name: '',\n      quantity: '',\n      unit: 'g',\n      calories: '',\n      protein: '',\n      carbs: '',\n      fat: ''\n    });\n    setShowFoodForm(false);\n  };\n\n  const removeFoodItem = (foodId) => {\n    setFoodItems(prev => prev.filter(food => food.id !== foodId));\n  };\n\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const saveMeal = async () => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    if (!mealData.name || foodItems.length === 0) {\n      return;\n    }\n\n    setIsSaving(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const meal = {\n        name: mealData.name,\n        mealType: mealData.mealType.charAt(0).toUpperCase() + mealData.mealType.slice(1), // Capitalize first letter\n        date: mealData.date,\n        foodItems: foodItems.map(food => ({\n          name: food.name,\n          quantity: parseFloat(food.quantity),\n          unit: food.unit,\n          calories: parseFloat(food.calories),\n          protein: parseFloat(food.protein),\n          carbs: parseFloat(food.carbs),\n          fat: parseFloat(food.fat)\n        })),\n        notes: mealData.notes\n      };\n\n      const savedMeal = await dietService.create(meal);\n\n      // Show success message\n      setSuccess('Meal saved successfully to MongoDB!');\n\n      // Reset form\n      setMealData({\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        mealType: 'breakfast',\n        notes: ''\n      });\n      setFoodItems([]);\n\n      // Notify parent component\n      if (onMealSaved) {\n        onMealSaved(savedMeal);\n      }\n    } catch (error) {\n      console.error('Error saving meal:', error);\n      if (error.response?.status === 401) {\n        setError('Please log in to save meals.');\n        navigate('/login');\n      } else {\n        setError('Failed to save meal. Please try again.');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getTotalNutrition = () => {\n    const totalCalories = foodItems.reduce((sum, food) => sum + food.calories, 0);\n    const totalProtein = foodItems.reduce((sum, food) => sum + food.protein, 0);\n    const totalCarbs = foodItems.reduce((sum, food) => sum + food.carbs, 0);\n    const totalFat = foodItems.reduce((sum, food) => sum + food.fat, 0);\n\n    return { totalCalories, totalProtein, totalCarbs, totalFat };\n  };\n\n  const getMealTypeColor = (mealType) => {\n    const colors = {\n      'breakfast': 'primary',\n      'lunch': 'success',\n      'dinner': 'secondary',\n      'snack': 'warning'\n    };\n    return colors[mealType] || 'default';\n  };\n\n  const nutrition = getTotalNutrition();\n\n  return (\n    <Card>\n      <CardContent>\n        {!isAuthenticated && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            <Typography variant=\"body2\">\n              Please <strong>log in</strong> to save your meals to the database.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              size=\"small\" \n              sx={{ mt: 1 }}\n              onClick={() => navigate('/login')}\n            >\n              Go to Login\n            </Button>\n          </Alert>\n        )}\n        \n        <Typography variant=\"h6\" gutterBottom>\n          Log New Meal\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid size={{ xs: 12, sm: 6 }}>\n            <TextField\n              fullWidth\n              label=\"Meal Name\"\n              name=\"name\"\n              value={mealData.name}\n              onChange={handleMealChange}\n              placeholder=\"e.g., Protein Bowl, Healthy Salad, Quick Snack\"\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 6 }}>\n            <TextField\n              fullWidth\n              label=\"Date\"\n              name=\"date\"\n              type=\"date\"\n              value={mealData.date}\n              onChange={handleMealChange}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 6 }}>\n            <FormControl fullWidth>\n              <InputLabel>Meal Type</InputLabel>\n              <Select\n                name=\"mealType\"\n                value={mealData.mealType}\n                onChange={handleMealChange}\n                label=\"Meal Type\"\n              >\n                {mealTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid size={12}>\n            <TextField\n              fullWidth\n              label=\"Notes\"\n              name=\"notes\"\n              value={mealData.notes}\n              onChange={handleMealChange}\n              multiline\n              rows={2}\n              placeholder=\"How did it taste? Any special notes?\"\n            />\n          </Grid>\n        </Grid>\n\n        <Divider sx={{ my: 3 }} />\n\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\">\n            Food Items ({foodItems.length})\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={() => setShowFoodForm(true)}\n          >\n            Add Food\n          </Button>\n        </Box>\n\n        {showFoodForm && (\n          <Card variant=\"outlined\" sx={{ mb: 2, p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Add Food Item\n            </Typography>\n            \n            <Grid container spacing={2}>\n              <Grid size={{ xs: 12, sm: 6 }}>\n                <Autocomplete\n                  options={commonFoods}\n                  getOptionLabel={(option) => option.name}\n                  onChange={(event, value) => handleFoodSelect(value)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Food Name\"\n                      name=\"name\"\n                      value={currentFood.name}\n                      onChange={handleFoodChange}\n                    />\n                  )}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Quantity\"\n                  name=\"quantity\"\n                  type=\"number\"\n                  value={currentFood.quantity}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <FormControl fullWidth>\n                  <InputLabel>Unit</InputLabel>\n                  <Select\n                    name=\"unit\"\n                    value={currentFood.unit}\n                    onChange={handleFoodChange}\n                    label=\"Unit\"\n                  >\n                    {units.map((unit) => (\n                      <MenuItem key={unit} value={unit}>\n                        {unit}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Calories (per 100g)\"\n                  name=\"calories\"\n                  type=\"number\"\n                  value={currentFood.calories}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Protein (g per 100g)\"\n                  name=\"protein\"\n                  type=\"number\"\n                  value={currentFood.protein}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Carbs (g per 100g)\"\n                  name=\"carbs\"\n                  type=\"number\"\n                  value={currentFood.carbs}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n              \n              <Grid size={{ xs: 12, sm: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Fat (g per 100g)\"\n                  name=\"fat\"\n                  type=\"number\"\n                  value={currentFood.fat}\n                  onChange={handleFoodChange}\n                  inputProps={{ min: 0, step: 0.1 }}\n                />\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                onClick={addFoodItem}\n                disabled={!currentFood.name || !currentFood.quantity || !currentFood.calories}\n              >\n                Add Food\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => setShowFoodForm(false)}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Card>\n        )}\n\n        {foodItems.length > 0 && (\n          <List>\n            {foodItems.map((food) => (\n              <ListItem key={food.id} divider>\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      <FoodIcon color=\"primary\" />\n                      <Typography variant=\"subtitle1\">\n                        {food.name}\n                      </Typography>\n                    </Box>\n                  }\n                  secondary={\n                    <Typography component=\"div\" variant=\"body2\" color=\"text.secondary\">\n                      <Box>\n                        <Chip \n                          label={`${food.quantity}${food.unit}`} \n                          size=\"small\" \n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`${food.calories} cal`} \n                          size=\"small\" \n                          color=\"warning\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`P: ${food.protein}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"success\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`C: ${food.carbs}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"info\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip \n                          label={`F: ${food.fat}g`} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"error\"\n                        />\n                      </Box>\n                    </Typography>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => removeFoodItem(food.id)}\n                    color=\"error\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n\n        {foodItems.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            {success && (\n              <Alert severity=\"success\" sx={{ mb: 2 }}>\n                {success}\n              </Alert>\n            )}\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\n                {error}\n              </Alert>\n            )}\n            \n            <Alert severity=\"info\">\n              <Typography variant=\"body2\">\n                <strong>Meal Summary:</strong> {foodItems.length} food items, \n                {nutrition.totalCalories} calories, \n                {nutrition.totalProtein}g protein, \n                {nutrition.totalCarbs}g carbs, \n                {nutrition.totalFat}g fat\n              </Typography>\n            </Alert>\n            \n            <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"contained\"\n                startIcon={<SaveIcon />}\n                onClick={saveMeal}\n                disabled={!mealData.name || isSaving}\n                size=\"large\"\n              >\n                {isSaving ? 'Saving...' : 'Save Meal'}\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MealLogger;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}