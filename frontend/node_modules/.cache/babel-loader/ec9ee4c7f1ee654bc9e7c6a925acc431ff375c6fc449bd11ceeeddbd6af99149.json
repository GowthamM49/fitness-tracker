{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,TextField,Button,Grid,Alert,Chip,LinearProgress,Paper,Divider}from'@mui/material';import{Add as AddIcon,TrendingUp as TrendingUpIcon,TrendingDown as TrendingDownIcon,CheckCircle as CheckCircleIcon}from'@mui/icons-material';import{progressService}from'../../services/progressService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeightProgressTracker=_ref=>{let{onWeightLogged}=_ref;const[weightEntries,setWeightEntries]=useState([]);const[newWeight,setNewWeight]=useState('');const[newDate,setNewDate]=useState(new Date().toISOString().split('T')[0]);const[notes,setNotes]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');useEffect(()=>{loadWeightEntries();},[]);const loadWeightEntries=async()=>{setLoading(true);setError('');try{const data=await progressService.getEntries();setWeightEntries(data.sort((a,b)=>new Date(b.date)-new Date(a.date)));}catch(error){console.error('Error loading weight entries:',error);setError('Failed to load weight entries. Please try again.');}finally{setLoading(false);}};const addWeightEntry=async()=>{if(!newWeight||!newDate)return;setLoading(true);setError('');try{const weight=parseFloat(newWeight);const entry={weight:weight,date:newDate,notes:notes};const savedEntry=await progressService.createEntry(entry);setWeightEntries(prev=>[savedEntry,...prev]);// Reset form\nsetNewWeight('');setNotes('');// Notify parent component\nif(onWeightLogged){onWeightLogged(savedEntry);}}catch(error){console.error('Error adding weight entry:',error);setError('Failed to add weight entry. Please try again.');}finally{setLoading(false);}};const getProgressStats=()=>{if(weightEntries.length<2){return{firstWeight:0,currentWeight:0,targetWeight:70,totalChange:0,changeFromTarget:0,progressToTarget:0,entriesCount:weightEntries.length,daysTracked:0};}const sortedEntries=[...weightEntries].sort((a,b)=>new Date(a.date)-new Date(b.date));const firstWeight=sortedEntries[0].weight;const currentWeight=sortedEntries[sortedEntries.length-1].weight;const targetWeight=70;// This should come from user's dashboard data\nconst totalChange=currentWeight-firstWeight;const changeFromTarget=currentWeight-targetWeight;const progressToTarget=firstWeight!==targetWeight?(firstWeight-currentWeight)/(firstWeight-targetWeight)*100:0;return{firstWeight,currentWeight,targetWeight,totalChange,changeFromTarget,progressToTarget:Math.max(0,Math.min(100,progressToTarget)),entriesCount:weightEntries.length,daysTracked:Math.ceil((new Date(sortedEntries[sortedEntries.length-1].date)-new Date(sortedEntries[0].date))/(1000*60*60*24))};};const getWeightTrend=()=>{if(weightEntries.length<2)return'stable';const recentEntries=weightEntries.slice(0,3);const weights=recentEntries.map(entry=>entry.weight);let increasing=0;let decreasing=0;for(let i=1;i<weights.length;i++){if(weights[i]>weights[i-1])increasing++;else if(weights[i]<weights[i-1])decreasing++;}if(increasing>decreasing)return'increasing';if(decreasing>increasing)return'decreasing';return'stable';};const getTrendIcon=trend=>{switch(trend){case'increasing':return/*#__PURE__*/_jsx(TrendingUpIcon,{color:\"warning\"});case'decreasing':return/*#__PURE__*/_jsx(TrendingDownIcon,{color:\"success\"});default:return/*#__PURE__*/_jsx(CheckCircleIcon,{color:\"info\"});}};const getTrendColor=trend=>{switch(trend){case'increasing':return'warning';case'decreasing':return'success';default:return'info';}};const getTrendLabel=trend=>{switch(trend){case'increasing':return'Weight Increasing';case'decreasing':return'Weight Decreasing';default:return'Weight Stable';}};const stats=getProgressStats();const trend=getWeightTrend();return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:4,mb:4,borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{mb:3,fontWeight:600},children:\"\\uD83D\\uDCDD Log New Weight Entry\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:4},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Weight (kg)\",type:\"number\",value:newWeight,onChange:e=>setNewWeight(e.target.value),inputProps:{min:0,step:0.1},placeholder:\"e.g., 75.5\",variant:\"outlined\",size:\"large\"})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:4},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Date\",type:\"date\",value:newDate,onChange:e=>setNewDate(e.target.value),InputLabelProps:{shrink:true},variant:\"outlined\",size:\"large\"})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:4},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Notes (optional)\",value:notes,onChange:e=>setNotes(e.target.value),placeholder:\"e.g., After workout, morning weight\",variant:\"outlined\",size:\"large\"})})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:addWeightEntry,disabled:!newWeight||!newDate,size:\"large\",sx:{py:1.5,px:4,fontSize:'1.1rem',borderRadius:2,background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'},children:\"Log Weight Entry\"})]}),stats&&/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:4,mb:4,borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{mb:3,fontWeight:600},children:\"\\uD83D\\uDCCA Progress Summary\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{elevation:0,sx:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',borderRadius:3},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",fontWeight:\"bold\",gutterBottom:true,children:stats.currentWeight||0}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{opacity:0.9},children:\"Current Weight (kg)\"})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{elevation:0,sx:{background:'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)',color:'white',borderRadius:3},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",fontWeight:\"bold\",gutterBottom:true,children:stats.targetWeight||0}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{opacity:0.9},children:\"Target Weight (kg)\"})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{elevation:0,sx:{background:stats.totalChange>0?'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)':'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',color:'white',borderRadius:3},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h3\",fontWeight:\"bold\",gutterBottom:true,children:[stats.totalChange>0?'+':'',(stats.totalChange||0).toFixed(1)]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{opacity:0.9},children:\"Total Change (kg)\"})]})})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:3},children:/*#__PURE__*/_jsx(Card,{elevation:0,sx:{background:'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)',color:'white',borderRadius:3},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",fontWeight:\"bold\",gutterBottom:true,children:stats.entriesCount||0}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{opacity:0.9},children:\"Entries Logged\"})]})})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",fontWeight:500,children:\"Progress to Target Weight\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"primary\",fontWeight:600,children:[(stats.progressToTarget||0).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:stats.progressToTarget||0,sx:{height:12,borderRadius:6,backgroundColor:'#e0e0e0','& .MuiLinearProgress-bar':{borderRadius:6,background:stats.progressToTarget>=100?'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)':'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'}}})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,alignItems:\"center\",flexWrap:\"wrap\",children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:1,alignItems:\"center\",children:[getTrendIcon(trend),/*#__PURE__*/_jsx(Chip,{label:getTrendLabel(trend),color:getTrendColor(trend),size:\"medium\",sx:{fontWeight:500}})]}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",flexItem:true}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"text.secondary\",fontWeight:500,children:[\"\\uD83D\\uDCC5 \",stats.daysTracked||0,\" days tracked\"]})]})]}),weightEntries.length>0&&/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:4,borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{mb:3,fontWeight:600},children:\"\\uD83D\\uDCCB Recent Entries\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:weightEntries.slice(0,6).map(entry=>/*#__PURE__*/_jsx(Grid,{size:{xs:12,sm:6,md:4},children:/*#__PURE__*/_jsx(Card,{elevation:1,sx:{borderRadius:3,transition:'transform 0.2s, box-shadow 0.2s','&:hover':{transform:'translateY(-4px)',boxShadow:4}},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"primary\",fontWeight:\"bold\",gutterBottom:true,children:[entry.weight,\" kg\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"text.secondary\",fontWeight:500,children:[\"\\uD83D\\uDCC5 \",new Date(entry.date).toLocaleDateString()]}),entry.notes&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",display:\"block\",sx:{mt:2,fontStyle:'italic'},children:[\"\\uD83D\\uDCAC \\\"\",entry.notes,\"\\\"\"]})]})})},entry.id))})]}),weightEntries.length===0&&/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:6,textAlign:'center',borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"text.secondary\",gutterBottom:true,children:\"\\uD83C\\uDFAF Start Tracking Your Weight!\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{mb:3},children:\"Log your first weight entry to begin monitoring your progress and see detailed analytics.\"}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{maxWidth:500,mx:'auto',borderRadius:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tip:\"}),\" Consistent weight tracking helps identify patterns and measure progress towards your fitness goals.\"]})})]})]});};export default WeightProgressTracker;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","TextField","Button","Grid","Alert","Chip","LinearProgress","Paper","Divider","Add","AddIcon","TrendingUp","TrendingUpIcon","TrendingDown","TrendingDownIcon","CheckCircle","CheckCircleIcon","progressService","jsx","_jsx","jsxs","_jsxs","WeightProgressTracker","_ref","onWeightLogged","weightEntries","setWeightEntries","newWeight","setNewWeight","newDate","setNewDate","Date","toISOString","split","notes","setNotes","loading","setLoading","error","setError","loadWeightEntries","data","getEntries","sort","a","b","date","console","addWeightEntry","weight","parseFloat","entry","savedEntry","createEntry","prev","getProgressStats","length","firstWeight","currentWeight","targetWeight","totalChange","changeFromTarget","progressToTarget","entriesCount","daysTracked","sortedEntries","Math","max","min","ceil","getWeightTrend","recentEntries","slice","weights","map","increasing","decreasing","i","getTrendIcon","trend","color","getTrendColor","getTrendLabel","stats","children","elevation","sx","p","mb","borderRadius","variant","gutterBottom","fontWeight","container","spacing","size","xs","sm","fullWidth","label","type","value","onChange","e","target","inputProps","step","placeholder","InputLabelProps","shrink","startIcon","onClick","disabled","py","px","fontSize","background","md","textAlign","opacity","toFixed","display","justifyContent","alignItems","height","backgroundColor","gap","flexWrap","orientation","flexItem","transition","transform","boxShadow","toLocaleDateString","mt","fontStyle","id","severity","maxWidth","mx"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/frontend/src/components/progress/WeightProgressTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Alert,\n  Chip,\n  LinearProgress,\n  Paper,\n  Divider\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  CheckCircle as CheckCircleIcon\n} from '@mui/icons-material';\nimport { progressService } from '../../services/progressService';\n\nconst WeightProgressTracker = ({ onWeightLogged }) => {\n  const [weightEntries, setWeightEntries] = useState([]);\n  const [newWeight, setNewWeight] = useState('');\n  const [newDate, setNewDate] = useState(new Date().toISOString().split('T')[0]);\n  const [notes, setNotes] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    loadWeightEntries();\n  }, []);\n\n  const loadWeightEntries = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const data = await progressService.getEntries();\n      setWeightEntries(data.sort((a, b) => new Date(b.date) - new Date(a.date)));\n    } catch (error) {\n      console.error('Error loading weight entries:', error);\n      setError('Failed to load weight entries. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addWeightEntry = async () => {\n    if (!newWeight || !newDate) return;\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const weight = parseFloat(newWeight);\n      const entry = {\n        weight: weight,\n        date: newDate,\n        notes: notes\n      };\n\n      const savedEntry = await progressService.createEntry(entry);\n      \n      setWeightEntries(prev => [savedEntry, ...prev]);\n\n      // Reset form\n      setNewWeight('');\n      setNotes('');\n\n      // Notify parent component\n      if (onWeightLogged) {\n        onWeightLogged(savedEntry);\n      }\n    } catch (error) {\n      console.error('Error adding weight entry:', error);\n      setError('Failed to add weight entry. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProgressStats = () => {\n    if (weightEntries.length < 2) {\n      return {\n        firstWeight: 0,\n        currentWeight: 0,\n        targetWeight: 70,\n        totalChange: 0,\n        changeFromTarget: 0,\n        progressToTarget: 0,\n        entriesCount: weightEntries.length,\n        daysTracked: 0\n      };\n    }\n\n    const sortedEntries = [...weightEntries].sort((a, b) => new Date(a.date) - new Date(b.date));\n    const firstWeight = sortedEntries[0].weight;\n    const currentWeight = sortedEntries[sortedEntries.length - 1].weight;\n    const targetWeight = 70; // This should come from user's dashboard data\n\n    const totalChange = currentWeight - firstWeight;\n    const changeFromTarget = currentWeight - targetWeight;\n    const progressToTarget = firstWeight !== targetWeight \n      ? ((firstWeight - currentWeight) / (firstWeight - targetWeight)) * 100 \n      : 0;\n\n    return {\n      firstWeight,\n      currentWeight,\n      targetWeight,\n      totalChange,\n      changeFromTarget,\n      progressToTarget: Math.max(0, Math.min(100, progressToTarget)),\n      entriesCount: weightEntries.length,\n      daysTracked: Math.ceil((new Date(sortedEntries[sortedEntries.length - 1].date) - new Date(sortedEntries[0].date)) / (1000 * 60 * 60 * 24))\n    };\n  };\n\n  const getWeightTrend = () => {\n    if (weightEntries.length < 2) return 'stable';\n    \n    const recentEntries = weightEntries.slice(0, 3);\n    const weights = recentEntries.map(entry => entry.weight);\n    \n    let increasing = 0;\n    let decreasing = 0;\n    \n    for (let i = 1; i < weights.length; i++) {\n      if (weights[i] > weights[i-1]) increasing++;\n      else if (weights[i] < weights[i-1]) decreasing++;\n    }\n    \n    if (increasing > decreasing) return 'increasing';\n    if (decreasing > increasing) return 'decreasing';\n    return 'stable';\n  };\n\n  const getTrendIcon = (trend) => {\n    switch (trend) {\n      case 'increasing': return <TrendingUpIcon color=\"warning\" />;\n      case 'decreasing': return <TrendingDownIcon color=\"success\" />;\n      default: return <CheckCircleIcon color=\"info\" />;\n    }\n  };\n\n  const getTrendColor = (trend) => {\n    switch (trend) {\n      case 'increasing': return 'warning';\n      case 'decreasing': return 'success';\n      default: return 'info';\n    }\n  };\n\n  const getTrendLabel = (trend) => {\n    switch (trend) {\n      case 'increasing': return 'Weight Increasing';\n      case 'decreasing': return 'Weight Decreasing';\n      default: return 'Weight Stable';\n    }\n  };\n\n  const stats = getProgressStats();\n  const trend = getWeightTrend();\n\n  return (\n    <Box>\n      {/* Input Section */}\n      <Paper elevation={2} sx={{ p: 4, mb: 4, borderRadius: 3 }}>\n        <Typography variant=\"h5\" gutterBottom sx={{ mb: 3, fontWeight: 600 }}>\n          📝 Log New Weight Entry\n        </Typography>\n\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid size={{ xs: 12, sm: 4 }}>\n            <TextField\n              fullWidth\n              label=\"Weight (kg)\"\n              type=\"number\"\n              value={newWeight}\n              onChange={(e) => setNewWeight(e.target.value)}\n              inputProps={{ min: 0, step: 0.1 }}\n              placeholder=\"e.g., 75.5\"\n              variant=\"outlined\"\n              size=\"large\"\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 4 }}>\n            <TextField\n              fullWidth\n              label=\"Date\"\n              type=\"date\"\n              value={newDate}\n              onChange={(e) => setNewDate(e.target.value)}\n              InputLabelProps={{ shrink: true }}\n              variant=\"outlined\"\n              size=\"large\"\n            />\n          </Grid>\n          \n          <Grid size={{ xs: 12, sm: 4 }}>\n            <TextField\n              fullWidth\n              label=\"Notes (optional)\"\n              value={notes}\n              onChange={(e) => setNotes(e.target.value)}\n              placeholder=\"e.g., After workout, morning weight\"\n              variant=\"outlined\"\n              size=\"large\"\n            />\n          </Grid>\n        </Grid>\n\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={addWeightEntry}\n          disabled={!newWeight || !newDate}\n          size=\"large\"\n          sx={{ \n            py: 1.5, \n            px: 4, \n            fontSize: '1.1rem',\n            borderRadius: 2,\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n          }}\n        >\n          Log Weight Entry\n        </Button>\n      </Paper>\n\n      {/* Progress Summary Section */}\n      {stats && (\n        <Paper elevation={2} sx={{ p: 4, mb: 4, borderRadius: 3 }}>\n          <Typography variant=\"h5\" gutterBottom sx={{ mb: 3, fontWeight: 600 }}>\n            📊 Progress Summary\n          </Typography>\n          \n          <Grid container spacing={3} sx={{ mb: 4 }}>\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Card elevation={0} sx={{ \n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', \n                color: 'white',\n                borderRadius: 3\n              }}>\n                <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                  <Typography variant=\"h3\" fontWeight=\"bold\" gutterBottom>\n                    {stats.currentWeight || 0}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                    Current Weight (kg)\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            \n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Card elevation={0} sx={{ \n                background: 'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)', \n                color: 'white',\n                borderRadius: 3\n              }}>\n                <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                  <Typography variant=\"h3\" fontWeight=\"bold\" gutterBottom>\n                    {stats.targetWeight || 0}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                    Target Weight (kg)\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            \n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Card elevation={0} sx={{ \n                background: stats.totalChange > 0 \n                  ? 'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)'\n                  : 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)', \n                color: 'white',\n                borderRadius: 3\n              }}>\n                <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                  <Typography variant=\"h3\" fontWeight=\"bold\" gutterBottom>\n                    {stats.totalChange > 0 ? '+' : ''}{(stats.totalChange || 0).toFixed(1)}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                    Total Change (kg)\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            \n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n              <Card elevation={0} sx={{ \n                background: 'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)', \n                color: 'white',\n                borderRadius: 3\n              }}>\n                <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                  <Typography variant=\"h3\" fontWeight=\"bold\" gutterBottom>\n                    {stats.entriesCount || 0}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                    Entries Logged\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n\n          {/* Progress Bar */}\n          <Box sx={{ mb: 3 }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"h6\" fontWeight={500}>\n                Progress to Target Weight\n              </Typography>\n              <Typography variant=\"h6\" color=\"primary\" fontWeight={600}>\n                {(stats.progressToTarget || 0).toFixed(1)}%\n              </Typography>\n            </Box>\n            <LinearProgress \n              variant=\"determinate\" \n              value={stats.progressToTarget || 0} \n              sx={{ \n                height: 12, \n                borderRadius: 6,\n                backgroundColor: '#e0e0e0',\n                '& .MuiLinearProgress-bar': {\n                  borderRadius: 6,\n                  background: stats.progressToTarget >= 100 \n                    ? 'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)'\n                    : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n                }\n              }}\n            />\n          </Box>\n\n          {/* Trend and Stats */}\n          <Box display=\"flex\" gap={2} alignItems=\"center\" flexWrap=\"wrap\">\n            <Box display=\"flex\" gap={1} alignItems=\"center\">\n              {getTrendIcon(trend)}\n              <Chip \n                label={getTrendLabel(trend)} \n                color={getTrendColor(trend)}\n                size=\"medium\"\n                sx={{ fontWeight: 500 }}\n              />\n            </Box>\n            <Divider orientation=\"vertical\" flexItem />\n            <Typography variant=\"body1\" color=\"text.secondary\" fontWeight={500}>\n              📅 {stats.daysTracked || 0} days tracked\n            </Typography>\n          </Box>\n        </Paper>\n      )}\n\n      {/* Recent Entries Section */}\n      {weightEntries.length > 0 && (\n        <Paper elevation={2} sx={{ p: 4, borderRadius: 3 }}>\n          <Typography variant=\"h5\" gutterBottom sx={{ mb: 3, fontWeight: 600 }}>\n            📋 Recent Entries\n          </Typography>\n          \n          <Grid container spacing={3}>\n            {weightEntries.slice(0, 6).map((entry) => (\n              <Grid size={{ xs: 12, sm: 6, md: 4 }} key={entry.id}>\n                <Card elevation={1} sx={{ \n                  borderRadius: 3,\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4\n                  }\n                }}>\n                  <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                    <Typography variant=\"h4\" color=\"primary\" fontWeight=\"bold\" gutterBottom>\n                      {entry.weight} kg\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"text.secondary\" fontWeight={500}>\n                      📅 {new Date(entry.date).toLocaleDateString()}\n                    </Typography>\n                    {entry.notes && (\n                      <Typography variant=\"body2\" display=\"block\" sx={{ mt: 2, fontStyle: 'italic' }}>\n                        💬 \"{entry.notes}\"\n                      </Typography>\n                    )}\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      )}\n\n      {/* Empty State */}\n      {weightEntries.length === 0 && (\n        <Paper elevation={2} sx={{ p: 6, textAlign: 'center', borderRadius: 3 }}>\n          <Typography variant=\"h4\" color=\"text.secondary\" gutterBottom>\n            🎯 Start Tracking Your Weight!\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Log your first weight entry to begin monitoring your progress and see detailed analytics.\n          </Typography>\n          <Alert severity=\"info\" sx={{ maxWidth: 500, mx: 'auto', borderRadius: 2 }}>\n            <Typography variant=\"body2\">\n              <strong>Tip:</strong> Consistent weight tracking helps identify patterns and measure progress towards your fitness goals.\n            </Typography>\n          </Alert>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default WeightProgressTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}