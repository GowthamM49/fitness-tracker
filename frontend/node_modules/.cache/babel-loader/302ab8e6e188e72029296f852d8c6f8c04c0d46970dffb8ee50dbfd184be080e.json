{"ast":null,"code":"import api from './api';\nexport const recommendationService = {\n  // Get personalized meal recommendations\n  async getMealRecommendations() {\n    try {\n      const {\n        data\n      } = await api.get('/recommendations/meals');\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations:', error);\n      throw error;\n    }\n  },\n  // Get recommendations for specific meal type\n  async getMealRecommendationsByType(mealType) {\n    try {\n      const {\n        data\n      } = await api.get(`/recommendations/meals/${mealType}`);\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations by type:', error);\n      throw error;\n    }\n  },\n  // Get breakfast recommendations\n  async getBreakfastRecommendations() {\n    return this.getMealRecommendationsByType('breakfast');\n  },\n  // Get lunch recommendations\n  async getLunchRecommendations() {\n    return this.getMealRecommendationsByType('lunch');\n  },\n  // Get dinner recommendations\n  async getDinnerRecommendations() {\n    return this.getMealRecommendationsByType('dinner');\n  },\n  // Get snack recommendations\n  async getSnackRecommendations() {\n    return this.getMealRecommendationsByType('snack');\n  }\n};\nexport default recommendationService;","map":{"version":3,"names":["api","recommendationService","getMealRecommendations","data","get","error","console","getMealRecommendationsByType","mealType","getBreakfastRecommendations","getLunchRecommendations","getDinnerRecommendations","getSnackRecommendations"],"sources":["C:/Users/gowth_tq3ir2j/OneDrive/Documents/project 3rd year/one credit/Fitness Tracker/src/services/recommendationService.js"],"sourcesContent":["import api from './api';\n\nexport const recommendationService = {\n  // Get personalized meal recommendations\n  async getMealRecommendations() {\n    try {\n      const { data } = await api.get('/recommendations/meals');\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations:', error);\n      throw error;\n    }\n  },\n\n  // Get recommendations for specific meal type\n  async getMealRecommendationsByType(mealType) {\n    try {\n      const { data } = await api.get(`/recommendations/meals/${mealType}`);\n      return data;\n    } catch (error) {\n      console.error('Error fetching meal recommendations by type:', error);\n      throw error;\n    }\n  },\n\n  // Get breakfast recommendations\n  async getBreakfastRecommendations() {\n    return this.getMealRecommendationsByType('breakfast');\n  },\n\n  // Get lunch recommendations\n  async getLunchRecommendations() {\n    return this.getMealRecommendationsByType('lunch');\n  },\n\n  // Get dinner recommendations\n  async getDinnerRecommendations() {\n    return this.getMealRecommendationsByType('dinner');\n  },\n\n  // Get snack recommendations\n  async getSnackRecommendations() {\n    return this.getMealRecommendationsByType('snack');\n  }\n};\n\nexport default recommendationService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,qBAAqB,GAAG;EACnC;EACA,MAAMC,sBAAsBA,CAAA,EAAG;IAC7B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,wBAAwB,CAAC;MACxD,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,4BAA4BA,CAACC,QAAQ,EAAE;IAC3C,IAAI;MACF,MAAM;QAAEL;MAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,0BAA0BI,QAAQ,EAAE,CAAC;MACpE,OAAOL,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,2BAA2BA,CAAA,EAAG;IAClC,OAAO,IAAI,CAACF,4BAA4B,CAAC,WAAW,CAAC;EACvD,CAAC;EAED;EACA,MAAMG,uBAAuBA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACH,4BAA4B,CAAC,OAAO,CAAC;EACnD,CAAC;EAED;EACA,MAAMI,wBAAwBA,CAAA,EAAG;IAC/B,OAAO,IAAI,CAACJ,4BAA4B,CAAC,QAAQ,CAAC;EACpD,CAAC;EAED;EACA,MAAMK,uBAAuBA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACL,4BAA4B,CAAC,OAAO,CAAC;EACnD;AACF,CAAC;AAED,eAAeN,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}